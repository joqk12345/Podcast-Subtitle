0
0:00:00.000 --> 0:00:03.580
大家好欢迎来到后互联网时代的乱谈

1
0:00:03.840 --> 0:00:07.160
今天我来做主持人我是庄表伟

2
0:00:07.420 --> 0:00:09.720
今天也是一期番外

3
0:00:09.980 --> 0:00:11.260
特别请到了

4
0:00:11.520 --> 0:00:15.100
咱们的老朋友上次也来一起聊天的李大维David

5
0:00:15.860 --> 0:00:18.680
还有王伟老师

6
0:00:19.700 --> 0:00:20.220
大家好

7
0:00:20.740 --> 0:00:22.780
其实李俊也在

8
0:00:23.040 --> 0:00:23.800
在呢在呢

9
0:00:24.320 --> 0:00:25.860
大家好我们就

10
0:00:26.100 --> 0:00:27.140
开始聊这个

11
0:00:27.140 --> 0:00:31.740
今天的话题其实非常有意思因为前两天我跟那个

12
0:00:32.000 --> 0:00:34.560
David有一次线下碰面然后就

13
0:00:34.820 --> 0:00:37.120
在一个聚会里面聊了很多乱七八糟的事情

14
0:00:37.380 --> 0:00:41.480
其实主要也不叫聊天就主要听David讲故事

15
0:00:41.720 --> 0:00:43.780
主要是来聊的是一些

16
0:00:44.280 --> 0:00:45.820
失落的科技

17
0:00:46.340 --> 0:00:46.840
就是

18
0:00:47.100 --> 0:00:48.900
曾经有一些科技很厉害

19
0:00:49.920 --> 0:00:51.460
但是现在都没有人知道了

20
0:00:51.960 --> 0:00:55.800
或者在主流的叙事当中他们被遗忘了

21
0:00:55.800 --> 0:00:58.100
主流叙事的一条线索

22
0:00:58.360 --> 0:01:03.980
感觉都是干干净净清清爽爽的就一直发展到了今天高歌猛进的到了今天

23
0:01:04.240 --> 0:01:05.520
但其实还有很多

24
0:01:06.040 --> 0:01:07.320
失败的历史

25
0:01:08.600 --> 0:01:09.620
被人遗忘的历史

26
0:01:10.640 --> 0:01:12.440
其实也有一些很有趣的故事

27
0:01:12.700 --> 0:01:13.460
值得拿来说

28
0:01:13.980 --> 0:01:16.780
所以今天就拉David过来聊这些事情

29
0:01:17.300 --> 0:01:19.100
但是呢我还是想先请David

30
0:01:19.340 --> 0:01:20.620
先简单的介绍一下

31
0:01:20.880 --> 0:01:22.680
大概你的经历呀

32
0:01:22.940 --> 0:01:24.980
你的这个教育背景啊然后

33
0:01:24.980 --> 0:01:28.820
很多事情其实你是亲历者所以我们先从这个开始讲起

34
0:01:29.320 --> 0:01:29.840
好吧

35
0:01:30.860 --> 0:01:33.680
那我自己的话

36
0:01:34.200 --> 0:01:34.960
我是

37
0:01:35.220 --> 0:01:36.240
90年

38
0:01:37.000 --> 0:01:38.540
在台湾高中毕业

39
0:01:39.320 --> 0:01:42.380
然后去美国读计算机嘛

40
0:01:45.200 --> 0:01:46.480
在那个之前

41
0:01:46.740 --> 0:01:50.060
就开始高中的时候就玩西玩这些

42
0:01:50.580 --> 0:01:51.860
玩计算机的东西

43
0:01:52.120 --> 0:01:53.900
那高中毕业以后就觉得

44
0:01:53.900 --> 0:01:55.700
那时候90年嘛

45
0:01:55.960 --> 0:01:56.980
然后

46
0:01:57.480 --> 0:01:59.020
这个要读计算机就

47
0:01:59.280 --> 0:02:00.300
去美国读吧

48
0:02:00.820 --> 0:02:02.600
那我那时候去的是

49
0:02:02.860 --> 0:02:04.400
在洛杉矶的南加大

50
0:02:06.700 --> 0:02:07.220
那

51
0:02:07.480 --> 0:02:09.520
其实现在已经很难想像了

52
0:02:10.040 --> 0:02:11.820
就即使当年

53
0:02:12.080 --> 0:02:15.400
我90年到美国的时候读这个专科

54
0:02:15.920 --> 0:02:16.440
其实

55
0:02:16.680 --> 0:02:21.300
那时候大家也不把这个专科当作是社会上很火的专科

56
0:02:21.800 --> 0:02:23.600
就是普通的一个工程

57
0:02:23.600 --> 0:02:24.880
工程的专科

58
0:02:25.380 --> 0:02:27.440
那当然大家知道90年代

59
0:02:28.200 --> 0:02:28.720
中期

60
0:02:29.220 --> 0:02:30.760
其实互联网开始爆炸

61
0:02:31.540 --> 0:02:32.300
那

62
0:02:32.560 --> 0:02:34.340
从互联网从这个

63
0:02:35.120 --> 0:02:35.880
我们在

64
0:02:36.140 --> 0:02:37.160
学校里面

65
0:02:37.420 --> 0:02:39.720
才能用的这些网络

66
0:02:39.980 --> 0:02:43.560
那一下子跳到这个大众的面前然后

67
0:02:45.860 --> 0:02:46.640
到

68
0:02:47.140 --> 0:02:47.920
95年

69
0:02:48.420 --> 0:02:48.940
我

70
0:02:49.200 --> 0:02:49.960
开始读博

71
0:02:50.980 --> 0:02:52.260
然后但是

72
0:02:52.260 --> 0:02:55.580
那时候我们那时候互联网产业实在是太发达了

73
0:02:56.360 --> 0:02:59.420
产业里面的软件工程师已经不够用了

74
0:02:59.680 --> 0:03:02.500
所以他们开始伸手到这个学校里面

75
0:03:03.260 --> 0:03:05.320
那我的指导教授

76
0:03:05.580 --> 0:03:06.860
那时候就被挖走了

77
0:03:07.880 --> 0:03:12.220
过不了多久指导教授就回来挖博士生了

78
0:03:12.740 --> 0:03:13.260
OK

79
0:03:13.500 --> 0:03:15.560
然后就想说那也不错

80
0:03:15.820 --> 0:03:16.320
这个

81
0:03:16.840 --> 0:03:17.600
反正流行嘛

82
0:03:17.860 --> 0:03:18.880
大家就先把

83
0:03:19.400 --> 0:03:20.940
博士先放着不读

84
0:03:20.940 --> 0:03:23.760
先放着不读先去互联网读读运气

85
0:03:24.780 --> 0:03:25.540
那

86
0:03:25.800 --> 0:03:29.380
读着读着然后念着念着哎呀我这个

87
0:03:29.640 --> 0:03:31.940
这个创业公司做完我就再回去吧

88
0:03:32.200 --> 0:03:34.000
我就好好的回去把博士读完

89
0:03:34.760 --> 0:03:38.100
然后念着念着放着放着

90
0:03:38.600 --> 0:03:39.380
这个

91
0:03:39.620 --> 0:03:41.160
20几年就过去了

92
0:03:43.460 --> 0:03:46.800
毕竟还是在名门正派的地方待过的

93
0:03:47.300 --> 0:03:50.120
毕竟毕竟不是

94
0:03:50.120 --> 0:03:51.660
不是半路出家

95
0:03:54.460 --> 0:03:57.540
但是我在学校的时候

96
0:03:58.060 --> 0:03:59.840
其实一直有一个

97
0:04:00.100 --> 0:04:01.120
习惯

98
0:04:01.380 --> 0:04:03.420
我喜欢跟

99
0:04:03.940 --> 0:04:06.760
这个朋友跑到那时候这个

100
0:04:07.780 --> 0:04:08.800
美国有些

101
0:04:09.320 --> 0:04:10.860
这个计算机的书店

102
0:04:11.620 --> 0:04:13.420
那他们都有很老的书

103
0:04:13.920 --> 0:04:17.500
那我们可以去那边可以买到70年代

104
0:04:17.500 --> 0:04:21.080
这个80年代出的这些电脑书

105
0:04:21.840 --> 0:04:22.880
那也

106
0:04:23.380 --> 0:04:24.400
养成了一个习惯

107
0:04:24.660 --> 0:04:26.960
就是蛮喜欢去

108
0:04:27.220 --> 0:04:28.760
收集这些东西的

109
0:04:29.280 --> 0:04:32.600
我们现在流行的很多事情包括Linux的兴起

110
0:04:33.120 --> 0:04:34.400
包括这个

111
0:04:34.900 --> 0:04:37.460
包括当时Web的出现

112
0:04:37.720 --> 0:04:38.480
他在整个

113
0:04:38.740 --> 0:04:41.040
背景环境下我们今天有一个

114
0:04:41.820 --> 0:04:43.860
对当初完全不同的叙述

115
0:04:44.380 --> 0:04:46.420
这个就是我们所谓的三国志

116
0:04:46.420 --> 0:04:51.540
这个是正式朝廷定下来的这个历史长什么样

117
0:04:52.040 --> 0:04:53.080
但是

118
0:04:53.320 --> 0:04:54.860
根据中国的这个

119
0:04:55.120 --> 0:04:58.440
传统我们除了三国志以外我们还有三国演义

120
0:04:58.960 --> 0:05:01.000
三国演义的话就是

121
0:05:01.520 --> 0:05:02.540
这个也许

122
0:05:03.320 --> 0:05:04.080
当年

123
0:05:04.340 --> 0:05:06.380
一些没有被记录证实的事情

124
0:05:06.900 --> 0:05:09.200
那在计算机这个行业里面

125
0:05:09.460 --> 0:05:11.240
我们这个行业其实也不短的

126
0:05:11.760 --> 0:05:12.780
这个从

127
0:05:13.800 --> 0:05:15.860
50年代的IBM到现在

128
0:05:15.860 --> 0:05:18.160
我们也是一个70年的产业了

129
0:05:18.680 --> 0:05:23.280
可能我年轻的时候我们还可以讲说这个产业太年轻不值得考古

130
0:05:24.060 --> 0:05:25.840
但是走到现在

131
0:05:26.360 --> 0:05:28.160
我们应该开始有考古了

132
0:05:28.660 --> 0:05:30.960
我们应该开始去看看过去

133
0:05:31.480 --> 0:05:32.500
走错的路

134
0:05:32.760 --> 0:05:34.560
过去没走下去的路

135
0:05:35.060 --> 0:05:37.120
或者是历史为什么是那样子发展

136
0:05:37.620 --> 0:05:38.140
所以

137
0:05:38.400 --> 0:05:39.940
刚好有这个机会嘛

138
0:05:40.180 --> 0:05:41.980
那跟老庄聊就是

139
0:05:42.480 --> 0:05:44.800
我们也需要有一个

140
0:05:44.800 --> 0:05:46.840
IT的野史

141
0:05:47.360 --> 0:05:49.160
我们也需要一个IT的演绎

142
0:05:49.920 --> 0:05:54.020
其实我可以把它叫做比较严肃的八卦

143
0:05:55.300 --> 0:05:59.140
当然还是从八卦的角度出发想问出一些有意思的东西

144
0:05:59.640 --> 0:06:01.960
比如说我们现在

145
0:06:03.480 --> 0:06:06.560
一直在用web然后现在web3都出来了

146
0:06:06.820 --> 0:06:12.700
但其实我们都知道他最早最早互联网刚刚起来的时候有这种http呀

147
0:06:13.220 --> 0:06:14.240
这个

148
0:06:14.240 --> 0:06:16.040
web呀email呀

149
0:06:16.300 --> 0:06:17.580
RFC呀

150
0:06:17.820 --> 0:06:21.420
这些都是我们当年耳熟能详的一些关键词

151
0:06:22.180 --> 0:06:23.460
现在好像

152
0:06:23.980 --> 0:06:24.740
都不太重要了

153
0:06:25.260 --> 0:06:27.040
但其实当时我们

154
0:06:27.300 --> 0:06:27.820
就是说

155
0:06:28.060 --> 0:06:30.380
其实那天我们聊到有一个人叫做

156
0:06:30.880 --> 0:06:31.660
Ted Nielsen

157
0:06:32.420 --> 0:06:32.940
这个人

158
0:06:33.440 --> 0:06:37.020
出生于这个我后来回去查数据嘛出生于19

159
0:06:37.280 --> 0:06:38.060
37年

160
0:06:38.820 --> 0:06:40.360
然后到现在还健在

161
0:06:40.620 --> 0:06:41.640
然后是

162
0:06:41.640 --> 0:06:45.740
他不仅仅是一个计算机科学家

163
0:06:46.000 --> 0:06:47.520
他还是一个

164
0:06:47.780 --> 0:06:48.300
哲学家

165
0:06:49.580 --> 0:06:51.880
而且的话呢他在这个

166
0:06:53.680 --> 0:06:59.300
http这个web这个领域他是被称之为http这个协议之父的

167
0:06:59.820 --> 0:07:01.360
但是这还不重要

168
0:07:01.620 --> 0:07:04.940
我另外还看过一本书叫黑客这本书非常好

169
0:07:04.940 --> 0:07:11.080
说在描述这个叫Ted Nielsen写的一本书名字就叫计算机解放

170
0:07:12.880 --> 0:07:15.940
这本书呢是出版于这个1974年

171
0:07:16.460 --> 0:07:19.540
这本书被描述为计算机革命的史诗

172
0:07:19.800 --> 0:07:21.580
黑客梦想的圣经

173
0:07:22.100 --> 0:07:22.860
以及

174
0:07:23.120 --> 0:07:29.260
Nielsen固执到没有其他人认为这个是一个好主意的时候就已经出版了它

175
0:07:31.320 --> 0:07:32.080
这个是

176
0:07:32.080 --> 0:07:36.180
通常被认为是关于个人计算机的第一本书

177
0:07:37.460 --> 0:07:38.480
非常非常的

178
0:07:38.740 --> 0:07:41.040
非常玄乎特别厉害的一个事情

179
0:07:41.300 --> 0:07:42.840
里面这个叫什么

180
0:07:43.080 --> 0:07:46.680
Nielsen在这本书里面其实还提到了很多非常领先的

181
0:07:46.920 --> 0:07:49.480
到现在都觉得非常厉害的一些概念

182
0:07:50.000 --> 0:07:52.300
那个David你当年有没有

183
0:07:52.560 --> 0:07:53.840
很早就看到过这本书

184
0:07:54.860 --> 0:07:56.920
有没有关于这本书的印象

185
0:07:57.420 --> 0:08:01.000
Ted Nielsen的书我们那时候都有看过

186
0:08:01.000 --> 0:08:05.100
就是那个时代如果对一些

187
0:08:05.360 --> 0:08:07.140
计算机的历史有兴趣的

188
0:08:07.400 --> 0:08:10.220
那很多很多就会推荐他的书

189
0:08:12.000 --> 0:08:14.820
刚刚讲的Ted Nielsen其实他在70年代

190
0:08:15.340 --> 0:08:17.120
他就把这个Hypertext

191
0:08:17.380 --> 0:08:19.940
超链接的这个想法就提出来了

192
0:08:20.200 --> 0:08:22.760
他在70年代做这件事情其实他有

193
0:08:23.020 --> 0:08:24.560
没有足够的算力

194
0:08:24.800 --> 0:08:26.340
但是有足够的想像力

195
0:08:26.600 --> 0:08:28.140
先把想法提出来

196
0:08:28.400 --> 0:08:29.160
然后

197
0:08:29.160 --> 0:08:31.200
等算力慢慢的跟上来

198
0:08:31.980 --> 0:08:34.020
所以当年他提出这个

199
0:08:34.280 --> 0:08:36.320
超链接这个Hyperlink的时候

200
0:08:36.840 --> 0:08:38.640
Hyperlink Hypertext的时候

201
0:08:39.140 --> 0:08:41.960
基本上他想像的是所有的文档之间

202
0:08:42.220 --> 0:08:43.500
是双向的链接

203
0:08:43.760 --> 0:08:45.800
我的这个文档的这一小段

204
0:08:46.060 --> 0:08:47.600
我可以把它连到你的文档

205
0:08:47.840 --> 0:08:49.900
当我把它连到你的文档的时候

206
0:08:50.400 --> 0:08:51.940
它会反向的链接回来

207
0:08:52.960 --> 0:08:56.800
那我随时知道我在编辑的这个文档里面有多少人

208
0:08:56.800 --> 0:08:59.100
在使用有多少人在参考

209
0:08:59.360 --> 0:09:02.680
那我也可以这样子的双向的大家去互相了解

210
0:09:02.940 --> 0:09:05.500
第一个创新的就是文档跟文档之间可以

211
0:09:05.760 --> 0:09:07.040
跳过来跳过去

212
0:09:07.560 --> 0:09:08.840
然后第二个是

213
0:09:09.080 --> 0:09:09.860
文档之间

214
0:09:10.120 --> 0:09:11.640
跳的这个链接是双向的

215
0:09:11.900 --> 0:09:12.920
第三个就是

216
0:09:13.180 --> 0:09:16.520
更多的就是这些文档之间的版权的管理

217
0:09:17.280 --> 0:09:19.080
使用方法的管理

218
0:09:19.580 --> 0:09:20.860
他全部都想好了

219
0:09:21.380 --> 0:09:21.880
全部都

220
0:09:22.140 --> 0:09:23.160
放在那边了

221
0:09:23.680 --> 0:09:25.480
这本书是70年代出的

222
0:09:25.720 --> 0:09:26.240
那现在

223
0:09:26.240 --> 0:09:28.800
可能对现在人来讲很难想像70年代的

224
0:09:29.060 --> 0:09:29.560
算力

225
0:09:30.340 --> 0:09:31.620
是多么的贫乏

226
0:09:31.880 --> 0:09:34.180
那不过他想法非常的超前

227
0:09:34.440 --> 0:09:36.220
那他也启动了一个项目

228
0:09:36.480 --> 0:09:37.240
叫Zanadu

229
0:09:37.500 --> 0:09:40.320
就是要实现他的这个hypertext的想法

230
0:09:40.840 --> 0:09:42.360
与其说他是一个

231
0:09:42.880 --> 0:09:45.440
计算机学家不如说他是一个哲学家

232
0:09:45.960 --> 0:09:47.240
他是一个文学家

233
0:09:47.480 --> 0:09:49.020
他的文笔真的非常的好

234
0:09:49.280 --> 0:09:51.080
你可以看到他的很多想像力

235
0:09:51.320 --> 0:09:53.120
另外一个Nelson有名的就是

236
0:09:53.380 --> 0:09:54.400
他也是硅谷

237
0:09:54.660 --> 0:09:55.940
最早开始推动的

238
0:09:55.940 --> 0:09:57.720
使用LSD的

239
0:09:57.980 --> 0:09:58.760
一群人

240
0:09:59.260 --> 0:10:00.800
LSD吗

241
0:10:01.560 --> 0:10:03.880
对那个年代不算

242
0:10:04.120 --> 0:10:07.460
LSD被发现的时候他并不是一个禁药

243
0:10:07.720 --> 0:10:08.740
他是一个

244
0:10:09.240 --> 0:10:11.040
在那个时候被当作是

245
0:10:11.300 --> 0:10:13.340
能够把人的心灵打开

246
0:10:14.120 --> 0:10:16.420
然后把你的解放力释放出来的

247
0:10:16.680 --> 0:10:18.980
就是CP4都喜欢的那种

248
0:10:19.240 --> 0:10:22.560
对那为什么要提到这个就是

249
0:10:23.080 --> 0:10:24.360
做的这两件事情

250
0:10:24.360 --> 0:10:27.180
对hypertext提出来的东西跟

251
0:10:27.440 --> 0:10:28.980
他对LSD的推动

252
0:10:29.740 --> 0:10:32.560
其实非常的影响了我们今天的生活

253
0:10:32.820 --> 0:10:33.840
LSD先讲吧

254
0:10:34.360 --> 0:10:37.420
你如果去网上查乔布斯跟LSD

255
0:10:37.940 --> 0:10:40.240
乔布斯曾经讲过他一生中

256
0:10:40.500 --> 0:10:41.000
对他

257
0:10:41.520 --> 0:10:43.320
人生影响最大的事情

258
0:10:43.820 --> 0:10:45.360
就是他用了LSD

259
0:10:46.120 --> 0:10:47.660
把他的心灵打开了

260
0:10:49.200 --> 0:10:53.800
我看到的版本是说他是什么去研究禅宗啊什么的

261
0:10:53.800 --> 0:10:55.840
听起来很正派的样子

262
0:10:56.100 --> 0:11:00.460
对他们不太分这个原来比特斯也去印度朝圣

263
0:11:00.720 --> 0:11:04.300
然后也是LSD他们认为这个是冥想的一种方法

264
0:11:04.800 --> 0:11:05.320
OK

265
0:11:05.580 --> 0:11:09.160
他们那个时代都是这样子更重要的就是这个

266
0:11:09.420 --> 0:11:11.200
这个Tenny Olson的hypertext

267
0:11:11.460 --> 0:11:12.240
70年初

268
0:11:12.740 --> 0:11:13.760
出版的这个书

269
0:11:14.540 --> 0:11:16.080
那到了80年

270
0:11:16.320 --> 0:11:16.840
末

271
0:11:17.360 --> 0:11:18.120
90年初

272
0:11:18.120 --> 0:11:24.260
在这个瑞士的CERN有个科研人员被CERN派到了讲说你要去做一个文档管理系统

273
0:11:24.780 --> 0:11:30.920
所以我们CERN的这些这么多的文档可以在互联网上被管理其实那个时代我们已经有

274
0:11:31.180 --> 0:11:33.480
这种互联网上面共享的系统

275
0:11:34.000 --> 0:11:35.280
从最简单的

276
0:11:35.520 --> 0:11:37.840
FTP文档下载的这个协议

277
0:11:38.080 --> 0:11:39.120
到比较

278
0:11:39.360 --> 0:11:40.640
复杂的一个叫Gopher

279
0:11:42.180 --> 0:11:43.980
Gopher其实定义的很好

280
0:11:44.480 --> 0:11:45.520
但是

281
0:11:46.020 --> 0:11:47.040
他是全文本的

282
0:11:47.040 --> 0:11:48.060
Tim Berners-Lee

283
0:11:48.320 --> 0:11:50.360
就是那个时候被

284
0:11:50.620 --> 0:11:51.140
派去

285
0:11:51.640 --> 0:11:53.180
做这个任务的研究员

286
0:11:53.440 --> 0:11:56.760
其实Tim Berners-Lee被派去做这个因为在CERN里面

287
0:11:57.540 --> 0:11:59.080
好的物理学家太多了

288
0:11:59.320 --> 0:12:00.600
他算不上

289
0:12:01.380 --> 0:12:02.660
所以就被派去

290
0:12:02.920 --> 0:12:03.940
这个管文档

291
0:12:04.200 --> 0:12:05.720
被迫派去写代码是吧

292
0:12:06.240 --> 0:12:08.800
对对对被迫去做那个

293
0:12:09.060 --> 0:12:13.400
科学家跟进程员跟工程师最讨厌做的一件事情就是搞文档

294
0:12:13.400 --> 0:12:19.540
这个Tim Berners-Lee也是上来他也是读过Ted Nielsen的书

295
0:12:19.800 --> 0:12:23.380
他看了Ted Nielsen的书但是他在做这个

296
0:12:23.640 --> 0:12:25.440
第一个版本的Web的时候

297
0:12:25.680 --> 0:12:26.460
也是蛮懒的

298
0:12:27.740 --> 0:12:33.880
他没有去实现全部的东西他只把Ted Nielsen的里面的文档管理有链接一个链接

299
0:12:34.140 --> 0:12:35.160
可以到另外一个链接

300
0:12:35.420 --> 0:12:36.700
这件事情做下来了

301
0:12:37.200 --> 0:12:38.240
那剩下的

302
0:12:38.480 --> 0:12:40.020
这个Hypertext的部分就

303
0:12:40.280 --> 0:12:40.800
没管了

304
0:12:40.800 --> 0:12:44.380
那时候这个用Gopher用HTTP都蛮复杂的

305
0:12:44.900 --> 0:12:47.720
所以他又自己弄了一个这个协议

306
0:12:47.980 --> 0:12:49.000
叫HTTP

307
0:12:49.520 --> 0:12:52.840
这对网络了解的你就知道HTTP是

308
0:12:53.360 --> 0:12:55.920
全世界最浪费资源的一个

309
0:12:56.160 --> 0:12:56.680
协定

310
0:12:56.940 --> 0:13:01.540
开一个TCP就为了下载一个文档然后就把它关掉我记得

311
0:13:01.800 --> 0:13:07.420
94年的时候我在修研究所的网络协定的设计的课程

312
0:13:08.200 --> 0:13:10.000
然后我们上课的第一天

313
0:13:10.000 --> 0:13:12.060
我们老师跟我们讲的就是

314
0:13:12.820 --> 0:13:16.400
我想你们最近大概就已经有听到这个

315
0:13:16.920 --> 0:13:21.020
有一个现在开始流行起来的网络协定叫HTTP

316
0:13:21.280 --> 0:13:22.800
我们教授就跟我们这样讲

317
0:13:23.060 --> 0:13:26.900
我先跟你们说好因为我们那时候要写一个报告设计一个协定

318
0:13:27.420 --> 0:13:32.020
然后他就讲说你们如果设计出来的东西像HTTP那么烂的话

319
0:13:32.280 --> 0:13:33.560
你们这节课就当掉了

320
0:13:33.820 --> 0:13:36.880
我还以为说要逐出四门

321
0:13:36.880 --> 0:13:43.020
对我们那个时代来讲的话那时候是90年代的美国计算机的全世界

322
0:13:43.280 --> 0:13:48.660
全世界的中心在那边哪有可能这边做网络研究的会看得起

323
0:13:48.920 --> 0:13:50.200
一个在瑞士

324
0:13:50.440 --> 0:13:54.040
二流的物理学家搞了一个网络协议

325
0:13:54.800 --> 0:13:57.100
HTTP在早期的时候

326
0:13:57.360 --> 0:14:00.680
的确是非常的烂其实我们花了十几年的时间

327
0:14:00.940 --> 0:14:03.000
在修HTTP带来的问题

328
0:14:03.760 --> 0:14:05.560
Ted Nielsen的影响不止这里

329
0:14:05.560 --> 0:14:07.100
再继续往下

330
0:14:07.360 --> 0:14:08.640
到90年末

331
0:14:09.400 --> 0:14:10.680
有两个

332
0:14:11.200 --> 0:14:11.960
在

333
0:14:12.220 --> 0:14:12.980
Stanford

334
0:14:13.500 --> 0:14:15.800
读计算机博士的学生

335
0:14:16.580 --> 0:14:18.620
也是看过Ted Nielsen的书

336
0:14:19.140 --> 0:14:25.020
那他们也是知道HTTP是来自Ted Nielsen的Hypertext在读他们的

337
0:14:25.280 --> 0:14:27.060
博士要定题的时候

338
0:14:27.840 --> 0:14:29.620
他们就提出了一个问题

339
0:14:30.140 --> 0:14:34.500
他说现在这个90年末的web已经起来了这个web

340
0:14:34.500 --> 0:14:36.560
的链接我们现在只有单项

341
0:14:37.060 --> 0:14:38.600
那如果我们去

342
0:14:39.120 --> 0:14:40.900
这个链接是双向的话

343
0:14:41.420 --> 0:14:43.460
这一个网络会长得什么样

344
0:14:43.980 --> 0:14:45.760
这两个学生就去做研究了

345
0:14:46.020 --> 0:14:48.320
写了爬虫爬了很多的网页

346
0:14:48.580 --> 0:14:50.380
分析他们的链接双向回来

347
0:14:51.140 --> 0:14:52.680
那结果这个研究

348
0:14:53.700 --> 0:14:54.720
他们发现了

349
0:14:54.980 --> 0:14:55.760
这个

350
0:14:56.000 --> 0:14:57.540
一个很有趣的算法

351
0:14:58.320 --> 0:14:59.080
叫PageRank

352
0:15:00.100 --> 0:15:01.640
是谷歌的那个吗

353
0:15:02.400 --> 0:15:03.940
对这两个学生

354
0:15:03.940 --> 0:15:05.740
就是Surgical Brain

355
0:15:06.500 --> 0:15:10.080
这两个学生当年其实也蛮好玩的

356
0:15:10.340 --> 0:15:13.420
他们发现了这件事情他们也没有把它当成一回事

357
0:15:14.440 --> 0:15:16.740
然后他们就跑到那时候Yahoo去

358
0:15:17.000 --> 0:15:18.540
现在可能我们已经有一代的

359
0:15:18.780 --> 0:15:21.100
进程员不知道Yahoo是什么东西了

360
0:15:22.380 --> 0:15:24.160
不会是在日本的人

361
0:15:25.700 --> 0:15:27.740
Yahoo在日本是很强大的

362
0:15:28.520 --> 0:15:29.800
唯一少数

363
0:15:30.060 --> 0:15:32.360
对应该是全球唯一一个

364
0:15:32.360 --> 0:15:33.900
然后他们两个

365
0:15:34.160 --> 0:15:37.220
发现了这个他们就说这个东西可能对互联网的

366
0:15:37.480 --> 0:15:40.820
目录公司跟搜索公司可能有点用

367
0:15:41.580 --> 0:15:43.120
所以他们就跑到Yahoo去

368
0:15:43.880 --> 0:15:48.240
然后跟Yahoo讲说我们这个算法100万美金卖给你们好不好

369
0:15:49.260 --> 0:15:50.540
结果被Yahoo拒绝了

370
0:15:50.800 --> 0:15:52.580
觉得太贵了吗

371
0:15:52.840 --> 0:15:56.180
对Yahoo觉得这个东西不值得100万了

372
0:15:56.940 --> 0:15:57.460
OK

373
0:15:57.460 --> 0:16:02.080
后来这两个觉得我们这东西应该还有点价值

374
0:16:02.580 --> 0:16:04.120
所以90年末嘛

375
0:16:04.380 --> 0:16:04.880
反正

376
0:16:05.140 --> 0:16:05.920
流行嘛

377
0:16:06.420 --> 0:16:09.240
博士读到一半就是要去互联网创业嘛

378
0:16:10.000 --> 0:16:13.340
所以这两个就博士没读完

379
0:16:13.600 --> 0:16:14.620
那张paper

380
0:16:14.880 --> 0:16:16.160
拿到了四个专利

381
0:16:16.400 --> 0:16:18.960
那就拿这个四个专利去圈了VC

382
0:16:19.220 --> 0:16:20.500
然后就成立了谷歌

383
0:16:21.280 --> 0:16:22.800
其实可以看得到就是

384
0:16:22.800 --> 0:16:26.900
他们在60年代70年代想出来的这些事

385
0:16:27.420 --> 0:16:32.280
他们当年算没有足够的算力去实现这个东西就是因为没有算力

386
0:16:32.540 --> 0:16:34.320
剩下的就是只有想像力

387
0:16:34.580 --> 0:16:40.720
他们当年想像的这个他们有很多的时间去想像不像我们今天所有事情996

388
0:16:40.980 --> 0:16:42.520
然后这个

389
0:16:43.020 --> 0:16:46.860
所有事情都在赶没有时间好好的坐下来去

390
0:16:47.380 --> 0:16:50.700
思考我们这个大环境有可能是什么样子

391
0:16:50.700 --> 0:16:52.740
有很多这些以前

392
0:16:53.000 --> 0:16:54.540
有人思考过的东西

393
0:16:54.800 --> 0:16:57.100
就渐渐的被这个历史忘记了

394
0:16:57.860 --> 0:16:59.920
如果谈IT的正史的话

395
0:17:00.420 --> 0:17:01.460
web从哪里来

396
0:17:01.700 --> 0:17:02.480
web就是

397
0:17:02.980 --> 0:17:04.260
在Cern这个

398
0:17:04.520 --> 0:17:06.580
全世界脑力最大的地方

399
0:17:06.820 --> 0:17:09.380
里面有一个非常天才的进程员

400
0:17:09.900 --> 0:17:11.180
凭空的想像了

401
0:17:11.440 --> 0:17:12.980
http跟html

402
0:17:13.740 --> 0:17:16.300
然后就启动了web的这个革命

403
0:17:17.060 --> 0:17:17.840
这是

404
0:17:17.840 --> 0:17:22.200
这是基本上我们对Tim Berners-Lee现在的想法

405
0:17:22.700 --> 0:17:25.780
他后来因为这些事情得了很多的这个奖

406
0:17:26.540 --> 0:17:29.880
我记得没有错的话那个他现在他也是被

407
0:17:30.120 --> 0:17:32.440
英国女皇封为爵士的

408
0:17:34.220 --> 0:17:36.280
同样的谷歌的故事就是

409
0:17:37.040 --> 0:17:39.080
斯坦佛全世界最高学府

410
0:17:39.860 --> 0:17:41.900
两个非常聪明的博士生

411
0:17:42.420 --> 0:17:43.440
凭空想像

412
0:17:43.700 --> 0:17:44.720
弄出了PageRank

413
0:17:44.720 --> 0:17:47.540
当我们实际去追的时候可以看得到

414
0:17:47.800 --> 0:17:48.820
他们其实是

415
0:17:49.320 --> 0:17:52.400
站在就像牛顿讲的站在巨人的肩膀上

416
0:17:52.660 --> 0:17:53.940
在我们今天

417
0:17:54.200 --> 0:17:54.960
html

418
0:17:55.220 --> 0:17:56.240
http

419
0:17:56.500 --> 0:17:57.260
谷歌

420
0:17:58.040 --> 0:18:00.340
这些事情对我们影响力这么大的

421
0:18:00.840 --> 0:18:03.160
情况下我们现在其实忘了

422
0:18:03.660 --> 0:18:04.680
这个巨人的名字

423
0:18:04.940 --> 0:18:06.220
我们这个就把他

424
0:18:06.480 --> 0:18:09.560
有个机会转到耶实里面可以去聊聊他

425
0:18:09.800 --> 0:18:13.140
聊聊这个70年代用LSD

426
0:18:13.400 --> 0:18:14.420
想像一个

427
0:18:14.420 --> 0:18:18.260
全世界所有的文档都是互相的链接的

428
0:18:18.520 --> 0:18:21.840
这位老先生他70年代提出来的问题

429
0:18:22.100 --> 0:18:24.920
在今天多么的影响了我们的生活

430
0:18:25.180 --> 0:18:26.200
我还可以补充一点

431
0:18:26.700 --> 0:18:27.980
David可能知道就是

432
0:18:28.240 --> 0:18:32.600
其实最近又有一波新的热潮是关于双向链接的

433
0:18:33.100 --> 0:18:35.920
但是这个双向链接是关于这个笔记的

434
0:18:36.180 --> 0:18:39.760
现在新出来一个东西叫RomaResearch

435
0:18:39.760 --> 0:18:45.140
他的最重要的一个特点就是它里面的所有的数据都是双向链接在一起

436
0:18:46.420 --> 0:18:47.180
号称

437
0:18:47.440 --> 0:18:48.460
第二大脑

438
0:18:48.720 --> 0:18:54.860
但是他还是只是给个人用的他还不敢说我把全世界所有的数据都以双向链接起来

439
0:18:55.380 --> 0:18:58.700
那个从算力来说估计到现在还是做不到

440
0:18:59.220 --> 0:19:00.500
其实

441
0:19:01.260 --> 0:19:02.540
Ted Nielsen在

442
0:19:03.060 --> 0:19:06.380
90年末2000年初他也把

443
0:19:06.380 --> 0:19:09.960
他做了40年的Xanadu也开源出来了

444
0:19:10.220 --> 0:19:13.800
那只是没有引起很大的兴趣去看他的代码

445
0:19:14.320 --> 0:19:15.600
但是

446
0:19:15.840 --> 0:19:19.680
其实在谷歌的后来的历史上尝试了好几次

447
0:19:19.940 --> 0:19:21.740
再去重现Xanadu

448
0:19:22.000 --> 0:19:23.520
我不知道大家记不记得大概

449
0:19:23.780 --> 0:19:25.320
10年前后

450
0:19:25.840 --> 0:19:26.600
那时候

451
0:19:26.860 --> 0:19:31.200
这个我们刚大家互相抢完Gmail的注册之后

452
0:19:32.740 --> 0:19:34.800
我们现在IT的时代越过越快

453
0:19:34.800 --> 0:19:37.360
10年好像是上个世纪的事情了

454
0:19:37.620 --> 0:19:42.220
大家不知道记不记得有个Google的产品叫做Google Wave

455
0:19:42.480 --> 0:19:48.360
我记得当时我们在创新院还非常激烈的讨论

456
0:19:48.880 --> 0:19:54.000
当初被给予厚望然后那时候大家多的就是一直在问朋友说

457
0:19:54.260 --> 0:19:55.540
有没有邀请啊

458
0:19:55.800 --> 0:19:56.300
有没有邀请

459
0:19:56.560 --> 0:19:58.860
四处在跟人家要Google Wave的邀请

460
0:19:59.120 --> 0:20:03.220
Google Wave其实是想去实践Xanadu

461
0:20:03.220 --> 0:20:05.520
那这是Google的第一个尝试

462
0:20:06.280 --> 0:20:09.360
Google其实后面还有另外一个尝试叫做Z-Zack

463
0:20:09.620 --> 0:20:13.200
其实一直看到一直可以看到谷歌里面的这些

464
0:20:13.460 --> 0:20:17.800
工程师你就想嘛10年代40来岁的

465
0:20:18.320 --> 0:20:19.340
工程师

466
0:20:19.600 --> 0:20:24.460
特别是在美国那边跟我其实是有很相近的背景我们都是在

467
0:20:24.980 --> 0:20:27.280
90年代求学的那个时候

468
0:20:27.540 --> 0:20:29.320
大家多多少少有去

469
0:20:29.580 --> 0:20:31.640
看过Ted Nielsen的书

470
0:20:31.640 --> 0:20:37.800
他提出来的对数据的管理知识的管理的这一块有好几次的

471
0:20:38.040 --> 0:20:40.100
大家都在想办法实现

472
0:20:40.360 --> 0:20:43.420
网上如果再去查这个Ted Nielsen Hypertext

473
0:20:43.940 --> 0:20:48.280
还是可以查到很多特别是在开源的项目

474
0:20:49.060 --> 0:20:50.080
会去尝试

475
0:20:50.340 --> 0:20:51.100
这件事情

476
0:20:51.620 --> 0:20:53.660
那他们失败并不表示没有用

477
0:20:53.920 --> 0:20:55.720
他们失败可能就是

478
0:20:56.220 --> 0:20:58.020
当年的一个环境

479
0:20:58.280 --> 0:20:59.560
不容许他们成功

480
0:20:59.560 --> 0:21:03.400
计算机的历史上其实充满了这种故事

481
0:21:04.180 --> 0:21:10.320
我能想像到就是我没有读过Ted Nielsen的书但是我接下来我真的会想去找来看

482
0:21:10.580 --> 0:21:16.720
因为他能够激励一代又一代的进程员试着尝试去实现他的

483
0:21:16.980 --> 0:21:18.000
他的那些梦想

484
0:21:18.260 --> 0:21:23.120
他当年描绘那个梦想肯定是描绘的特别能够吸引人

485
0:21:23.880 --> 0:21:25.940
他是一个很有说服力的作者

486
0:21:27.220 --> 0:21:28.240
整个书

487
0:21:28.240 --> 0:21:31.820
读下来就是不像是一个科药的人写的

488
0:21:33.100 --> 0:21:34.880
他把整个为什么

489
0:21:35.140 --> 0:21:37.440
要链接为什么要做这些事情

490
0:21:37.700 --> 0:21:39.500
他其实做非常好的论述

491
0:21:40.000 --> 0:21:43.340
因为这也是回到当年写一本电脑书可以花10年

492
0:21:43.600 --> 0:21:45.380
10年后出版还是很新

493
0:21:46.160 --> 0:21:46.660
因为

494
0:21:46.920 --> 0:21:48.460
反正没有算力嘛

495
0:21:49.220 --> 0:21:53.060
算力不到的话不管想什么他们都有慢慢的时间去思考

496
0:21:53.060 --> 0:21:59.200
然后那个David我讲换一个话题上次跟你聊的时候

497
0:21:59.460 --> 0:22:05.600
也在说到就是当年的美国你在那边读计算机学操作系统当时的主流

498
0:22:05.860 --> 0:22:07.140
应该还是BSD吧

499
0:22:07.640 --> 0:22:11.480
就是UNIX然后是BSD的这样的一套这个操作系统

500
0:22:12.260 --> 0:22:15.840
当年你们是怎么看待Linux这样的一个新起来的

501
0:22:16.100 --> 0:22:18.140
其实90年代是一个

502
0:22:18.400 --> 0:22:22.240
操作系统包括这个CPU设计

503
0:22:22.240 --> 0:22:24.800
我们是一个很辉煌的时代

504
0:22:26.080 --> 0:22:28.380
在CPU这一边我们有SPART

505
0:22:28.640 --> 0:22:29.160
有MIPS

506
0:22:29.400 --> 0:22:32.220
有Alpha大家都唾弃这个x86

507
0:22:33.500 --> 0:22:35.800
我们有很多的CPU

508
0:22:36.060 --> 0:22:37.860
然后有很多个版本的UNIX

509
0:22:38.120 --> 0:22:39.400
有XGI的Iris

510
0:22:40.160 --> 0:22:41.960
有SUN的SUNOS

511
0:22:42.200 --> 0:22:43.240
有他的Solaris

512
0:22:43.480 --> 0:22:45.800
有各式各样的这个操作系统

513
0:22:46.040 --> 0:22:48.360
这边基本上都是从UNIX出来的

514
0:22:48.600 --> 0:22:51.420
那UNIX其实大家也知道分成

515
0:22:51.420 --> 0:22:54.240
他最早从贝尔实验室出来

516
0:22:54.500 --> 0:22:59.100
那贝尔实验室这一支发展成所谓的System 4 System 5

517
0:22:59.620 --> 0:23:04.480
也是在70年代的时候波克莱有一个研究生

518
0:23:04.980 --> 0:23:08.580
暑假到贝尔实验室去实习他去实习的时候

519
0:23:08.820 --> 0:23:10.360
看了UNIX的代码

520
0:23:10.620 --> 0:23:13.440
然后就把这UNIX的代码带回到波克莱

521
0:23:13.700 --> 0:23:15.220
他们开始在波克莱

522
0:23:15.480 --> 0:23:19.060
开始有一系列的这个研究就围绕着这个代码

523
0:23:19.060 --> 0:23:22.900
那这个就延伸出来的另外一个UNIX的

524
0:23:23.160 --> 0:23:24.700
很大的一条分支

525
0:23:24.940 --> 0:23:25.980
就是BSD嘛

526
0:23:26.480 --> 0:23:28.540
那到90年代其实

527
0:23:28.780 --> 0:23:30.840
我们在美国读大学的时候

528
0:23:31.100 --> 0:23:33.140
一手可以看得到BSD的代码

529
0:23:33.660 --> 0:23:36.460
另外一手可以看得到System 5的代码

530
0:23:37.240 --> 0:23:40.820
那对我们来讲UNIX的代码是学习的

531
0:23:41.080 --> 0:23:42.100
过程之一

532
0:23:42.860 --> 0:23:43.900
那时候

533
0:23:44.140 --> 0:23:47.740
我们还有一本私底下拷贝的他叫Leon's UNIX

534
0:23:47.740 --> 0:23:49.020
他是一个

535
0:23:49.280 --> 0:23:50.300
澳洲的教授

536
0:23:51.080 --> 0:23:52.600
然后他把这个代码

537
0:23:52.860 --> 0:23:54.400
他把它加注解上去

538
0:23:54.920 --> 0:23:55.940
写了一本书

539
0:23:56.440 --> 0:23:58.240
但是因为他没有拿不到这个

540
0:23:58.760 --> 0:24:00.800
正式的UNIX的授权

541
0:24:01.060 --> 0:24:03.100
他那本书就没有办法正式的出版

542
0:24:03.360 --> 0:24:05.660
但是问题是他把草稿就

543
0:24:05.920 --> 0:24:06.940
释放出来了

544
0:24:07.460 --> 0:24:10.780
那其实当年我们也蛮辛苦的因为那本书

545
0:24:11.560 --> 0:24:12.320
几百页

546
0:24:12.840 --> 0:24:13.860
那只有拷贝

547
0:24:13.860 --> 0:24:17.700
就是复印机复印版的

548
0:24:18.460 --> 0:24:19.480
好吧

549
0:24:19.740 --> 0:24:21.540
只要你问对人了

550
0:24:22.040 --> 0:24:24.100
这本书也是流传很广的

551
0:24:24.360 --> 0:24:27.940
另外一块就是BSD这一块其实也出了很多书

552
0:24:28.200 --> 0:24:31.260
那个最有名的就是那个小恶魔在封面的

553
0:24:31.520 --> 0:24:33.060
那些书都是我们

554
0:24:33.560 --> 0:24:35.620
那时候在读书的时候90年代

555
0:24:36.120 --> 0:24:41.000
读计算机特别是对操作系统有兴趣的这些都是我们标准教科书嘛

556
0:24:41.000 --> 0:24:44.080
那时候在美国其实这件事情是得天独厚

557
0:24:44.840 --> 0:24:45.880
所以当

558
0:24:46.120 --> 0:24:47.400
90年Towles

559
0:24:47.660 --> 0:24:48.420
在

560
0:24:48.680 --> 0:24:49.960
芬兰的学校

561
0:24:50.740 --> 0:24:51.500
穷学校

562
0:24:52.020 --> 0:24:54.060
没有人要给他UNIX的授权

563
0:24:54.580 --> 0:24:57.140
那他看得到这些书吗

564
0:24:57.400 --> 0:24:58.680
这些书他看得到

565
0:24:58.920 --> 0:25:00.200
这些书倒是标准

566
0:25:00.460 --> 0:25:00.980
这些书

567
0:25:01.240 --> 0:25:02.260
那还好

568
0:25:02.760 --> 0:25:06.600
这些书他倒是看得到但是真正的代码他其实弄不到

569
0:25:07.120 --> 0:25:08.140
所以你会

570
0:25:08.140 --> 0:25:11.220
发现就是欧洲那边因为不像

571
0:25:11.480 --> 0:25:14.280
美国这边这些东西流传的这么广

572
0:25:14.540 --> 0:25:18.900
他们有相对自己比较刻苦耐劳的学习方式

573
0:25:19.160 --> 0:25:20.940
Andrew Temelbaum应该是

574
0:25:21.200 --> 0:25:21.960
做Minix

575
0:25:22.480 --> 0:25:24.020
我记得没错他是荷兰的

576
0:25:24.520 --> 0:25:28.120
就荷兰的教授不是就自己弄了一个教学版的UNIX

577
0:25:28.880 --> 0:25:29.380
叫Minix

578
0:25:29.640 --> 0:25:31.180
Towles那时候就是用Minix

579
0:25:31.440 --> 0:25:32.200
做一个基础

580
0:25:32.460 --> 0:25:34.000
然后后来他就讲说Minix

581
0:25:34.260 --> 0:25:36.040
缺乏这个虚拟内存

582
0:25:36.040 --> 0:25:38.340
不能成为一个真正的好的

583
0:25:38.600 --> 0:25:39.620
教学的OS

584
0:25:40.140 --> 0:25:41.920
所以说他就花了时间

585
0:25:42.180 --> 0:25:42.940
帮Minix

586
0:25:43.200 --> 0:25:45.260
加了虚拟内存上去

587
0:25:46.020 --> 0:25:46.540
那

588
0:25:46.780 --> 0:25:49.600
这个时候他就丢出来然后他也就开始跟

589
0:25:49.860 --> 0:25:51.400
Temelbaum就开始吵架

590
0:25:51.660 --> 0:25:52.420
这个就是

591
0:25:52.680 --> 0:25:53.960
Linux的诞生嘛

592
0:25:54.460 --> 0:25:57.280
那时候其实从美国的角度来看

593
0:25:57.540 --> 0:26:01.640
特别是从美国从学术的角度来看跟刚刚的那个

594
0:26:01.900 --> 0:26:04.460
我们教授评论HTTP一样嘛

595
0:26:04.460 --> 0:26:10.340
就是你去修操作系统的过程就是他们就跟你讲说最近你们可能在

596
0:26:10.600 --> 0:26:13.680
Internet上听过这个芬兰的学生

597
0:26:13.920 --> 0:26:16.480
释放的一些类似UNIX的代码

598
0:26:16.740 --> 0:26:19.040
我们那时候连讲他是UNIX都不屑

599
0:26:19.820 --> 0:26:22.120
打引号的那种

600
0:26:22.380 --> 0:26:23.400
他本来就不是UNIX

601
0:26:23.660 --> 0:26:24.940
现在他也不是UNIX

602
0:26:26.480 --> 0:26:29.540
但是他算是UNIX兼容吧

603
0:26:29.540 --> 0:26:34.140
不算UNIX有个非常严格的一个定义然后有一套审核的

604
0:26:34.400 --> 0:26:40.540
对但是我看到的那个我看到的那个介绍说他后面是在邮件列表里面去

605
0:26:40.800 --> 0:26:43.620
找人要那个POSIX的相关的协议

606
0:26:43.880 --> 0:26:46.680
他是准备照着那个POSIX实现一遍的是吧

607
0:26:47.200 --> 0:26:48.740
对POSIX的实现

608
0:26:49.000 --> 0:26:51.040
Linux的kernel比较没有关系

609
0:26:51.300 --> 0:26:51.800
其实他是

610
0:26:52.060 --> 0:26:53.340
他是上传

611
0:26:54.120 --> 0:26:55.140
Storm那边

612
0:26:55.400 --> 0:26:56.160
从LibC

613
0:26:56.420 --> 0:26:58.980
从开放开源的LibC那边去做的

614
0:26:58.980 --> 0:27:01.800
从我们去看Linux

615
0:27:02.060 --> 0:27:03.080
其实是一个

616
0:27:04.100 --> 0:27:05.380
基本上就是

617
0:27:05.640 --> 0:27:06.920
这芬兰的

618
0:27:07.440 --> 0:27:09.740
这种博士生在搞什么东西

619
0:27:10.760 --> 0:27:12.040
但是

620
0:27:13.060 --> 0:27:14.860
很有趣的事情就发生了

621
0:27:15.120 --> 0:27:16.400
94年95年

622
0:27:16.900 --> 0:27:18.180
Web开始起来

623
0:27:18.700 --> 0:27:20.480
就开始有很多对Web

624
0:27:20.740 --> 0:27:21.520
很兴奋的人

625
0:27:22.020 --> 0:27:23.300
我们那时候的朋友里面

626
0:27:23.820 --> 0:27:24.840
就第一波

627
0:27:25.100 --> 0:27:25.600
从

628
0:27:25.860 --> 0:27:26.640
学校

629
0:27:26.640 --> 0:27:30.220
很快的跳到去做Web的这个专业的人

630
0:27:30.740 --> 0:27:33.040
其实很少来自于计算机专业的

631
0:27:33.300 --> 0:27:35.600
我那时候我们朋友里面对

632
0:27:35.860 --> 0:27:37.400
这整个HTTP

633
0:27:37.640 --> 0:27:39.440
对整个Web最兴奋的

634
0:27:39.700 --> 0:27:41.240
是一个学哲学的

635
0:27:41.740 --> 0:27:43.800
他们就非常的相信就是

636
0:27:44.040 --> 0:27:45.840
Web这件事情要

637
0:27:46.100 --> 0:27:46.860
会革命

638
0:27:47.120 --> 0:27:50.700
Linux其实起来他遇到了一个很有趣的机会

639
0:27:51.220 --> 0:27:53.260
95年的时候其实大部分人不知道Web

640
0:27:53.520 --> 0:27:54.040
在干嘛

641
0:27:54.040 --> 0:27:58.140
公司里面就有些年轻人被这个狂热卷进去了嘛

642
0:27:59.160 --> 0:28:01.720
然后就会去跟老板讲说我们公司应该有个网站

643
0:28:01.980 --> 0:28:02.480
那时候

644
0:28:02.740 --> 0:28:04.540
能跑Unix的机器很贵啊

645
0:28:05.060 --> 0:28:05.820
那我们

646
0:28:06.080 --> 0:28:09.920
还要再记得就是那时候很多的电脑还是在跑DOS的时代

647
0:28:10.680 --> 0:28:11.460
所以

648
0:28:11.700 --> 0:28:13.240
你要去搞这个

649
0:28:13.500 --> 0:28:17.080
Windows 95 98根本还不足以做服务器嘛

650
0:28:17.600 --> 0:28:20.660
Windows NT很晚很晚才

651
0:28:20.660 --> 0:28:23.980
998出来的时候已经有NT了

652
0:28:24.240 --> 0:28:25.780
那个NT3.1的版本

653
0:28:26.040 --> 0:28:27.580
NT3.1

654
0:28:28.600 --> 0:28:31.920
那个版本的NT已经还不错了

655
0:28:32.700 --> 0:28:37.300
但那个时候的硬件很少能够顺利的跑那个系统

656
0:28:37.560 --> 0:28:39.100
要非常牛逼的硬件才行

657
0:28:41.400 --> 0:28:41.900
所以

658
0:28:42.160 --> 0:28:45.240
那个时候其实就很多有很多公司的年轻人

659
0:28:45.500 --> 0:28:49.340
就开始去跑去跟公司老板讲说我们公司应该有个网站

660
0:28:49.340 --> 0:28:50.880
老板说

661
0:28:51.140 --> 0:28:53.440
我所有的Unix的机器都已经安排好了

662
0:28:53.700 --> 0:28:56.000
这些机器那么贵你们不要给我乱动

663
0:28:56.260 --> 0:28:58.820
我们在做公司的正经的事情的

664
0:28:59.580 --> 0:29:00.600
机器你们不要乱动

665
0:29:00.860 --> 0:29:02.660
他们挑来挑去就

666
0:29:02.900 --> 0:29:04.960
就看看这公司有没有这个

667
0:29:05.460 --> 0:29:07.260
要报销的这个386

668
0:29:07.520 --> 0:29:09.560
去装这个操作系统

669
0:29:10.080 --> 0:29:11.860
那时候也没有什么选择其实

670
0:29:12.380 --> 0:29:12.900
Windows

671
0:29:13.140 --> 0:29:14.420
95 98

672
0:29:14.680 --> 0:29:19.040
那个两分钟就当掉的蓝屏的系统其实没有办法做服务器

673
0:29:19.040 --> 0:29:21.340
那时候其实市场上有几个选择

674
0:29:21.600 --> 0:29:22.880
Linux是一块

675
0:29:23.140 --> 0:29:24.920
那时候这个什么Slackware

676
0:29:25.180 --> 0:29:25.960
都已经出来了

677
0:29:26.200 --> 0:29:28.520
NetBSD FreeBSD是另外一块

678
0:29:28.760 --> 0:29:30.040
那时候你如果去

679
0:29:30.300 --> 0:29:31.840
这两个社群的

680
0:29:32.100 --> 0:29:33.380
这个BBS去看

681
0:29:33.640 --> 0:29:35.420
就是会有一个很有趣的现象

682
0:29:35.680 --> 0:29:37.980
两边的人你可以看得出是完全

683
0:29:38.500 --> 0:29:39.520
不同样的人

684
0:29:40.280 --> 0:29:46.440
这个BSD这一边就是很正宗的美国学校计算机培养出来的学生

685
0:29:46.680 --> 0:29:48.220
BSD Unix的骄傲的这种

686
0:29:48.220 --> 0:29:51.300
很简单的一个问题装一台机器然后你

687
0:29:51.800 --> 0:29:52.820
有一片网卡

688
0:29:53.340 --> 0:29:54.620
那你不知道你的驱动

689
0:29:54.880 --> 0:29:55.640
到底怎么弄

690
0:29:56.420 --> 0:29:59.220
那你如果跑到这个Linux那边

691
0:29:59.480 --> 0:30:01.280
去问这个问题说回答就是

692
0:30:01.540 --> 0:30:03.580
我也是同一个网卡你找到驱动了没

693
0:30:03.840 --> 0:30:06.400
然后就一排的人都是问同一个问题

694
0:30:06.900 --> 0:30:07.940
就一个人讲说

695
0:30:08.180 --> 0:30:09.460
就是下载这个驱动

696
0:30:09.980 --> 0:30:12.020
那这是Linux那边的

697
0:30:12.280 --> 0:30:13.300
社群的态度

698
0:30:13.560 --> 0:30:14.080
然后你说

699
0:30:14.340 --> 0:30:16.380
同样的你跑到BSD去问这个问题

700
0:30:16.380 --> 0:30:19.200
BSD那边给你的回答就是非常学术性的

701
0:30:19.460 --> 0:30:20.980
你要用的这个驱动

702
0:30:21.240 --> 0:30:22.260
他的代码在这里

703
0:30:22.520 --> 0:30:23.040
然后你

704
0:30:23.300 --> 0:30:24.580
是哪一个型号

705
0:30:24.820 --> 0:30:27.900
你应该进去看看代码有哪几行应该要改掉的

706
0:30:28.160 --> 0:30:28.920
这就是

707
0:30:29.180 --> 0:30:31.220
血统正存的Unix态度

708
0:30:31.740 --> 0:30:32.760
所以渐渐的

709
0:30:33.020 --> 0:30:35.840
在那个时代很多的这个要去装

710
0:30:36.100 --> 0:30:36.600
Web的

711
0:30:36.860 --> 0:30:39.160
年轻人其实他们都是来自于DOS的

712
0:30:39.420 --> 0:30:39.940
背景

713
0:30:40.440 --> 0:30:41.220
他们是

714
0:30:41.980 --> 0:30:43.260
当年的草根

715
0:30:43.520 --> 0:30:45.560
然后BSD这一块是

716
0:30:45.560 --> 0:30:47.100
菁英型的

717
0:30:47.360 --> 0:30:48.380
草根的数字

718
0:30:48.640 --> 0:30:50.420
永远比菁英多吗

719
0:30:50.940 --> 0:30:52.220
到商用之后

720
0:30:52.980 --> 0:30:56.060
大部分的服务器其实还是跑BSD

721
0:30:56.560 --> 0:31:01.940
那不管是低端一点用x86跑NetBSD FreeBSD

722
0:31:02.460 --> 0:31:04.000
不然就高端的服务器

723
0:31:04.500 --> 0:31:06.300
跑上的Solaris

724
0:31:06.560 --> 0:31:10.400
Linux其实是占据了很多的这个爱好者的这一块

725
0:31:10.640 --> 0:31:11.680
在最后面因为

726
0:31:11.920 --> 0:31:13.460
用户都用量大

727
0:31:13.980 --> 0:31:14.740
使用便宜

728
0:31:14.740 --> 0:31:15.500
然后

729
0:31:15.760 --> 0:31:17.560
这几家Unix公司又不争气

730
0:31:17.800 --> 0:31:19.600
Linux超越BSD

731
0:31:20.120 --> 0:31:23.440
成为Web服务器的主流操作系统

732
0:31:23.960 --> 0:31:27.280
其实是在20几年之后才发生的

733
0:31:28.040 --> 0:31:31.880
他其实不是一下子就是Linux出现然后改变世界

734
0:31:32.400 --> 0:31:35.220
我们现在谈Linux又是一个新的

735
0:31:35.720 --> 0:31:37.260
这种时代的说法

736
0:31:38.280 --> 0:31:41.360
就是这种我所谓的叫耶稣诞生的说法

737
0:31:42.380 --> 0:31:43.160
就是当

738
0:31:43.160 --> 0:31:46.480
这个在芬兰这个地方这个博士生

739
0:31:46.740 --> 0:31:47.760
敲进去

740
0:31:48.280 --> 0:31:51.340
最后一行代码让Linux可以跑出来的时候

741
0:31:52.360 --> 0:31:53.900
他的这个宿舍里面

742
0:31:54.160 --> 0:31:55.180
有三道光

743
0:31:55.700 --> 0:31:56.980
冲到天上去

744
0:31:57.240 --> 0:31:58.260
圣光

745
0:31:58.520 --> 0:32:00.300
圣光往上冲

746
0:32:00.560 --> 0:32:03.120
然后代表了一个新的时代的来临

747
0:32:03.640 --> 0:32:04.140
然后Linux

748
0:32:04.400 --> 0:32:06.960
就诞生了然后就改变了我们的世界

749
0:32:07.720 --> 0:32:08.240
其实

750
0:32:08.760 --> 0:32:11.820
从Linux诞生到他真正的被

751
0:32:11.820 --> 0:32:13.100
主流接受

752
0:32:13.620 --> 0:32:15.160
其实已经十几年后了

753
0:32:15.660 --> 0:32:16.680
操作系统的

754
0:32:16.940 --> 0:32:17.720
发展

755
0:32:17.980 --> 0:32:19.500
一直在持续下去

756
0:32:20.020 --> 0:32:22.320
为内核的MicroKernel这条线

757
0:32:22.840 --> 0:32:24.620
从CMU那出来的

758
0:32:24.880 --> 0:32:25.640
MARC3

759
0:32:26.160 --> 0:32:27.700
其实是用在苹果上面

760
0:32:27.960 --> 0:32:29.480
另外一条线就是

761
0:32:29.740 --> 0:32:30.760
贝尔实验室

762
0:32:31.020 --> 0:32:33.080
他们做了一个操作系统叫Plan9

763
0:32:33.580 --> 0:32:35.640
这个大概也很少人听说

764
0:32:36.400 --> 0:32:38.700
但是Plan9其实对我们现在的影响

765
0:32:38.960 --> 0:32:39.720
也蛮大的

766
0:32:39.720 --> 0:32:40.480
也蛮大的

767
0:32:41.760 --> 0:32:42.280
因为

768
0:32:43.300 --> 0:32:44.320
Plan9里面的

769
0:32:44.580 --> 0:32:46.120
几个主要的人反正

770
0:32:46.880 --> 0:32:48.420
看过UNIX的历史的

771
0:32:48.680 --> 0:32:49.440
Dennis Ritchie

772
0:32:49.700 --> 0:32:50.480
Ken Thompson

773
0:32:50.980 --> 0:32:54.320
他们都在Plan9这个小组里面他们是要重新做一个

774
0:32:54.820 --> 0:32:57.120
真正的分布式的这个UNIX

775
0:32:58.160 --> 0:32:58.660
那

776
0:32:59.940 --> 0:33:02.240
他当初留下来的他

777
0:33:02.500 --> 0:33:04.560
这个系统本身虽然没有起来

778
0:33:05.060 --> 0:33:06.080
但这个系统

779
0:33:06.340 --> 0:33:07.880
做出来的东西

780
0:33:07.880 --> 0:33:10.440
一块一块其实也被剥离出来

781
0:33:10.700 --> 0:33:12.480
然后现在也开始在影响我们

782
0:33:13.760 --> 0:33:14.280
其中大概

783
0:33:14.540 --> 0:33:15.040
最

784
0:33:15.300 --> 0:33:17.860
有名见到的就是rockPi

785
0:33:18.880 --> 0:33:21.440
把Plan9那时候为Plan9写的一个语言

786
0:33:21.960 --> 0:33:23.500
因为他搬到Google去

787
0:33:23.760 --> 0:33:25.800
所以他把这个语言也带到Google

788
0:33:26.320 --> 0:33:28.100
那现在这个语言就叫GO

789
0:33:30.660 --> 0:33:32.200
所以GO其实是

790
0:33:32.720 --> 0:33:36.560
这个20年的贝尔实验室的操作系统研究

791
0:33:36.560 --> 0:33:38.860
然后才走到这个

792
0:33:39.380 --> 0:33:40.400
GO这一段

793
0:33:40.920 --> 0:33:43.480
那这个操作系统叫Plan9

794
0:33:43.740 --> 0:33:45.780
到现在他里面还有非常多

795
0:33:46.540 --> 0:33:47.580
领先的想法

796
0:33:48.600 --> 0:33:51.660
那包括他怎么去看这个分布式系统

797
0:33:51.920 --> 0:33:54.740
怎么把所有的东西当作是

798
0:33:55.000 --> 0:33:55.500
文档

799
0:33:56.280 --> 0:33:58.320
怎么通过文档去跟

800
0:33:58.840 --> 0:34:01.140
不同的设备互相之间的沟通

801
0:34:01.140 --> 0:34:06.520
其实90年不管在操作系统上面不管在CPU上面

802
0:34:06.780 --> 0:34:09.840
有很多后来没有变成功的项目

803
0:34:10.100 --> 0:34:11.900
并不代表他们不值得考古

804
0:34:12.400 --> 0:34:16.500
他本身虽然没有成功但是从他里面剥离掉下来的

805
0:34:16.760 --> 0:34:18.040
这个片片段段

806
0:34:18.300 --> 0:34:20.340
也一个一个在影响我们的生活

807
0:34:20.600 --> 0:34:22.140
GO就是其中之一

808
0:34:22.900 --> 0:34:24.440
在Linux上面

809
0:34:24.700 --> 0:34:26.220
他也从Plan9里面

810
0:34:26.480 --> 0:34:28.540
这个抄了好几个东西

811
0:34:28.540 --> 0:34:31.100
Linux里面有一个叫Proc的目录

812
0:34:31.360 --> 0:34:32.120
Proc

813
0:34:32.380 --> 0:34:33.140
那个目录

814
0:34:33.920 --> 0:34:38.020
就通过这个目录你可以用很简单的UNIX的工具

815
0:34:38.520 --> 0:34:41.860
去知道有关这台机器所有硬件的东西

816
0:34:42.100 --> 0:34:43.640
这个想法这个做法

817
0:34:44.160 --> 0:34:45.700
其实也是来自于Plan9

818
0:34:46.460 --> 0:34:46.980
所以

819
0:34:47.480 --> 0:34:48.500
很多这些

820
0:34:48.760 --> 0:34:50.040
从别的地方长出来

821
0:34:50.300 --> 0:34:51.580
所谓的叫经络

822
0:34:52.100 --> 0:34:53.880
这个一经络

823
0:34:54.140 --> 0:34:54.900
万物生嘛

824
0:34:55.420 --> 0:34:56.440
那其实

825
0:34:56.440 --> 0:34:57.720
其实很多

826
0:34:58.240 --> 0:35:01.040
做操作系统的人对Linux很不满的

827
0:35:01.300 --> 0:35:03.100
在很长的一段时间

828
0:35:03.360 --> 0:35:04.640
只是为了尝试

829
0:35:05.400 --> 0:35:07.200
去重新实践70年代的

830
0:35:07.440 --> 0:35:08.720
System 5的标准

831
0:35:09.500 --> 0:35:11.040
一定程度上来讲

832
0:35:11.540 --> 0:35:12.560
Linux的流行

833
0:35:13.080 --> 0:35:14.620
吸收了大量的资源

834
0:35:15.120 --> 0:35:16.660
然后变成好像

835
0:35:16.920 --> 0:35:20.240
Linux诞生之后我们不需要新的操作系统

836
0:35:20.760 --> 0:35:22.300
很多操作系统的研究

837
0:35:22.560 --> 0:35:24.860
要嘛不被重视要嘛就是

838
0:35:24.860 --> 0:35:28.700
这个是操作系统的历史终结论了

839
0:35:29.720 --> 0:35:34.840
就跟那个就跟那个福山的历史终结论一样

840
0:35:35.360 --> 0:35:38.420
我们的操作系统也被Linux写下了终结论

841
0:35:38.680 --> 0:35:39.200
但是

842
0:35:39.460 --> 0:35:42.520
说实话那个我其实想到了另外一件事情

843
0:35:42.780 --> 0:35:43.300
我觉得

844
0:35:43.540 --> 0:35:45.860
就是Linux的神话

845
0:35:46.100 --> 0:35:46.880
这件事情

846
0:35:47.640 --> 0:35:51.220
其实那个大教堂与集市是有极大的功劳的

847
0:35:51.220 --> 0:35:56.340
而且在大教堂与集市里面我非常印象深的是他在讲到说

848
0:35:56.600 --> 0:36:00.700
以集市型的方式来开发开源软件

849
0:36:01.720 --> 0:36:02.740
会有非常

850
0:36:03.000 --> 0:36:05.040
好的创新的结果

851
0:36:05.560 --> 0:36:10.680
也就是以Linux为例讲为什么Linux会有很多很多的创新怎么怎么样

852
0:36:11.700 --> 0:36:15.540
这也就联想到刚才你在说到这个操作系统终结论

853
0:36:15.800 --> 0:36:19.640
就是觉得可以了我们用这样的一种集市化的开发模式

854
0:36:19.640 --> 0:36:22.720
就会有很好的创新源源不断的从Linux出来

855
0:36:24.000 --> 0:36:25.020
但是我们

856
0:36:26.040 --> 0:36:28.860
做科技的大家很喜欢一个这种

857
0:36:29.360 --> 0:36:31.680
很简单大家可以了解的叙述

858
0:36:34.240 --> 0:36:34.740
没有

859
0:36:35.000 --> 0:36:37.040
就像我们讲给

860
0:36:37.560 --> 0:36:39.100
小孩子的励志故事

861
0:36:39.600 --> 0:36:42.940
牛顿发现万有引力因为他被苹果砸到头

862
0:36:43.960 --> 0:36:47.040
但是实际上去讲是因为那个

863
0:36:47.280 --> 0:36:48.820
牛顿拿到了一个

864
0:36:48.820 --> 0:36:50.100
军方的合约

865
0:36:50.600 --> 0:36:53.680
问他说这个砲弹要怎么打可以打得远

866
0:36:55.220 --> 0:36:57.520
他是在那个合约底下去把

867
0:36:57.780 --> 0:37:01.620
整个这个牛顿力学去研究出来的

868
0:37:02.120 --> 0:37:04.940
但是我们就不想去讲这个牛顿这个炼金室

869
0:37:05.200 --> 0:37:07.240
拿到一个这个

870
0:37:07.500 --> 0:37:09.040
打砲弹的合约

871
0:37:09.560 --> 0:37:11.080
这个听起来就很伤人

872
0:37:11.340 --> 0:37:13.400
就很没有科学家的励志性

873
0:37:13.640 --> 0:37:16.720
我们就要讲一个这个苹果砸到头

874
0:37:16.980 --> 0:37:18.260
牛顿没那么闲

875
0:37:18.260 --> 0:37:18.760
一点啊

876
0:37:19.540 --> 0:37:23.380
我觉得IT已经是一个七八十年历史的产业了

877
0:37:23.880 --> 0:37:25.940
就像我们喜欢看

878
0:37:26.180 --> 0:37:27.980
我们可以看三国志

879
0:37:28.240 --> 0:37:30.800
他有一个官方型的历史也可以

880
0:37:31.060 --> 0:37:34.640
开始挖一些这些IT史把它当作三国演义啊

881
0:37:35.400 --> 0:37:36.180
因为毕竟

882
0:37:36.420 --> 0:37:38.480
这后面有很多真正的人性

883
0:37:40.520 --> 0:37:42.320
我看到的说法就是说

884
0:37:42.580 --> 0:37:45.640
当年什么林纳斯就立志要

885
0:37:45.640 --> 0:37:48.720
挑战微软的霸权什么什么

886
0:37:49.480 --> 0:37:51.780
所以才会下决心要搞一个Linux

887
0:37:52.300 --> 0:37:54.080
这个好像他从来就没想过

888
0:37:54.340 --> 0:37:57.420
他自己是从来没想过在他的自传里也没想过

889
0:37:57.680 --> 0:37:58.180
但是

890
0:37:58.440 --> 0:38:01.260
但是外面的坊间的书就会这么写

891
0:38:02.020 --> 0:38:03.820
没有Linux跑去做CPU啊

892
0:38:06.380 --> 0:38:08.940
这个我不知道做CPU的事情我倒不知道

893
0:38:09.200 --> 0:38:12.000
他那时候加入的一家公司叫TransMega

894
0:38:12.000 --> 0:38:13.540
做X86的CPU拷贝

895
0:38:15.840 --> 0:38:16.600
兼容CPU

896
0:38:17.120 --> 0:38:18.140
兼容CPU

897
0:38:19.680 --> 0:38:22.500
其实他那一段的时代其实也蛮有趣的

898
0:38:23.000 --> 0:38:23.780
就是因为

899
0:38:24.540 --> 0:38:25.820
在90年末

900
0:38:26.080 --> 0:38:27.880
这2000年开始的时候

901
0:38:28.140 --> 0:38:30.940
包括整个开源的大家开始在神化

902
0:38:31.460 --> 0:38:32.740
这些所有的东西

903
0:38:33.260 --> 0:38:35.040
然后把Linux神化到就是

904
0:38:35.560 --> 0:38:36.580
这个是一个

905
0:38:36.840 --> 0:38:40.160
从芬兰发过三道圣光的这个CPU

906
0:38:40.160 --> 0:38:42.460
发过三道圣光的这个天才

907
0:38:43.740 --> 0:38:47.580
然后今天他加入了这家非常神秘的公司叫TransMega

908
0:38:48.100 --> 0:38:50.140
TransMega也喜欢搞这个PR

909
0:38:50.900 --> 0:38:53.980
所以当TransMega宣布以后TransMega的网站

910
0:38:54.500 --> 0:38:55.780
那时候去的时候

911
0:38:56.020 --> 0:38:57.300
他是完全空白的

912
0:38:57.560 --> 0:38:59.360
那你是要去看他的代码

913
0:38:59.620 --> 0:39:01.400
然后你看他的代码他

914
0:39:01.660 --> 0:39:02.680
他有一个注解

915
0:39:03.200 --> 0:39:03.960
写说

916
0:39:04.740 --> 0:39:06.020
这里没有东西

917
0:39:06.020 --> 0:39:11.400
大家围绕了TransMega就打造了非常多的神化因为

918
0:39:11.920 --> 0:39:13.960
TransMega的创始人是几个

919
0:39:14.220 --> 0:39:15.760
做CPU很有名的

920
0:39:16.000 --> 0:39:17.280
我记得包括是当年

921
0:39:17.540 --> 0:39:20.360
包括做Alpha的做这个Spark的

922
0:39:20.620 --> 0:39:21.120
一些

923
0:39:21.380 --> 0:39:24.200
主要的工程师都加入然后Linux也加进去

924
0:39:24.460 --> 0:39:26.760
然后Linux加进去其实也不是去做Linux的

925
0:39:27.780 --> 0:39:30.860
因为TransMega出来的CPU其实是跑不动Linux

926
0:39:30.860 --> 0:39:37.000
他那时候他也宣布了他要停止Linux的开发他要去认真的工作

927
0:39:37.260 --> 0:39:38.540
已经准备不干Linux了

928
0:39:38.800 --> 0:39:40.580
他要去做真正有意义的事情

929
0:39:41.100 --> 0:39:41.860
OK

930
0:39:42.380 --> 0:39:44.940
说好说坏他也是一个计算机的博士

931
0:39:45.700 --> 0:39:47.760
那你一个计算机的博士

932
0:39:48.000 --> 0:39:48.780
当你

933
0:39:49.280 --> 0:39:53.120
人生被卡在70年代的计算机研究的时候

934
0:39:53.900 --> 0:39:55.180
其实你也会很郁闷的

935
0:39:55.440 --> 0:39:57.740
那时候差不多快30

936
0:39:57.740 --> 0:40:02.620
要抛开自己的玩具做点真正有意义的事情

937
0:40:02.860 --> 0:40:07.480
这么长时间可能也没什么新奇感和一些乐趣了

938
0:40:09.520 --> 0:40:15.660
他找一个还不错的人来继续做kernel的这个maintainer

939
0:40:15.920 --> 0:40:16.940
然后他该干嘛干嘛去

940
0:40:17.460 --> 0:40:20.780
现在没有很多新东西在里面也没很好玩的东西在里面

941
0:40:22.580 --> 0:40:25.900
所以他那时候就基本上他那时候就停掉了

942
0:40:25.900 --> 0:40:28.720
这个Linux的维护跑去Transmeta

943
0:40:29.480 --> 0:40:31.020
因为Transmeta那时候

944
0:40:31.520 --> 0:40:33.840
实际上他们是要做很有趣的东西

945
0:40:34.600 --> 0:40:36.640
其实这个也是另外一个考古

946
0:40:36.900 --> 0:40:40.480
我们现在大家每天在讲RISC是下一个CPU

947
0:40:41.000 --> 0:40:42.280
其实那个时代

948
0:40:42.800 --> 0:40:43.300
在

949
0:40:43.820 --> 0:40:45.100
90末那个时代

950
0:40:45.360 --> 0:40:46.880
RISC还是一个

951
0:40:47.400 --> 0:40:51.500
蛮主流的CPU MIPS SPART APHA POWERPC

952
0:40:51.760 --> 0:40:52.520
全部都是RISC

953
0:40:52.780 --> 0:40:54.560
那时候有一个新的做法

954
0:40:54.560 --> 0:40:58.140
新的想法就是我不是精简的指令集

955
0:40:58.400 --> 0:41:00.200
是非常大的指令集

956
0:41:00.440 --> 0:41:03.520
就是我的计算机的指令是很长的一串

957
0:41:03.780 --> 0:41:06.340
然后我所有要做的事情都在这上面

958
0:41:06.600 --> 0:41:09.920
那段时间其实有很多的尝试一个是

959
0:41:10.440 --> 0:41:11.960
Intel那时候出了一个

960
0:41:12.480 --> 0:41:13.500
新的CPU

961
0:41:13.760 --> 0:41:15.560
然后Transmeta也在做这件事

962
0:41:16.320 --> 0:41:16.840
后来

963
0:41:17.340 --> 0:41:18.360
Transmeta弄出来了

964
0:41:18.620 --> 0:41:21.180
但是为了在市场上可能被接受

965
0:41:21.440 --> 0:41:21.960
所以

966
0:41:21.960 --> 0:41:24.520
他做了这个x86的兼容程

967
0:41:24.780 --> 0:41:28.620
就是Transmeta的第一台机器是没有办法跑Linux的

968
0:41:28.880 --> 0:41:30.420
他花所有的时间

969
0:41:30.680 --> 0:41:31.700
让Windows

970
0:41:31.960 --> 0:41:33.740
在这台机器上可以跑得起来

971
0:41:36.040 --> 0:41:37.320
因为到2000年的时候

972
0:41:37.580 --> 0:41:40.400
说实在的没有人真的这么care Linux

973
0:41:41.160 --> 0:41:41.680
我们

974
0:41:41.940 --> 0:41:45.520
不能够以2022年的眼光Linux的影响力

975
0:41:46.040 --> 0:41:48.600
去想2000年的Linux是必然

976
0:41:49.100 --> 0:41:49.620
因为

977
0:41:49.620 --> 0:41:51.920
这个就是落入我们传统想的这种

978
0:41:52.440 --> 0:41:53.460
科技必然性

979
0:41:53.720 --> 0:41:56.800
所以你能够想像就是Toros那时候

980
0:41:57.060 --> 0:41:59.360
也想要在人生中找到一个意义呀

981
0:41:59.620 --> 0:42:05.240
这些其实历史都是可以考据的不过现在好像都已经被打成野史了

982
0:42:06.780 --> 0:42:08.820
而且都可以算是不重要的细节

983
0:42:09.340 --> 0:42:11.380
真正重要的是他做出来的

984
0:42:11.640 --> 0:42:17.780
我觉得关键在于他给后面的人和事带来什么样的启发

985
0:42:17.780 --> 0:42:20.860
否则就肯定在漫漫长河当中就淹没了

986
0:42:21.120 --> 0:42:22.640
就回到我们今天开始的

987
0:42:22.900 --> 0:42:24.700
Ted Nielsen从1960年

988
0:42:25.720 --> 0:42:27.520
开始走Hypertext这件事

989
0:42:27.760 --> 0:42:28.800
我们还是有

990
0:42:29.040 --> 0:42:31.600
新的项目继续在尝试之前

991
0:42:31.860 --> 0:42:32.880
没走成的路

992
0:42:33.920 --> 0:42:34.680
那要能够

993
0:42:34.940 --> 0:42:36.720
去做这种尝试

994
0:42:36.980 --> 0:42:38.780
要知道这件事情的存在

995
0:42:39.280 --> 0:42:41.340
我想这是IT的野史

996
0:42:41.600 --> 0:42:43.640
IT演绎的存在的价值吧

997
0:42:43.640 --> 0:42:44.400
嗯

998
0:42:45.940 --> 0:42:49.780
我也会去研究一些历史啊就是经常去看一些历史

999
0:42:50.040 --> 0:42:52.860
我会比较感兴趣的是那些实际上失败了

1000
0:42:53.620 --> 0:42:55.420
但是实际上他有着

1001
0:42:55.920 --> 0:42:57.200
很好的潜质的

1002
0:42:57.460 --> 0:42:59.260
这样的一个东西

1003
0:43:00.020 --> 0:43:01.040
比如说

1004
0:43:02.580 --> 0:43:05.660
我最早开始接触这个Objective-C这个语言的时候

1005
0:43:05.920 --> 0:43:09.760
我觉得这个语言比我用过的C++什么的都更加的舒服

1006
0:43:10.520 --> 0:43:13.080
然后我就去研究他为什么会让我觉得比较舒服

1007
0:43:13.080 --> 0:43:13.840
他的

1008
0:43:14.360 --> 0:43:15.640
他的根源是哪里

1009
0:43:16.660 --> 0:43:18.720
就他往上追溯他是从哪里来的

1010
0:43:18.960 --> 0:43:21.520
那么那些东西其实都已经淹没在历史长河里面了

1011
0:43:21.780 --> 0:43:23.060
但他有些东西非常了不起

1012
0:43:23.580 --> 0:43:26.140
然后后面就发现其实很多人有跟我类似的想法

1013
0:43:26.400 --> 0:43:28.960
比如说Orlan那个语言的那个发明者

1014
0:43:29.460 --> 0:43:32.020
他就特别特别喜欢smalltalk里面那个

1015
0:43:32.280 --> 0:43:34.080
那个messaging的那个概念

1016
0:43:34.580 --> 0:43:36.880
他觉得面向对象的本质其实是messaging

1017
0:43:37.140 --> 0:43:39.440
就是一个对象给另外一个对象发消息

1018
0:43:39.960 --> 0:43:42.520
而不是什么继承啊什么乱七八糟的

1019
0:43:42.520 --> 0:43:43.280
什么乱七八糟的东西

1020
0:43:44.560 --> 0:43:47.120
那么这个时候我们就看到了很多更重要的东西

1021
0:43:47.380 --> 0:43:52.000
那么未来的时候很多语言他可能已经没有C++那样的壳了但是

1022
0:43:52.240 --> 0:43:54.560
他继承了面向对象里面最有价值的部分

1023
0:43:55.320 --> 0:43:59.420
所以其实我觉得人类的创新本来就是这样的一种组合式的

1024
0:43:59.680 --> 0:44:00.960
螺旋式的创新

1025
0:44:01.980 --> 0:44:04.020
所以我考古的动机就在这里就是

1026
0:44:04.280 --> 0:44:06.320
从里面能翻出一些未来有用的东西

1027
0:44:07.100 --> 0:44:08.880
我觉得这个就是

1028
0:44:09.660 --> 0:44:10.160
考古嘛

1029
0:44:10.420 --> 0:44:11.200
慢慢挖嘛

1030
0:44:11.200 --> 0:44:13.000
提到adjective C

1031
0:44:13.260 --> 0:44:14.540
其实也蛮有趣的

1032
0:44:15.040 --> 0:44:16.580
adjective C来自smalltalk

1033
0:44:17.360 --> 0:44:18.120
然后

1034
0:44:18.380 --> 0:44:21.180
smalltalk的发明者是Alan Kay

1035
0:44:21.960 --> 0:44:27.340
那我96年的时候其实跟Alan Kay在同一个办公室

1036
0:44:30.400 --> 0:44:33.740
不过我那时候年轻气盛嘛又把Alan Kay当作是一个老疯子

1037
0:44:35.780 --> 0:44:38.080
Alan Kay是很有个性

1038
0:44:38.080 --> 0:44:40.900
但是那个Steve Jobs特别喜欢他

1039
0:44:41.660 --> 0:44:42.180
其实

1040
0:44:42.420 --> 0:44:43.200
Alan Kay他

1041
0:44:43.700 --> 0:44:45.500
做的他smalltalk

1042
0:44:45.760 --> 0:44:46.780
然后后来他

1043
0:44:47.040 --> 0:44:48.060
把smalltalk

1044
0:44:48.820 --> 0:44:51.900
从Zerox弄出来之后搞到Apple

1045
0:44:52.660 --> 0:44:54.200
然后在Apple他

1046
0:44:54.460 --> 0:44:56.000
弄了一个新的版本

1047
0:44:56.500 --> 0:44:57.020
叫Squid

1048
0:44:57.540 --> 0:45:00.340
MIT有个学生拿了Squid

1049
0:45:01.120 --> 0:45:02.400
写了一个进程

1050
0:45:02.660 --> 0:45:03.420
叫Scratch

1051
0:45:03.420 --> 0:45:09.560
现在非常流行的教育语言

1052
0:45:12.640 --> 0:45:14.160
下次可以聊他们的八卦

1053
0:45:14.420 --> 0:45:14.940
OK

1054
0:45:15.440 --> 0:45:16.220
OK这个好玩

1055
0:45:22.620 --> 0:45:26.460
谢谢David咱们今天就先聊到这

1056
0:45:28.760 --> 0:45:29.780
下次见

1057
0:45:29.780 --> 0:45:33.100
下次见拜拜

