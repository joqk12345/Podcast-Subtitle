0
0:00:00.000 --> 0:00:11.000
好各位朋友大家好啊欢迎来到后互联网时代的乱谈啊今天在周末的下午我赵丽跟我们几个朋友啊这个老庄

1
0:00:11.000 --> 0:00:29.800
哎大家好来王老师大家好啊我们来聊聊天嗯最近的这个事儿还挺多的啊今今天我们重点可能会聊几个话题哈也首先一个呢是最近大家也比较关注的哈也有很多人在问起来的就是关于

2
0:00:29.800 --> 0:00:59.760
这个呃国际形势的变化哈就是这个俄罗斯跟乌克兰这边的这个事儿呢呃其实它跟我们这个节目的关联没有那么大因为它科技上的东西不多啊但是它对于未来的走势啊影响还是挺大的而且很可能会影响我们每一个人嗯这个话题很大啊今天没有时间这个很详细的展开我就简单说一说呃我我我最近的一些观察和判断

3
0:00:59.800 --> 0:01:29.760
啊其实这个问题它的一个特点啊就是信息很多很杂而且信息的质量这个两有不齐啊就是有非常多的假信息呃但是观察这样的问题也有些方法啊时间关系我们我今天就就不去详细讲东西了只讲我看到的一些结论啊就是我我分析出来的一些结论首先哈就是目前可以说正式的进入了

4
0:01:29.800 --> 0:01:42.480
这个俄乌的战争的第二阶段了啊就是俄罗斯宣布动员这件事情这件事情呢有一个时间线简单跟大家理解啊就首先是这个乌克兰发起了一次

5
0:01:42.480 --> 0:02:12.480
呃比较大规模的这个反击那这个反击的效果呢呃首先是在南部啊在赫尔松这边去嗯造了一些事但实际上真正的力量投入在北边就是哈尔科夫然后把哈尔科夫原来俄国占领的一些据点就拿回来了啊但实际上呢之前在大概九月初啊就看到有一些这个呃开源情报的这个信息源啊就说大概在

6
0:02:12.480 --> 0:02:42.480
九月的七号八号左右就是开始反攻之前其实俄国占领哈尔科夫的很多军队已经退回去了那退回去的原因现在不确定但是大家很多猜测哈然这是时间线的第一个阶段就是俄国退了一些人回去然后武汉乘势占领了北部的这个一些湿地啊这是第一个关键的时间点那么这个事件发生之后呢呃

7
0:02:42.480 --> 0:02:53.040
俄罗斯其实没有采取很立刻的一些行动然后第二个时间点就是这个月月中十五号左右啊在这个中亚举办的这个上河组织峰会

8
0:02:53.920 --> 0:03:03.840
然后这个峰会上呃普京建了几个重头的这个国家的领袖啊东方两个大国的这个领袖跟他都有单独的会见

9
0:03:04.640 --> 0:03:11.800
然后这两次会见里面事后所公开的信息很接近很相似

10
0:03:12.480 --> 0:03:18.480
那大家讲了很类似的话什么话呢就是说哎我们对局势非常的关注

11
0:03:19.520 --> 0:03:27.040
那关注什么呢那这个没有非常详细的展开但是各种方面的分析我们可以猜测就大概聊的是

12
0:03:27.760 --> 0:03:34.320
嗯现在到底怎么样了怎么怎么还没有搞定啊这样拖下去真的好吗

13
0:03:35.240 --> 0:03:41.680
大概是这么样的一些问题所以不禁也做了相应的回应这是第二个很重要的节点

14
0:03:42.320 --> 0:03:45.760
然后第三件就是刚刚发生的二十号左右的这个事情啊就是

15
0:03:46.320 --> 0:03:52.560
呃俄罗斯全国做了一个叫部分动员他首先是全国范围界动员但他只只动员一部分

16
0:03:53.080 --> 0:03:59.080
为什么只动员一部分也有很多原因啊就是跟这个战争的性质有很大关系啊他不是一个

17
0:03:59.840 --> 0:04:06.200
没有瑕疵的正义战争啊他是有很多问题的所以他在国内要争取这个完全的

18
0:04:07.040 --> 0:04:12.800
嗯民众的支持其实也不容易所以一直都有所保留好那现在俄罗斯到底想干嘛

19
0:04:13.760 --> 0:04:15.920
啊非常缺体啊

20
0:04:16.760 --> 0:04:22.520
我现在看到的啊他们实际上采取的这个行动是三板斧

21
0:04:23.560 --> 0:04:29.960
哪三板斧呢第一个是呃争宾啊最少争三十万

22
0:04:30.880 --> 0:04:34.880
最多争多少呢公布出来的这个争宾的这个法令啊

23
0:04:35.280 --> 0:04:43.720
里面的这个争宾的数量是涂黑的是涂掉的啊涂掉的原因这个克里姆林工的发言人也说了他说这个

24
0:04:44.720 --> 0:04:48.040
涉及到这个军事机密所以这个具体的数量是不能公开的

25
0:04:48.600 --> 0:04:54.800
但是他们国防部长说了最少三十万那最多多少呢没有人知道啊这个可能对不怕吓得你们

26
0:04:55.640 --> 0:05:02.320
我觉得我觉得这个上限是可能非常高的嗯可能是比如说一百万这样的一个数量

27
0:05:03.160 --> 0:05:12.680
这个呃俄罗斯是这样的俄罗斯他的他的所谓的这个预备兵抑制他的就是所谓他的预备兵抑这这个这个群体

28
0:05:13.040 --> 0:05:15.040
正式的群体大概两三百万

29
0:05:15.960 --> 0:05:21.880
然后他们如果按照他们国内的动员法去征召的话上限大概是两千五百万

30
0:05:23.840 --> 0:05:31.640
所以他这一次预留的这个空间就以后如果再再进一步的这个增增加动员的话就不用再申请法令了

31
0:05:31.640 --> 0:05:40.960
所以这个上限可能还是比较高啊呃所以征兵征兵的目的是什么呢是防守那就是守住现在的最关键的几个地区

32
0:05:41.560 --> 0:05:44.160
哪几个地区呢顿巴斯的两个共和国

33
0:05:44.680 --> 0:05:49.640
然后还有就是这个赫尔松和那个扎布罗的核电站

34
0:05:50.400 --> 0:05:57.760
这四个地方是他们现在的呃相当于底线哈这四个地方就准备公投那所以必须要征兵去把它守住

35
0:05:58.400 --> 0:06:05.440
但是不是守得住的这个很大的问题啊今天刚刚看到的这个呃一些开源情报的这个信息源

36
0:06:06.080 --> 0:06:10.280
就已经在已经发现了一些动向啊就是认为

37
0:06:11.080 --> 0:06:19.600
吴坎正在准备一次在金明两天就开始的一个大的战役向这个呃卢盖斯克进攻

38
0:06:20.520 --> 0:06:27.160
那卢盖斯克这个肯定是俄罗斯不能输的因为这个是最开始的时候就说这是我要去呃

39
0:06:27.840 --> 0:06:36.560
这个拿下的啊两两个共和国啊这个顿巴斯的两个共和国那么这个是很重要的一个节点到底怎么样不知道我们继续看

40
0:06:37.520 --> 0:06:43.080
这个如果说被乌克兰收回去的话那这个可能对俄罗斯的打击会非常大

41
0:06:43.560 --> 0:06:51.960
而所以要现在的兵员现在的这个部队要要要他们要想办法顶住啊然后后续有三十万的部队进来就可以去防守这四个地方

42
0:06:52.280 --> 0:06:56.720
这是三板第一个主要的部分第二部分就是这四个地方进攻投

43
0:06:57.600 --> 0:07:03.480
啊这个工头不是简单的说独立啊这样的工头而是独立和加入俄罗斯联邦

44
0:07:04.600 --> 0:07:10.800
那这个麦里大步啊这是之前一直都没有去做的事情呃这个也很难说

45
0:07:11.760 --> 0:07:18.040
能产生什么效果呃因为西方都不认甚至中国也不会认啊这个是很确定的

46
0:07:19.080 --> 0:07:24.480
那么如果确定了他加入俄罗斯的话那么他就变成俄罗斯的领土了

47
0:07:25.000 --> 0:07:32.800
那么俄罗斯就可以声称啊自己不是在对外作战而是在打一场国土防卫战

48
0:07:33.520 --> 0:07:37.280
那么这就是第三板斧了下面我就说我现在开始防卫我自己的国土

49
0:07:37.840 --> 0:07:50.320
那如果有人敢来进犯的话我们可以采取任何手段进行阻止啊这是他们公开讲的那么这个被西方广泛的解释为有可能动用战术和武器

50
0:07:51.640 --> 0:08:02.400
所以现在的三板斧就是第一增兵先守住第二工头啊加入俄罗斯第三把这个战争的性质转变为一场俄罗斯的内部的

51
0:08:02.400 --> 0:08:09.360
国土防卫战这是他们的算盘了但能不能做到这个就很难讲了这个接下来要继续观察

52
0:08:09.960 --> 0:08:14.160
但是总的来说呢就是对我们影响有限对我们影响有限

53
0:08:14.800 --> 0:08:21.080
嗯有有有很多人说哎这个帮我们扛住一些压力其实谈不上啊我们的压力照样还在那里

54
0:08:21.880 --> 0:08:30.080
呃或者说我们这个啊趁这个机会更高速谈一些条件这个更加是愚蠢了这个是绝对不不不可能的事情

55
0:08:30.800 --> 0:08:34.720
呃总之就是现在我们还是该干嘛干嘛这个事呢关注就好了

56
0:08:35.400 --> 0:08:45.400
啊那现在不论是呃我们还是向美国或者西方其实现在存在着一个合作的契机就是防止核战争

57
0:08:46.400 --> 0:08:52.360
啊这个美国的几大报包括像纽约时报已经写了一个专门的这个专这个专栏文章

58
0:08:53.120 --> 0:08:58.440
说拜登现在的主要的工作就是要防止打出核战争来

59
0:09:00.440 --> 0:09:09.320
所以这个这个一下子变成了一个主轴了这个如果说在这件事情之前世界上打核战争的概率是零的话

60
0:09:09.720 --> 0:09:12.680
那现在可能这个概率变成了比如说万分之一

61
0:09:13.520 --> 0:09:20.360
那这个是一个质变啊所以大家得得去关心的大概就是这么一个状态

62
0:09:21.120 --> 0:09:28.920
嗯那大家反正现在还在进展当中啊关于这件事情呢我觉得比较有价值的点是

63
0:09:28.920 --> 0:09:39.480
怎么从那些纷繁的假假的信息里面去看出一些真正呃真实的和有价值的一些信息啊这个回头有有机会我们再说吧

64
0:09:39.480 --> 0:09:45.280
OK呃那个老庄跟王老师你们有什么要说的吗关于这个事情

65
0:09:45.280 --> 0:09:52.320
我就在想他们这个争冰的事情争了冰以后就是送送到前线去吗

66
0:09:52.320 --> 0:09:56.080
还是说还是说只是吓唬人做个样子

67
0:09:56.080 --> 0:10:03.440
呃我个人认为是肯定要上前线的原因是两点第一点真的缺人

68
0:10:03.440 --> 0:10:09.520
真的缺人这个乌克兰是一个面积非常大的一片国土啊

69
0:10:10.720 --> 0:10:17.800
六十多万平方公里哥中国的话只有四个最大的省比他大一点青海是六十多万就他比青海小一点点

70
0:10:18.520 --> 0:10:24.840
像广东这种大家印象中还比较大的省其实才十几万平方公里嗯

71
0:10:24.840 --> 0:10:29.560
呃那个那个像台湾这种那更就是一个小领头所以他特别大

72
0:10:30.560 --> 0:10:36.320
然后呢俄罗斯和乌克兰在这巨大的领土上面各自投入的就几十万兵力

73
0:10:37.040 --> 0:10:44.040
根本站都站不住就相应就是说你最多只能站几个据点你这几个据点一撤退大片子的领土就是空着的

74
0:10:45.280 --> 0:10:50.680
好那这个事儿呢对于那些不重要的地带也就算了但是现在正在攻投的那四个地方

75
0:10:51.240 --> 0:10:55.120
你要守住吧如果这些地方被打掉的话人家凭什么攻投支持你啊

76
0:10:55.960 --> 0:11:01.600
所以两边都会去争夺这个东西而现在就是兵力是绝对是非常非常缺的这是肯定的第一

77
0:11:02.080 --> 0:11:09.120
第二呢他们现在这一轮征兵也讲得很清楚说呃主要征那些有战斗经验的

78
0:11:10.480 --> 0:11:18.040
实际上是退役的军人这个是主要的部分或者是已经训练过的一些预备兵

79
0:11:19.040 --> 0:11:25.480
那这些已也虽然俄罗斯人口不算多啊然后这个也有各种各样其他的问题但是

80
0:11:25.880 --> 0:11:33.720
要争取几十万这样的人我觉得还是ok的然后通过比如说几周的军事训练然后就上去把人换回来

81
0:11:33.880 --> 0:11:37.760
他是有个轮换的概念的其实有点像什么有点像

82
0:11:38.200 --> 0:11:42.880
八十年代我们国家打的这个对月的这个轮战

83
0:11:43.720 --> 0:11:49.760
嗯啊嗯当当我我我们那个时候冰原充足啊就是随便打就是

84
0:11:50.800 --> 0:11:55.440
十万人上去打一段时间撤下来再换十万人上去这个这个非常非常的

85
0:11:56.280 --> 0:12:00.240
就没什么大挑战但对俄罗斯来讲确实是有点挑战所以他这次会去独立做

86
0:12:00.720 --> 0:12:05.360
但是时间上确实是个问题我我不认为他可以立刻比如说一周之内

87
0:12:06.160 --> 0:12:10.320
完成第一批比如说五万或者十万人的这样的这个这个开竞

88
0:12:10.880 --> 0:12:15.200
这个挺难的所以现在其实从现在开始接下来的两周

89
0:12:16.040 --> 0:12:18.240
我觉得是一个大变数的时代

90
0:12:19.080 --> 0:12:24.840
因为现在乌克兰背后就是美国和北约了就是整个情报指挥训练

91
0:12:25.400 --> 0:12:31.440
武器装备全都是北约的也就是实际上是在跟这个世界上第一流的军事力量和情报力量在打

92
0:12:32.000 --> 0:12:35.920
那么他们一定不会放过这个短暂的这个时时间窗口了

93
0:12:36.920 --> 0:12:39.960
就你正在补血吗我就趁你没有补到的时候一定会干点什么

94
0:12:43.160 --> 0:12:46.480
所以另外一个传闻我就想找你求证一下

95
0:12:47.000 --> 0:12:53.400
就是我我听说什么俄罗斯从什么博物馆里面拿出来二战时期的老兵器出来打

96
0:12:54.560 --> 0:12:55.640
确实是这样吗

97
0:12:56.360 --> 0:12:58.320
嗯我我觉得可能性不大

98
0:12:59.720 --> 0:13:01.000
从现在站场上

99
0:13:01.000 --> 0:13:06.120
假新闻假新闻现在绝对不会从博物馆找二战的但是为什么呢

100
0:13:06.720 --> 0:13:09.920
会从这个仓库里面把七八十年代

101
0:13:10.720 --> 0:13:14.120
前苏联造的那些东西拿出来用这是肯定的而且已经在用了

102
0:13:15.200 --> 0:13:18.600
其实之前一直都在用了但是这些东西到底有多少能用到什么程度

103
0:13:19.400 --> 0:13:21.480
这个也是很大的问题比如我举个例子

104
0:13:23.040 --> 0:13:30.320
现在俄罗斯最缺的是什么其实最缺的是可以在战区外发射的高精度的

105
0:13:31.000 --> 0:13:31.400
导弹

106
0:13:33.080 --> 0:13:40.920
比如他这个飞机都不用进战区在隔着几百公里的地方发任任一个巡航导弹然后他飞出去自动命中目标高精度的

107
0:13:41.360 --> 0:13:49.200
那么这种东西其实是现在战争里面非常好用的东西嘛像美国每次打仗一上来就首先就是战斧开路就这玩意儿

108
0:13:50.040 --> 0:13:54.200
从海上发射的从这个空中发射的都可以打

109
0:13:54.880 --> 0:14:02.560
但这种东西的数量啊就是很多人认为他好像很多但其实即使美国他也就是长期维持几千枚

110
0:14:04.480 --> 0:14:07.600
打完就补打完就补但他就维持几千枚没多少的

111
0:14:08.320 --> 0:14:16.600
俄罗斯可能更少而且现在可能也打得差不多了而他补充起来比美国慢很多那什么东西容易做呢就是扔的这个炸弹

112
0:14:17.600 --> 0:14:23.200
就是没有制导的炸弹但是他可以由飞机来控制他落点

113
0:14:23.720 --> 0:14:27.280
比如当年这个炸了我们南联盟使馆的那个东西

114
0:14:28.920 --> 0:14:36.000
叫接大母就是一种有带制导能力的一个炸弹但他要求那个轰炸机必须要飞到那个目标上空

115
0:14:36.840 --> 0:14:44.360
这种东西就很多很多但这种东西呢以及那个先进的可以飞到战区上空安全投弹的

116
0:14:44.840 --> 0:14:48.240
那就最好是隐身轰炸机嘛那这种东西俄罗斯又没有

117
0:14:50.400 --> 0:14:58.440
他铁炸弹很多但他要争炸弹就冒风险所以最近你经常看到乌克兰会把俄罗斯的这个这个战战斗机打下来

118
0:14:58.960 --> 0:15:02.040
就他必须要冒险去战区上空去投弹

119
0:15:02.040 --> 0:15:07.760
所以就是这个武器啊他跟不上并不是绝对数量而是那种好用的跟不上

120
0:15:09.760 --> 0:15:16.880
明白了总觉得俄罗斯对这场战争的准备是严重不充分的严重不充分非常不足

121
0:15:18.880 --> 0:15:30.320
所以这个很多军迷也在说啊就说这个苏联跟俄罗斯真是好啊就是给我们多次示范了这个错误路径防止我们犯同样的错误

122
0:15:30.440 --> 0:15:41.080
如果我们哪一天必须要干的什么的时候这个必须要做好充分的准备至少不能像他们这样的对

123
0:15:43.280 --> 0:15:43.780
哎

124
0:15:44.920 --> 0:15:48.480
还是希望能够早点结束啊现在已经疫情挺难了

125
0:15:49.520 --> 0:15:59.000
呃我我我认为现在普京和俄罗斯的这个首脑部啊他们所采取的策略是冲着尽快结束去的

126
0:15:59.520 --> 0:16:04.320
如果我刚才说的他们这个三板斧达成了战略目标的话也就是说

127
0:16:04.880 --> 0:16:13.200
守住了然后攻投了然后军队驻扎在当地开始做国度防卫的这样的长长期建设像同肯兵团一样就在那开始驻下来了

128
0:16:13.560 --> 0:16:22.240
那这种达成这个目标之后的话那其实战争就进入了一个相持阶段了就有点像啊这个呃这个我们

129
0:16:23.280 --> 0:16:23.760
志愿军

130
0:16:24.160 --> 0:16:32.840
那这个抗美援朝打被一样答应阶段之后我们就在那个地方停下来然后互相戳两下只是谈判的这个辅助手段

131
0:16:33.440 --> 0:16:39.480
因为任何战争都是政治的延续就你最终一定是围绕一个政治目标去做的

132
0:16:40.200 --> 0:16:46.520
当然军事上的目标很很单纯就是最大限度的杀伤对方有心力量但这个本身不解决问题

133
0:16:46.840 --> 0:16:52.360
他解决问题是你杀伤对方有心力量之后帮助你达成政治目标那这种话就是我

134
0:16:52.920 --> 0:16:53.560
就要去谈判

135
0:16:54.840 --> 0:17:00.760
那如果按现在这个搞法就根本没有谈判的基点不知道你要啥现在就明确了就要这四个地方

136
0:17:02.080 --> 0:17:06.440
你你你你谈不谈话你不谈我也反正也战了就这样战了就这样就像克里米亚一样

137
0:17:07.080 --> 0:17:11.520
嗯就搁那了我就照常做事了你也不敢来动我

138
0:17:12.560 --> 0:17:15.480
那你不谈损失是你如果你要谈的话那我们就谈一条件

139
0:17:16.480 --> 0:17:19.520
对吧我是战了但是我回过头来我给你安全保证

140
0:17:20.200 --> 0:17:24.600
我怎么怎么样那那就变成这种情况那这个对俄罗斯来讲我觉得是非常有利的

141
0:17:25.000 --> 0:17:30.760
所以现在哎那对面肯定是要努力的去阻止这个情况发生了

142
0:17:31.440 --> 0:17:36.360
啊就是要要要在局势稳定之前要拿回尽可能多的地方

143
0:17:36.920 --> 0:17:43.360
所以接下来的我觉得各把两个月就是入冬之前的这一两个月会非常非常关键

144
0:17:44.360 --> 0:17:47.760
OK呃这个事儿我们就说到这啊这个

145
0:17:48.680 --> 0:17:53.080
好下面一个话题呢是我们有我们的听友啊在这个

146
0:17:53.760 --> 0:18:01.360
呃节目下面留言问的一个问题就是想比较系统的了解一下开源许可证到底是怎么样的一个情况

147
0:18:01.680 --> 0:18:05.080
就到底有哪些开源许可证它们分别的特点是什么

148
0:18:05.400 --> 0:18:09.400
啊以及对我们有什么影响类似这样子的那这方面就

149
0:18:09.400 --> 0:18:16.000
就这个其实我们老庄跟王老师都非常非常专业啊所以请这个老庄来跟我们讲一讲

150
0:18:17.200 --> 0:18:23.680
呃其实不能算专业我我自己因为在这个行当里面接触了很多年的开源

151
0:18:24.120 --> 0:18:30.400
反而觉得这个开源许可证这件事情不知道从何说起觉得哇这么复杂的事情

152
0:18:30.800 --> 0:18:37.760
真的是真的是几十分钟或者是简简单的一个问答就能讲清楚的吗反而会觉得特别的复杂

153
0:18:38.360 --> 0:18:46.040
呃我们先试着讲一讲啊就是第一个就是讲什么是许可证我们先不说开源许可证讲什么是许可证

154
0:18:47.080 --> 0:18:57.040
呃就只说软件的不是其他的其他的更复杂软件的许可证其实很早就有在有开源之前就有就是

155
0:18:58.160 --> 0:19:06.640
呃比如说我把一个软件卖给你同时会有一份文档这个文档呢有可能是电子版的有可能是纸质版的

156
0:19:07.480 --> 0:19:17.920
这里面就规定你能拿来干什么你不能拿来干什么比如说呃这个软件有可能有些许可证他是卖这个席位的

157
0:19:18.440 --> 0:19:23.160
就比如说呃我的软件在你的公司里只准一百个人用

158
0:19:24.400 --> 0:19:28.600
因为我只买卖了一百个席位给你多于一百个不准用

159
0:19:29.160 --> 0:19:33.440
虽然你们公司有一千人虽然这软件已经在你们这个公司里了虽然

160
0:19:34.120 --> 0:19:38.800
虽然你其实这个软件是可以免费复制的不限复制的但是就只有一百个人用

161
0:19:39.600 --> 0:19:47.800
而且的话呢有一些复杂的这种还带激活码的就是只有一百个人能激活激活完了以后剩下的人就用不了了

162
0:19:48.280 --> 0:19:58.120
这些都是许可证但是呢如果不是附带售销售原代码的情况下那么通常也没法改

163
0:19:58.640 --> 0:20:07.680
但是有一些商业软件也附带原代码也会说哎在公司里面你们可以改但是你改了之后不能再拿去卖

164
0:20:08.440 --> 0:20:14.320
这也是许可证的规范的范围之一其实全世界范围内那个几千几万种许可证吧

165
0:20:14.600 --> 0:20:22.560
就是包括开源软件和商业软件的都有的话那是非常非常多的而且还在不断地源源不断地产生因为

166
0:20:22.960 --> 0:20:28.080
内齐商业的许可证通常都是公司里面的专业的法律人员自己定的

167
0:20:28.760 --> 0:20:31.520
每个公司互相之间有可能参考一下有可能互相都不知道

168
0:20:32.400 --> 0:20:37.600
就定了各种各样不同的许可证这是普通的许可证开源许可证

169
0:20:38.600 --> 0:20:44.200
就更麻烦了就至少你讲一个概念就是有广义的开源许可证和狭义的开源许可证

170
0:20:45.440 --> 0:20:52.200
广义的开源许可证就是你任何在市面上通常能够看到的各种开源软件它背后通常会有一个

171
0:20:52.560 --> 0:20:59.480
许可证可以把它简称为开源许可证而狭义的许可证其实只针对于

172
0:21:00.320 --> 0:21:06.600
有一个组织叫开源软件促进会这个开源软件促进会他还专门有一个邮件列表

173
0:21:07.240 --> 0:21:17.320
这个邮件列表就专门会去审批说呃任何一款什么什么来试试是不是符合开源软件的定义叫欧斯蒂

174
0:21:18.000 --> 0:21:26.760
如果符合的他会有一个列表他就是这个开源软件促进会会维护这样一个列表这里面就表明他认可的

175
0:21:27.440 --> 0:21:32.600
这些软件来试试被称之为狭义的开源软件来试试

176
0:21:34.160 --> 0:21:38.040
然后为什么说这件事情很复杂因为我们还知道有另外一个

177
0:21:38.840 --> 0:21:42.520
著名的在开源软件之前就诞生的叫自由软件基金会

178
0:21:43.160 --> 0:21:49.480
然后呢自由软件基金会发明的最著名的这个来试试就叫吉皮埃尔就就是这个

179
0:21:50.240 --> 0:21:57.280
吉恩呦帕布利克来试试这个来试试一个叫做自由软件的

180
0:21:58.160 --> 0:22:02.600
来试试好接下来复杂的部分来了他们互相之间是

181
0:22:03.600 --> 0:22:10.080
不完全兼容的就说有很多的来试试同时被自由软件基金会和开源促进会

182
0:22:10.960 --> 0:22:15.200
认可所以一一款软件如果比他用的是吉皮埃尔的

183
0:22:15.760 --> 0:22:21.120
那么他通常既可以被称之为开源软件也可以被称之为自由软件

184
0:22:22.400 --> 0:22:23.720
但是就是有一些软件

185
0:22:24.720 --> 0:22:30.360
他只被欧莎认可因为自由软件基金会的维查斯多曼认为这个东西不自由

186
0:22:31.000 --> 0:22:33.640
这个不能够算是自由软件你最多算是开源软件

187
0:22:34.120 --> 0:22:38.680
但是也有反过来的有一些自由软件的来试是欧莎是不认的

188
0:22:39.200 --> 0:22:46.000
会说这个只是呃自由软件不算开源软件所以这就非常的绕啊就是说

189
0:22:46.760 --> 0:22:50.560
你还记得刚才我在说如何定义广义的开源许可证吗

190
0:22:51.160 --> 0:23:01.360
我们在说啊大多数市面上我们能够看到的开源软件所用到的来试试就可以称之为广义的开源软件的来试试但其实不对

191
0:23:01.800 --> 0:23:08.640
因为其实开源软件这个这个东西和自由软件这个东西本身是被来试试定义的

192
0:23:08.960 --> 0:23:14.520
而不是反过来的所以一个更加严格的说法叫做

193
0:23:15.040 --> 0:23:28.480
fl就是free slash然后是离离不离就是就是自由斜杠然后open source software就是自由开源软件的来试试

194
0:23:29.200 --> 0:23:31.880
可以被称之为广义的开源来试试

195
0:23:32.880 --> 0:23:41.200
好那么我们去看这个先不说自有软件对于这个来试试的定义只说开源软件的话呢

196
0:23:41.560 --> 0:23:47.480
他们有一个比较明确的一个叫做开源软件定义其中定义了十条

197
0:23:48.120 --> 0:23:53.760
就是说他他其实要点就是说如果有一款来试试你符合这十条标准

198
0:23:54.280 --> 0:24:01.240
那么你在当然其实还是需要经过osri的邮件列表里面的那一堆大佬的审批最后他才会被

199
0:24:01.720 --> 0:24:11.400
确认成为开源软件来试试这十条包括什么呢比如说啊获得这个源代码的人可以自由的把这个源代码再发布出去

200
0:24:12.360 --> 0:24:23.280
而且一定要有源代码你不能够说只有可执行文件没有源代码还有呢就是别人可以修改修改完了以后还可以再分发而且的话呢

201
0:24:24.280 --> 0:24:37.000
你不得对任何人或者团体有差别待遇你不说我我不能够呃我不给中国人用或者说我不给美国人用这个不行这叫做差别待遇另外呢是

202
0:24:38.040 --> 0:24:46.720
你不能够对这个软件的使用领域有差别待遇比如说你你不能够限制商业或者说我就不准你这个软件用于医疗

203
0:24:47.160 --> 0:24:51.360
或者是我不准你这个软件用于武器制造这个叫做差别待遇

204
0:24:52.320 --> 0:25:06.800
还有就是其他的一堆吧包括有一些比如说叫做必须技术中立啊不得限制其他软件啊诸如此类的就这个其实是不得限制其他软件是开门软件和自由软件一个很大的区别

205
0:25:07.760 --> 0:25:21.040
自由软件通常会说我是一个干干净净的自由软件你不能够把我和不自由的软件放在一起去销售就一张光盘上我都是干净的你不能够把干净的和不干净的混在一块放

206
0:25:21.360 --> 0:25:31.680
但是开园软件没有这个限制开园软件说我可以跟其他软件放在一起卖我我不在乎这就是开园软件和自由软件很重要的一个区别

207
0:25:32.560 --> 0:25:51.280
那么我们再回过头来看其实在社区里还有一个非常重要的赞识就叫做啊cc就是啊creative commons创作共用的知识共享的一个许可证这个许可证通常不会用来对软件进行许可证

208
0:25:51.360 --> 0:26:21.360
授权它通常都是用来呃许可那些呃文学作品啊艺术作品啊呃电子文档啊这种类型的东西而且的话呢我们去看一下这个许可证其实它还挺挺复杂的比如说最简单的就是你可以随便用随便我不管你只需要有一个cc杠牌就是有一个署名而且的话呢还有稍微复杂点就是说如果你再分发再修改之后呢你要跟我原来相同的

209
0:26:21.360 --> 0:26:51.280
方式去授权你不能够说呃你你再分发之后换了一个授权协议这个不行这叫做相同方式共享还有一种是叫禁止演译就是你只能用但是你不准改包括翻译这都算是演译的一种还有叫做呃必须署名而且不允许你用于商业用途还有最严格的是你必须署名而且你不能用于商业用途

210
0:26:51.360 --> 0:27:21.360
而且你还得继续地以相同方式共享等等当然还有禁止演译这些其实是一个排列组合这些排列组合当中的有些条款其实就已经不再符合开源软件的那个非歧视性条款非排他性条款因为开源软件一定会允许你修改就是一定允许你演译而且不会禁止你用于商用但是cc协议它就是可以不让你用于商用

211
0:27:21.360 --> 0:27:51.360
所以如果我们写了一本书或者是写了一篇文章我们加一个这个cc白然后呃nc就是禁止商用这就代表着你可以拿去翻译你可以拿去传播但是你不能拿这个东西去卖钱这其实我个人觉得cc协议其实是一个考虑得非常周全的一个菜单化的一种许可证的方法唯一的问题是

212
0:27:51.360 --> 0:27:58.800
他不是开源软件协议他不是开源协议他对他违背了一些开源的重要的原则

213
0:28:00.040 --> 0:28:03.680
当然他用户的也很广泛这是第一部分

214
0:28:04.520 --> 0:28:16.480
但还还只是讲基础知识啊接下来再讲的是如果我们要选择开源许可证我们到底怎么选其实呃在网上啊有一个流传的非常广的一个图

215
0:28:16.880 --> 0:28:24.560
最早其实是呃阮逸枫呃在二零一一年就翻译出来的在他的博客里面翻译的

216
0:28:25.440 --> 0:28:29.600
他其实简单的说吧就是如果你要对外开源

217
0:28:30.600 --> 0:28:38.760
然后呢你可以问自己几个问题问完了问题之后呢呃你就可以通常就可以找到一个决定

218
0:28:39.200 --> 0:28:44.320
比如说如果别人拿到你的源代码之后是不是可以避原

219
0:28:45.280 --> 0:28:51.240
那如果说可以避原的那么这就是一大类属于宽松型的来生

220
0:28:52.920 --> 0:28:55.360
所谓的宽松就是你对别人的要求比较少

221
0:28:55.720 --> 0:28:58.280
别人甚至可以拿去避原了以后接着卖钱

222
0:28:59.280 --> 0:29:03.080
但是别人如果必须开源的又分

223
0:29:03.640 --> 0:29:12.720
就是说如果别人开源了之后就是别人拿了你的东西去修改了以后还接着开源但是呢新增的代码是不是可以用他自己的来生

224
0:29:12.720 --> 0:29:20.120
如果必须采用同样的来生是这就是最严格的一种叫做级别要

225
0:29:21.560 --> 0:29:25.360
也就是我我们简单界讲一讲级别要就是说啊

226
0:29:26.120 --> 0:29:37.360
别人可以拿你的源代码也可以修改也可以分发也可以商用但是他的代码也必须开源而且他的代码开源了之后也必须用级别要授权

227
0:29:38.360 --> 0:29:44.280
当然还有其他的很多的耶斯欧诺各种各样的选择他一共介绍了六种

228
0:29:45.000 --> 0:29:49.120
就LGPL莫贼拉呃BSDMIT和阿帕契

229
0:29:50.600 --> 0:29:56.600
在这个图上面看上去最宽松的应该是这个

230
0:29:57.280 --> 0:29:58.440
BSD的许可证

231
0:29:58.840 --> 0:30:00.760
而卖气是

232
0:30:00.760 --> 0:30:06.040
还卖气是最宽松的哦爱卖气爱卖气我说错了对就是首先你可以避原

233
0:30:06.680 --> 0:30:07.200
而且

234
0:30:08.000 --> 0:30:15.840
呃也不用再放置这个版权说明就每一个修改过的文件也不需要再放置版权说明而且别人

235
0:30:16.640 --> 0:30:20.680
改了你的软件拿去卖钱还可以用你原来的这个名字来促销

236
0:30:21.800 --> 0:30:27.480
这简直就是那种简直就是没约束对不对但其实呢

237
0:30:28.360 --> 0:30:33.120
还有一种来生是比这个更没有约束的是叫做帕布利克多曼

238
0:30:33.920 --> 0:30:40.640
啊帕布利克多曼那真的不争不管对其中有一个著名的开源软件叫做西克莱特

239
0:30:41.960 --> 0:30:43.080
用的就是帕布利克多曼

240
0:30:45.160 --> 0:30:48.440
所以所以其实它是一个很大的光谱而而这个

241
0:30:49.120 --> 0:30:55.040
呃这个塑状图它只介绍了六个开源软件他讲清楚了一些东西

242
0:30:55.440 --> 0:31:02.360
但是呢还有很多东西其实没讲到所以这只是算是一个常用许可证的入门的一个地方

243
0:31:02.840 --> 0:31:07.320
另外一个常用的选择呢其实马云做了一个不错的东西

244
0:31:07.760 --> 0:31:14.240
就是现在你如果在马云上面要创建一个新的开源软件的话他有一个许可证选择器

245
0:31:14.840 --> 0:31:18.120
也类似的他会问你一些问题最后推荐给你

246
0:31:18.880 --> 0:31:28.160
一个你觉得可以选的一个许可证开源许可证而且他的问题会比刚才的那个六个许可证选一个的那个要不大一点

247
0:31:29.160 --> 0:31:34.160
那么这样的一种了解是他大多数人啊到这个层面就够了

248
0:31:34.680 --> 0:31:40.840
就就差不多就是说你你知道什么最宽松比方mit最宽松那个鸡皮鸟鸡皮鸟最严格

249
0:31:41.200 --> 0:31:50.880
然后呢稍微呃有一点就是要鸡皮鸟呢他稍微呃严格一点但是呢他还可以有什么什么条件放宽一点你大概知道一个光谱就行

250
0:31:51.880 --> 0:31:57.160
但是如果你还想更进一步了解的话呢有一个网站可以推荐的

251
0:31:57.560 --> 0:32:01.720
就叫做t l d r就是就是那个突然

252
0:32:02.280 --> 0:32:13.440
懂得瑞德就太长不看的那个缩写然后t l d r李狗点抗这个网站呢很有意思他其实是一个专门介绍开源莱绅式的一个网站

253
0:32:14.040 --> 0:32:16.400
而这个网站的话呢他其实是

254
0:32:17.360 --> 0:32:26.960
以一种呃列表的方式来展现就说如果你用了某某赛事那么可以做哪些事以及不能做哪些事

255
0:32:27.920 --> 0:32:33.080
他大概每一个来认识他都会总结里面的大概十几项吧

256
0:32:34.320 --> 0:32:44.080
呃都讲得还比较清楚的有打勾的有打叉的有些他不管的读入此类的这样的一个太长不看的一个捉人化的一个

257
0:32:44.920 --> 0:32:51.280
嗯法律的一个网站但是还有一个更加值得推荐的就是呃

258
0:32:52.280 --> 0:32:56.040
我们国内有一个著名的呃一个

259
0:32:56.880 --> 0:33:03.720
大家同学极是的义者我们的叫他卫士就就是卫见凡威尔斯其实他写过一系列的解读

260
0:33:04.080 --> 0:33:12.920
开源莱绅士的文章就是阿帕奇啊吉皮尔啊这些莱绅士的人画版解读就是跟你说人话而且说的还是中文

261
0:33:13.320 --> 0:33:15.800
刚才讲的那个太长不看的那个还是英文的

262
0:33:16.400 --> 0:33:27.960
这个是用中文给你讲的一个啊条文但是他为什么很好呢他是基于对于开源软件的英文版的莱绅士的原文

263
0:33:28.800 --> 0:33:33.440
然后先解读然后再缩略然后再讲清楚里面的是什么什么东西

264
0:33:34.040 --> 0:33:42.600
所以这个解读我觉得还是非常的具有一方面也很权威一方面也很清晰明了这个很推荐大家去看

265
0:33:43.320 --> 0:33:44.520
但是最后讲一条

266
0:33:45.960 --> 0:33:54.600
所有的这些莱绅士所有的这些解读所有的这些甚至包括os I自己的理解都不作数

267
0:33:56.080 --> 0:33:58.560
一切都是以法院的判决为准

268
0:34:00.120 --> 0:34:11.440
因为真正有这个法律约束力的不是这些制定条款的人也不是这些所谓的开源组织开源是真正的是呃当地的

269
0:34:12.280 --> 0:34:25.200
呃法院而且有些莱绅士会规范说如果用了我的莱绅士遇到了纠纷请在什么什么国家的哪一类法院去打官司

270
0:34:25.640 --> 0:34:32.920
这其实就是指明了一个属地原则因为最终对于这些莱绅士的解读不是我们这些普通人

271
0:34:33.400 --> 0:34:41.000
甚至不是律师律师也只能够出具他的部分的法律意见最后还是以判决为主大概就先介绍到这

272
0:34:41.720 --> 0:34:50.040
嗯我觉得就可能因为因为老庄跟王老师都是就开源领域经营很久的这个人了

273
0:34:50.520 --> 0:34:55.840
所以你们多少了还带着一些这个研究的这个态度去看这个问题

274
0:34:56.360 --> 0:35:05.320
但是让我觉得对于大多数人来讲啊包括我们很多听友来讲其实不需要去研究那么复杂的场景

275
0:35:06.080 --> 0:35:09.040
包括像外塞定义那些东西其实都可以不用看

276
0:35:09.400 --> 0:35:14.960
那东西真的屁都不是在我在我看来哈就是那自说自话没有意义的就是

277
0:35:15.360 --> 0:35:24.520
比如说为什么这个开源软件它不能有歧视性条款这个说白了既不是法律也不是逻辑

278
0:35:25.040 --> 0:35:28.400
他是一种信仰他说白了是信仰驱动的

279
0:35:29.000 --> 0:35:32.760
这种信仰驱动东西呢说老实话在这个基督教天主教

280
0:35:33.600 --> 0:35:38.280
国家战这这个宗教战比较主导性的意识形态的国家

281
0:35:38.280 --> 0:35:42.120
我觉得很容易理解因为他们自古以来就有这样的趋向

282
0:35:43.120 --> 0:35:47.640
啊包括讲音信称义啊就信仰非常高的一个一个水平

283
0:35:48.160 --> 0:35:53.280
当然也很多人说中国人没信仰其实也不是啊中国人有其他一些信仰中国人信仰实用主义

284
0:35:54.960 --> 0:36:05.960
嗯就包括像像这个这个我我们的很多的搞什么国际关系的搞外交的他们这个比如说清华的这个演学通老师他的

285
0:36:06.680 --> 0:36:09.600
核心观点叫道义现实主义

286
0:36:10.920 --> 0:36:15.920
他说首先我们国家奉行的是现实主义的国际关系和外交土这个这个政策

287
0:36:16.560 --> 0:36:25.680
那有些人就说现实主义是没有道义的就只看国家利益他其实不是的国家利益分长远和短暂的中国是看中比较长远的

288
0:36:26.320 --> 0:36:29.480
现实利益的那这个现实利益必须以道义为基础

289
0:36:30.120 --> 0:36:32.600
而所以他他那个专门写过一本书叫道义现实主义

290
0:36:32.960 --> 0:36:42.320
所以其实我们国家包括很多这些呃我们受的教育啊包括我们实际在生活当中的经验就非常现实非常实际

291
0:36:43.200 --> 0:36:52.640
那从这个现实主义角度出发我们去看这个开源许可证的话或者我们去看软件许可证的话其实它会相对简单一些

292
0:36:53.160 --> 0:36:57.640
我我说一个我自己的理解哈就其实就是你要问自己几个问题

293
0:36:58.600 --> 0:37:02.000
如果我这个软件不开源卖给你我关注什么

294
0:37:03.160 --> 0:37:05.280
我其实关注的是我能卖多少钱

295
0:37:06.520 --> 0:37:09.560
卖卖多少钱等于什么等于单价呈上数量

296
0:37:10.280 --> 0:37:12.720
那所以我定一个单价然后跟你

297
0:37:13.640 --> 0:37:21.040
说一个算数量的方法比如刚才老庄提到的这个商用软件卖给一个人或者一个公司

298
0:37:21.440 --> 0:37:29.160
他其实有若干种授权方式有所谓的per seet就是有多少个位置啊你可以装多少台机器

299
0:37:29.720 --> 0:37:39.080
也可能是current这个这个使用就是并发使用他有个服务器你可以装很多台机器但是我只允许同时十个人用

300
0:37:40.320 --> 0:37:45.040
而这这种也有就是还有就是授权到个人user

301
0:37:46.160 --> 0:37:50.000
你比如说我这个per seet我我实际上可以装十台机器

302
0:37:50.640 --> 0:37:58.120
然后可以有一千个人轮流用这十台机器没问题但如果我是这个per user那我就限制到具体人了

303
0:37:58.480 --> 0:38:01.440
你就十个买只只有这十个能用不管在什么机器上

304
0:38:02.000 --> 0:38:07.600
所以这就很很多但实际上万变不离其宗就是我想卖你多少个拷贝的问题

305
0:38:08.280 --> 0:38:17.440
这是商用软件其实就是算钱那作为开源来讲那就会复杂一点因为我开放出来的不仅仅这个软件本身还有它的制造过程

306
0:38:17.840 --> 0:38:23.000
相当于我不仅把这东西给你用了我还把怎么造它完整的方法都告诉你了

307
0:38:23.440 --> 0:38:26.920
所以开源是伴随着更大的一个呃这个

308
0:38:28.040 --> 0:38:31.080
呃权利让渡的那么我可能就会考虑问题会更多一些

309
0:38:31.600 --> 0:38:36.840
那这个问题就非常多啊就是你真的可以做的话几十上百个要去考虑的要素

310
0:38:37.360 --> 0:38:45.600
那包括像刚才这个呃老张提到这个贴而地而离狗里面就提他就他就做了非常多的属性

311
0:38:46.280 --> 0:38:51.400
像菜单一样那原材料你挑十款原材料可以组合出一个势力

312
0:38:51.880 --> 0:38:58.200
但实际上我们普通人去考虑的时候有那么多的要素吗其实没有啊就相当会少很多

313
0:38:58.760 --> 0:39:07.560
比如刚才这个呃老张提到的那个选择图因为我们这个节目呃语音的就看不到这个图回头我会找来放在我们那个视频里面

314
0:39:08.760 --> 0:39:10.840
他其实考虑的就只有几个要素

315
0:39:11.600 --> 0:39:18.600
实际上只考虑了四个要素其中有三个我认为是非常非常重要的有一个没有那么重要就三个半

316
0:39:19.760 --> 0:39:28.040
啊那三个半的这三个非常重要的就是我开源了你如果使用我这个开源软件的话你能不能把它转闭源

317
0:39:29.560 --> 0:39:36.800
这是一个非常关键的因为如果你把它转闭源的话意味着我白开出来了你做了任何修改我都不知道

318
0:39:37.800 --> 0:39:49.000
啊除非我真的无所谓否则的话那我可以约束你就是你不许避言那么这个选择非常重要可以还是不可以啊就分出两大类来第二个是

319
0:39:50.320 --> 0:39:54.640
这个你如果做了修改那么

320
0:39:56.000 --> 0:40:04.200
你能不能换许可证那这个里面呢实际上纪片二也就是这个自由软件基金会啊FFSF

321
0:40:04.920 --> 0:40:12.280
他们特别看中这个问题为什么他是有他的原因的就是FSF他成立的初衷

322
0:40:12.960 --> 0:40:20.880
就是保护对人类最关键的那些软件永远可以被人类开放使用

323
0:40:22.000 --> 0:40:28.160
他所谓的这种重要的软件其实最重要的是嗯软件的编辑器

324
0:40:29.160 --> 0:40:34.200
啊其次是软件的编辑器和操作

325
0:40:35.280 --> 0:40:44.640
就这些软件只要它是开放的那么嗯就算有公司垄断了一些东西别人还可以用这些东西造出更好的开放的竞争品

326
0:40:44.920 --> 0:40:53.240
所以他就认为说我这些关键性的软件我可以把它开展出来比如上GCC非常非常重要的这个编辑器

327
0:40:54.080 --> 0:41:03.840
那我把它开放出来你可以改但是你用我的软这个原代码改出来的东西你还是必须走我一模一样的授权协议

328
0:41:04.840 --> 0:41:07.520
这个叫做开源授权协议的继承性

329
0:41:08.400 --> 0:41:14.480
啊这个只有他是非常严格要求的除他以外其他的协议其实都不要求都是可以改的

330
0:41:15.120 --> 0:41:20.520
那这是第二个非常重要的就是是不是修改必须继承这个授权协议

331
0:41:21.400 --> 0:41:28.120
最后一个比较重要的就是你改了我的原代码之后还能不能用我来做广告

332
0:41:29.880 --> 0:41:36.640
那这个呢有一类是就是允许你改了之后还拿我去做广告的

333
0:41:36.920 --> 0:41:42.440
比如像MIT啊就是这个是基本上现在比较宽松的那像BSD就不允许

334
0:41:42.720 --> 0:41:50.080
那别的就说你直接用我的原代码去推广没问题一旦改了就不能再用了

335
0:41:50.520 --> 0:41:59.840
那另外一个附加的条款就是第四个啊就是修改过的文件是不是每一个修改过的文件要放一个这个版权说明

336
0:42:00.560 --> 0:42:04.880
那就包括对原作者的这个记录啊这东西

337
0:42:05.360 --> 0:42:17.600
所以说白了就是我们在做这个许可证的这个选择的时候其实就是分两个视角一个是当我要开源的时候我选用一个什么样的许可证

338
0:42:18.120 --> 0:42:25.680
第二个是当我使用开源软件的时候我要独董这个许可证以免违背它

339
0:42:26.880 --> 0:42:34.320
其就这两方面那么了解刚才说的这几个最关键的判断其实在百分之八九十的场合下就已经够用了

340
0:42:34.600 --> 0:42:43.680
比如说你拿到一个纪片奥的协议的原代码你就知道如果我用了这个原代码第一我以后永远都必须开源我我必须

341
0:42:43.680 --> 0:42:51.040
在这个上面技术上修改的做的任何修改必须开源而且我的开源必须要继续用纪片奥的协议

342
0:42:51.520 --> 0:43:02.920
那如果我不希望这样呢那我就不能用这个软件了我得去寻找一个跟它功能类似的但是授权要求没有那么严格的一个软件比如银片奥之摩维亚的这个

343
0:43:02.920 --> 0:43:12.520
这个嗯那当我们如果我们自己是开源方那那我们要选择软件的时候那就要想你怕的是什么你不希望的是什么

344
0:43:13.600 --> 0:43:27.400
比如说你不希望有竞争对手使用了你的开源的软件还把它转闭源并且拿来卖钱那怎么办那你就不能够选那种可以转闭源的那些协议

345
0:43:28.400 --> 0:43:34.240
啊然后包括比如说嗯如果你担心商业上竞争对手使用你这个东西

346
0:43:34.880 --> 0:43:41.520
而还利用你的这个软件代码去做市场宣传的话那你就不能选来买皮

347
0:43:41.920 --> 0:43:49.680
你肯定要选别斯蒂或者阿帕奇这种所以就我觉得在大部分情况下其实这个图是一个非常好的入门的图

348
0:43:50.080 --> 0:43:53.960
然后再比如说像刚才老庄提到的进阶的那几个

349
0:43:54.920 --> 0:43:57.960
呃资源回头我们也会列出来吧

350
0:43:58.360 --> 0:44:04.440
我觉得有兴趣的可以去做一些深入的研究其实都挺好懂的有一个网站叫

351
0:44:05.320 --> 0:44:12.400
去资资点看了他也提供了一个step by step的方式去选你要的这个

352
0:44:13.280 --> 0:44:16.800
一些来自然后想特别提一下的是这个cc啊

353
0:44:17.240 --> 0:44:22.040
亏去卡们斯啊我我我认为他是他刚出来的时候是

354
0:44:22.880 --> 0:44:25.960
二零零几年的时候那个时候博客刚刚新起

355
0:44:26.560 --> 0:44:31.680
然后很多人写博客大家会互相去引用大家的博客啊然后

356
0:44:32.520 --> 0:44:37.600
就是产生这种各种各样的演艺型的创作那么cc这个许可证就应运而生

357
0:44:38.200 --> 0:44:47.480
呃这个许可证我认为比所有的软件的这个开软件许可证都好的一点就在于他确实做得非常的直观和非常的容易理解

358
0:44:48.120 --> 0:44:54.080
就像刚才老庄介绍的他其实就是几个要素一个要素是是不是要署名

359
0:44:54.840 --> 0:45:07.200
就是永远带上我原作者的名字第二是不是允许商用第三是衍生创作啊还有第四个是呃是不是需要继承这个分享协议

360
0:45:07.680 --> 0:45:13.760
其实就做这么几个东西然后每个东西你可以选耶所诺选完之后就出来一个非常呃读就是

361
0:45:14.720 --> 0:45:22.200
就你根据你的选择会生成一个图标一个小图标上面就有这样的几个选项大家一看就知道啊指的是哪几个

362
0:45:22.800 --> 0:45:27.280
呃选择其实我觉得软件的这个开软件许可证

363
0:45:28.800 --> 0:45:36.800
至少局部也可以这么做就是我可以先选一个大的模板阿基泰我做了对四到五个问题做完选择之后

364
0:45:37.000 --> 0:45:41.760
他就出来一个符合我这个选项的一个阿基泰原型模板

365
0:45:42.280 --> 0:45:50.200
然后下面可以有一些附加条款去解决一些更少用到的一些呃约束但主要部分其实就得解决这个事

366
0:45:51.040 --> 0:46:01.040
我不知道对不对哈这个等一下也也也请王老师和老庄也也点评一下就是我认为百分之八十以上的情况就那四五个问题就够了

367
0:46:01.880 --> 0:46:12.080
嗯是的嗯我我补充一下我这边的一些一些观察到这些东西啊就是对其实刚才两位老师把许可这件事情的还是

368
0:46:12.680 --> 0:46:20.000
说得还挺详细的对但是呢即便如此对其实就像那个刚才庄老师所提到的许可这件事情其实他挺复杂的

369
0:46:20.280 --> 0:46:25.560
而且呢现在还在不断地在做一些变化和一些新的东西都会出来

370
0:46:25.560 --> 0:46:33.120
对那我因因为我这边是在学校里面也会有开包括软件工程呀还有像开院那些课程

371
0:46:33.600 --> 0:46:43.600
对其实从我们同学们的反馈来看其实大部分的同学其实对许可证还有法律的这些东西啊其实大家并不是那么感兴趣

372
0:46:44.040 --> 0:46:51.240
而且呢提一个挺嗯挺有意思的一个点是就是其实我们在课上其实也是请了不同的这种

373
0:46:51.720 --> 0:47:01.120
嗯角色的人来给大家去讲这些课对比如说像庄老师也在我们的课上去做了些分享的对这是计算机背景的对像我也是

374
0:47:01.480 --> 0:47:09.240
计算机背景的对那我们也请了包括像振华呀还有开放月子基金会的李伟老师啊而他们这些

375
0:47:09.640 --> 0:47:18.120
嗯法律背景的人也来课上去做个分享对那这些不同的背景人其实他们分享的这种

376
0:47:18.960 --> 0:47:27.080
嗯角色其实还是有有一定的可能一定的区别对但是呢嗯大部分同学其实还是

377
0:47:27.760 --> 0:47:36.760
嗯因为因为毕竟还是一个一个个体开发者对还是希望最好是简单哎那我其实更多的还是希望能够好好写代码

378
0:47:37.160 --> 0:47:45.080
对那不太希望在嗯特别是这种许可证的方面去做过的这些纠缠对所以说呢我们

379
0:47:45.600 --> 0:47:54.920
嗯给同学们提的是对就是第一个呢就是即便你不喜欢对那你开始可以选一个相对宽松一点的

380
0:47:55.320 --> 0:48:08.080
对那后面再来去如果真的这个这个软件然后你你或者是你的创作内容有更好的一些发展和一些想法的话对你还可以去做一些更改

381
0:48:08.440 --> 0:48:16.200
但是呢我们不太鼓励特别是现在嗯开源其实也是嗯越来比受关注嘛对就是你把你写的东西放出去以后

382
0:48:16.560 --> 0:48:21.960
你什么都不去带对吧你你没有来生死对当你没有这件事情的时候对一方面就是

383
0:48:22.320 --> 0:48:30.000
如果你想去宣传别人想用你的时候其实他就不太敢用对反而是你如果有一个具体的东西他就知道

384
0:48:30.320 --> 0:48:36.480
就像钢老师李李老师所提到的哎如果我去使用的话我就知道在什么样的情况下去使用你

385
0:48:36.480 --> 0:48:42.760
对因为这件事情呢不光是学生还有我们周围老师也是对于因为我们现在也有一些老师那个

386
0:48:43.400 --> 0:48:47.720
喜欢把自己的教材对在github上开源出来

387
0:48:48.160 --> 0:48:52.200
对但是呢他开源的时候呢他其实就不太说我我去选一个

388
0:48:52.560 --> 0:49:03.240
莱绅士或者是放上cc对他说我就是只是想纯粹的把我的哪个内容放上去对他他我我我写了很高兴就就挺好的对那我们其实也是

389
0:49:03.240 --> 0:49:12.320
就是给他一些建议对因为他其实还是其实如果他有有那个我们的听众如果记得的话就是我这边其实在八月份其实

390
0:49:12.800 --> 0:49:16.640
分享过一本书就是挑战知识产权对其实就是

391
0:49:17.320 --> 0:49:29.440
开源嘛他其实就是让步我们自己的一些权利让我的这个内容作品能够有更好的这种传播对老师就是这样的如果你希望你的

392
0:49:30.440 --> 0:49:43.240
不管是你写的软件好还是你的内容也好有更好的传播其实你带一个这种莱绅士明确一点其实会更好对特别是一些严肃的一些场合一些甚至是些企业界啊工业界的他去用

393
0:49:43.600 --> 0:49:55.320
他确实觉得你这个好去使用的话他其实会更加放心大胆的去去使用对这是我我的第一个补充对第二个补充呢就是我现在也看到的其实刚才也是庄老师所提到的就是

394
0:49:55.320 --> 0:50:02.920
嗯现在之所以莱绅是个东西比较复杂一方面是他和法律其实有关系的来第二段就是

395
0:50:03.480 --> 0:50:14.280
其其其的庄老师也提到就是即便我们现在的这个莱绅是有违反的最终其实还是靠法律法院去判去最终去判断

396
0:50:14.720 --> 0:50:22.440
对他会他之所以去判断就是因为我们现在的一些界定啊都是自然原区界定的比如说是否符合内四条即便是

397
0:50:22.720 --> 0:50:33.240
那个欧埃塞他去认定他也是人去认定的对人去认定的实际上他多多少少其实还是带有一定的一些一些主观的一些成分对那因为我们现在

398
0:50:34.040 --> 0:50:39.440
大家也也也可能会知道就是随着软件特别是开软件和商业化

399
0:50:40.120 --> 0:50:48.160
走得越来越近有越来越多的趋势的时候对其实现在已经出来出现了越来越多的一些一些商业的的赞识

400
0:50:48.560 --> 0:51:02.000
对那他并不被内十条所所所能够是部分是有冲突的对也不被挖塞所所认可的但是呢这一类呢其实也是一个挺好的对他既能够给

401
0:51:02.440 --> 0:51:11.960
给他的嗯软件和他的嗯一些品牌去做宣传然后呢他也具有一些比较好的一些用户的一些一些一些属性

402
0:51:11.960 --> 0:51:22.720
对就是说就那那那这个肯定就是庄老师刚才所提到的一个更加泛的一个开源的一个一个概念对这个也是这个好像跟莱绅斯没有关系啊

403
0:51:23.040 --> 0:51:31.200
那软件的莱绅斯是什么情况下可以使用我的这个东西以及你使用之后要遵循什么样的一些约束

404
0:51:32.000 --> 0:51:33.520
这个叫做莱绅斯吗

405
0:51:34.040 --> 0:51:36.520
外三那几个东西我觉得就是一种信条啊

406
0:51:37.360 --> 0:51:43.360
你你我我不遵循怎么样我不遵循可以使用软件没问题只是说你欧莱塞不认可我不认可不认可了无所谓了

407
0:51:43.720 --> 0:51:49.280
对对对对这个没有认可法律上的意思没有就是其实没所谓的对啊

408
0:51:49.920 --> 0:51:50.600
是的是的

409
0:51:50.880 --> 0:52:01.440
但是呢现在还是有一些人比较纠结说一定要在开源这一块去做一些借鉴这种这种没问题这种我觉得就是属于爱好者或者专业领域的他要去深入研究

410
0:52:01.880 --> 0:52:11.360
他要去建立另外的一些更复杂的更完整的生态体系相关东西那那是可以研究的但对普通用户来讲我觉得很少会到这个层次

411
0:52:12.080 --> 0:52:12.720
有没必要吗

412
0:52:13.760 --> 0:52:14.840
好我就补充这两点

413
0:52:15.920 --> 0:52:26.160
OK那这一块我们就说到这里哈然后下一个呢也是跟看人有关的一个话题啊也是我们的这个这个听有群里面有人提到的

414
0:52:26.440 --> 0:52:34.880
有人建立了一个网络啊叫替点xyz啊这实际上是几个人他们的一个创业项目

415
0:52:35.560 --> 0:52:42.360
啊这里面包括有一位是原来做亨不入的一个创始人亨不入是

416
0:52:43.320 --> 0:52:49.120
麦克机器苹果的麦机器上面的软件包管理的目前的适时标准了

417
0:52:49.720 --> 0:52:54.680
然后他们在麦上一统天下之后呢甚至还拓展到了林尼斯领域

418
0:52:55.680 --> 0:53:04.400
那做了一个林尼斯版的后面也有一些人在用了就是然后他们因为做软件包管理出身的嘛然后

419
0:53:04.960 --> 0:53:10.840
可能后面也做得差不多了然后现在主要的维护工作其实他们自己也没在做了也有另外的社区在做了

420
0:53:11.240 --> 0:53:16.680
所以他们就成立了一个新的创业公司来专门做呃一些新的尝试

421
0:53:17.440 --> 0:53:24.040
他们做了一个协议叫替啊替业的一个协议这个协议是专门用来定义

422
0:53:24.800 --> 0:53:26.520
开源的软件包的

423
0:53:27.520 --> 0:53:34.520
啊包括这个软件包的特性它的维护者是谁他的版本然后把它注册到一个区块链的驱动的一个

424
0:53:35.200 --> 0:53:45.160
去中心化的注册表上面去当然也有很多人都可以去在这个链上面去注册自己的这个软件包啊然后去发布不同的版本

425
0:53:45.920 --> 0:53:51.800
嗯而且由于区块链的一些特征也能够带来一些好处比如说嗯

426
0:53:51.800 --> 0:53:57.640
嗯自动化的融灾啦然后这个无法篡改了等等类似这样的东西

427
0:53:58.120 --> 0:54:08.000
然后基于这个东西基于这个协议所搭建起来的新一代的这个软件包的管理和分发的这样的一个网络

428
0:54:08.600 --> 0:54:12.720
啊是不是有可能可以带来一些利益上的一些分配

429
0:54:13.440 --> 0:54:18.720
因为我们知道现在这个对于软件包的使用啊其实是越来越广泛的

430
0:54:18.720 --> 0:54:26.760
啊你如果编程你你是涉及写程序这个领域的话你几乎会必然会碰到一堆的这个软件包的管理

431
0:54:27.400 --> 0:54:31.400
基础的操作系统及的软件包的管理然后你编程语言所特定的

432
0:54:31.760 --> 0:54:33.760
比如加 script 就一定会用到 npm 吗

433
0:54:34.200 --> 0:54:37.160
然后 python 就会用到那个 pip 啊类似这样的东西

434
0:54:37.680 --> 0:54:40.280
但是这些系统到目前为止基本上都是免费的

435
0:54:40.960 --> 0:54:45.400
那如果有一个基于区块链的一个区中心化的这样的一个

436
0:54:45.960 --> 0:54:49.120
他们称之为更好的这样的一个新一代的软件包的

437
0:54:49.600 --> 0:54:55.400
啊管理的这样的一个体系是不是会有更多的人愿意上去贡献并且获取一些

438
0:54:55.880 --> 0:55:02.320
嗯利益这个跟我们之前聊过的东西是有关联的我们之前聊过一个话题就说

439
0:55:02.320 --> 0:55:07.480
呃开源的软件比如说当初我们聊扣拍了的时候啊说

440
0:55:08.000 --> 0:55:14.080
如果我们写的软件代码被扣拍了的使用并且推荐给其他的人那么我们是不是会有收益

441
0:55:14.480 --> 0:55:19.560
或者对我有什么影响帮助啊其实这是类似的就是呃

442
0:55:20.240 --> 0:55:22.920
不论是软件包本身还是对软件包的维护

443
0:55:23.480 --> 0:55:28.120
它本身是要付出劳动的这种劳动它怎么去获益的一个问题

444
0:55:29.120 --> 0:55:31.640
关于这样的一个新东西啊

445
0:55:32.320 --> 0:55:34.120
呃我们两位有什么看法

446
0:55:37.240 --> 0:55:42.720
因为我们原来搞过啊就是我跟王伟老师不是在开源社吗

447
0:55:44.000 --> 0:55:50.280
然后其实其实我们开源社曾经做过一个开源项目原来的名字叫可以靠应

448
0:55:51.440 --> 0:55:52.920
就是开源社的靠应

449
0:55:53.520 --> 0:55:59.920
嗯后来呢改了个名字觉得叫靠应有点敏感就叫可以托肯现在这个可以托肯这个项目还在做

450
0:56:00.920 --> 0:56:04.200
只不过呢就是呃他处在一个

451
0:56:05.560 --> 0:56:08.560
嗯非常缓慢的发展阶段

452
0:56:09.760 --> 0:56:17.240
也不能说他没发展但是他的他的发展肯定不是说啊这个全世界的这个开源爱好者都用起来了没有肯定没有

453
0:56:17.440 --> 0:56:19.600
连我们开源社自己的项目都没怎么用起来

454
0:56:20.760 --> 0:56:28.400
就是这样的一个情况但是这个呃可以靠应的理论体系是很早就已经写出来了

455
0:56:29.200 --> 0:56:38.280
就是呃大概是在这个二零一七年我们在聊这件事情的时候到了二零一八年的这个

456
0:56:38.920 --> 0:56:42.520
中部开约年会我们在深圳开约年会的时候还发布了这个可以扣印

457
0:56:43.160 --> 0:56:51.400
然后还还大肆的宣传了一番但是从二零一八年到现在也四年了也就还是停留在一个

458
0:56:52.560 --> 0:56:55.360
美好设想然后并没有更多进展的阶段

459
0:56:56.360 --> 0:57:02.520
当时当时我就属于那种写文章忽悠还行的那种那种状态就是我写了一篇文章

460
0:57:03.240 --> 0:57:10.680
那篇文章就是为了耸人听闻嘛标题就叫做区块链技术是否会终结开源时代

461
0:57:11.640 --> 0:57:20.080
嘿嘿嘿嗯果然还可以标题档对吧嗯那么他提出的是一个什么问题呢就是我们都知道

462
0:57:20.440 --> 0:57:25.280
而开源是一个非常强调这个利他主义的一种

463
0:57:25.960 --> 0:57:34.520
一种状态嗯而且的话呢我们还强调礼物文化什么叫礼物文化呢就是我们不图钱我们给把把我们的好东西拿出来

464
0:57:35.120 --> 0:57:42.520
送给社区这是一种礼物然后呢通过给这个社区贡献礼物我们换来了社区里面从高的地位

465
0:57:42.520 --> 0:57:50.600
对这就是所谓的礼物文化本质上就是不谈钱对吧你别跟我谈钱谈钱扎了我的耳朵也也坏了我的心情诸如此类的

466
0:57:51.440 --> 0:57:59.560
然后呢其实本质上就是很多很多的开源的开发者和开源的这个爱好者或者说是维护者

467
0:58:00.040 --> 0:58:00.880
就是没收入

468
0:58:01.800 --> 0:58:10.960
无论是这种而名不见经传的小的开源项目甚至是一些非常非常著名的大型开源项目背后都没有收入

469
0:58:11.920 --> 0:58:19.640
当然他后面后面引发了一些问题啊我们在二零一七年一八年讨论这件事情的时候还只是一种慢谈

470
0:58:20.240 --> 0:58:23.720
但是到了后面我们就发现已经出现问题了

471
0:58:24.360 --> 0:58:31.480
就是有一些嗯非常重要的世界级范围内都有影响力的开源项目背后也只有几个人维护

472
0:58:31.480 --> 0:58:41.280
然后这个是一个问题然后觉得哎呀要去解决那么就不仅仅是说我们光是强调奉献了看看是不是能够把这个

473
0:58:41.800 --> 0:58:47.320
除了奉献的这条线索做得更好之外是不是利益也能讲一讲呢

474
0:58:47.960 --> 0:58:55.160
是不是也能够让所有的开源的开发者不但是能够写代码写得很开心赚钱也能赚得很开心呢

475
0:58:55.160 --> 0:59:01.680
然后这就是我们可以扩印这个项目的初衷说实话跟这个替典xyz的初衷是一模一样的

476
0:59:03.520 --> 0:59:10.360
所以等到这个这个替典xyz出来之后我自己是没翻译啊但是我认识的一个也是开源社区的朋友

477
0:59:10.800 --> 0:59:16.360
他很快就就翻译了这样的一个白皮书然后我还是看了一遍这个白皮书的内容

478
0:59:16.360 --> 0:59:25.080
就是唯一跟我们当时的k coin的区别就是人家十打十的有一个包管理工具在那

479
0:59:26.640 --> 0:59:34.160
通过这个包管理工具确实可以追踪各种开源软件开源组件的实际的使用情况

480
0:59:34.600 --> 0:59:42.520
以及由此可以促进或者说是帮助更好的计算这个计算这个怎么说

481
0:59:43.200 --> 0:59:46.320
交易吧或者说是计算使用背后的成本

482
0:59:46.880 --> 0:59:53.600
那么也许呃围绕着开源软件的付费就有可能发生

483
0:59:54.400 --> 1:00:02.720
所以我现在看完了以后只能说呃谨慎的看好或者说期待它能够做成

484
1:00:04.200 --> 1:00:06.080
这是我现在的一个一个心态

485
1:00:07.040 --> 1:00:07.960
我王老师怎么看

486
1:00:10.120 --> 1:00:15.600
嗯先插一句哈就是嗯就确实啊这个开源软件这个领域啊

487
1:00:16.480 --> 1:00:21.720
很多人从中间受益而且很多工作是非常非常的耗时费力的

488
1:00:22.280 --> 1:00:30.920
比如说像红不如这样的软件包管理的上面已经有好多这成千上万的软件包大大小小的哈

489
1:00:31.880 --> 1:00:38.360
然后要保要要维护它的原代码和二进制的版本二进制的版本有恩个版本每一个软件包有

490
1:00:39.680 --> 1:00:42.280
起码有几十种不同的这个二进制版本

491
1:00:43.200 --> 1:00:52.960
光比如说像麦克这样的机器它上面至少你有软件包就要有英特尔和这个阿姆的芯片两种完全不同的编译好的二进制的这个格式

492
1:00:53.440 --> 1:01:02.760
所以就工作量非常大我最近还有一个新闻特别有意思就是我是一麦斯的中毒用户啊就是而目前残存不多的一麦斯档之一了

493
1:01:03.680 --> 1:01:10.800
因麦斯有软件是存活至今的最古老的程序员编辑器四十多年了嗯

494
1:01:12.160 --> 1:01:19.200
据说好像从九几年到现在三十多年里面这个软件它挂着的

495
1:01:19.600 --> 1:01:21.920
霸个列表它叫issue tracking里面的那种

496
1:01:22.680 --> 1:01:30.800
open的就是没有解决的霸个列表从来没有降到两千以下但是在上个月终于降到两千以下了一千九百九十九

497
1:01:31.600 --> 1:01:32.100
五

498
1:01:32.960 --> 1:01:40.320
是有有有厂商出钱了没有没有没有就就还是大家在那里慢慢坑知坑知我我还以为有人赞助了了

499
1:01:40.880 --> 1:01:47.320
我不可能呀因为一麦斯是ffs了ok是是这个瑞夏斯多曼亲亲自搞的东西吗

500
1:01:47.320 --> 1:01:53.280
哦对而且关于一麦斯跟刚才那个来四还有一个呃关系的东西就是比如说

501
1:01:53.560 --> 1:02:01.800
一麦下面经常发生这种情况它有同一个功能有两个软件包都可以实现这个功能其中做得比较好的那一个

502
1:02:02.240 --> 1:02:11.080
没法进到一麦斯的就是那个本体里面去为什么因为那个软件包的作者不愿意跟ffs签一个协议

503
1:02:11.520 --> 1:02:15.600
说这个软件包完全的符合gpl并且授权给你

504
1:02:16.440 --> 1:02:20.440
如果有人用了这个软件包并且不遵循纪票协议的话你可以去告他

505
1:02:22.520 --> 1:02:30.280
就经常发生这种情况就只最后只好一麦斯选一个愿意接受纪票的但是功能弱一点的包放到自己的本体里面

506
1:02:30.280 --> 1:02:34.160
当然它不影响你去装那个强的了那个做第三方包放进来没问题

507
1:02:34.880 --> 1:02:40.120
所以就开发软件的这个这个领域里面很多工作是非常繁重的

508
1:02:40.120 --> 1:02:49.520
你想如果你自己做了一个软件然后商用的成千成就是每每一个时间点都挂着两千个以上的bug

509
1:02:49.520 --> 1:02:50.960
你心里慌死了

510
1:02:52.800 --> 1:02:59.640
是吧这任何一公司都不会允许这样的软件出去的嘛但是开软件真的就忙不过来他那个使用面很广

511
1:02:59.640 --> 1:03:02.920
然后各种各样的机器上面各种各样的金融性问题

512
1:03:04.600 --> 1:03:08.280
但是所有这些东西都没有办法从用户那里得到一分钱

513
1:03:11.080 --> 1:03:12.600
这个确实是个大问题

514
1:03:12.600 --> 1:03:23.240
这这些啊就是我就补充这个我忘了是对对对因为最开始那个和那个老庄也是在开源社吗

515
1:03:23.240 --> 1:03:28.800
我们搞那个开头肯对因为我我觉得这个都是开发者的一个非常好的一个愿景

516
1:03:28.800 --> 1:03:38.120
就是嗯喜欢做开源对然后把开源积金做出来又能够嗯通过开源得到一些一些回报对那去块链来了以后呢

517
1:03:38.240 --> 1:03:48.480
那大家基本上就觉得这个态度合我们开源里面的我们我们我们的一个一个一个诉求了可可他是天作之美

518
1:03:49.040 --> 1:04:02.000
对那里面其实有一个很大的一个一个一个问题就是其实好几个就是你怎么样去去最终去做这个分配对那里面也是也是有好多不同的一些一些方式

519
1:04:02.000 --> 1:04:29.640
有任务式对也有也有一些一些度量的方式对因为这块的正好也可以说一下就是我们实验室这边对其实如果大家知道的就是像那个弗兰克呀我们现在其实也是在做一些实验做什么实验呢就是在因为我们一直在做给他上面的权益数据分析对那我们把这个数据拿过来之后对其实可以嗯在一定的范围之内可以去计算

520
1:04:29.640 --> 1:04:58.880
比如说我们自己实验室所有的同学对可以去计算他们每个月在上面的一些一些一些贡献活跃度影响力对当然是有一个有一个算法和模型的那这个算法和模型的也会去不断的调整对然后呢我们就实验室因为因为学校里面嘛其实也有给同学的一些住院费呀对那我们的实际上是按照这个模式是去发放这种嗯住院费的这种形式

521
1:04:58.880 --> 1:05:28.880
对其实也是希望鼓励大家哎如果你在嗯我们的项目上面活跃对然后呢你和更更加有影响力的人去协作对你的软件被更多的人去使用到对那你就可以有更多的这种收益对那这个呢我们也确实是在做对但是里面的确实还是有非常多的一些问题所存在对就是包括你这个机制究竟是怎么去分配还有一个更重要的

522
1:05:28.880 --> 1:05:58.880
是究竟谁会最终来为这件事情去买单对吧就是但因为学校里面可能要好一点因为嗯毕竟还是有这种嗯学校里面的一些一些费用包括嗯学校的一些项目的对那这件事情是不是能够更加普世性更加能够推广对以及这个模型是不是能够收集到足够方方面面的信息能够相对真实地反映一个人的一个一个贡献程度

523
1:05:58.880 --> 1:06:28.880
对这些都是对那那个嗯 team 呢还 x y z 呢其实我们也有类似的一些研究对其实明天明天周一的话那个 Frank 可能就会讲供应链这一块对因为我们也会有供应链的信息对一个朴素的一个思想其实也是就是哪个软件被更多的去使用或者是被更加重要性有影响力的软件去使用去依赖的话对它其实是一个

524
1:06:28.880 --> 1:06:58.880
更加基础性或者是更加重要的软件对那它的上面的一些嗯开发者是不是也应该去受到更多的一些关注或者是一些一些支柱对也会从供应链的这个这个视角会去去看这个事情对但是呢现在的一个一个因为我我不知道就是像像那个 x y z t 上面他们现在的整个包括信息啊收集到什么程度了对因为嗯软件其实还是特别多嘛

525
1:06:58.880 --> 1:07:28.880
而且现在不同的语言它的嗯这种包管理器啊可能都还是有一些不一样的一些一些地方是不是能够把整个嗯软件界能够补充得更全对进而去做一些计算对我我还不是特别清楚对但是这个方向那作为一个开发者作为作为一个对开源一直去喜爱并且去做研究的肯定还是希望嗯如果如果真的能够有这样的一种一种机制并且乱起来了

526
1:07:28.880 --> 1:07:39.200
对那我们还是挺那个乐意去看到的其实这个问题啊核心的关键点还是在嗯钱

527
1:07:40.200 --> 1:07:49.360
就是谁来付钱的问题对从哪里来这个嗯对我我也我也他是怎么来他是从哪里来的呢我不太清楚

528
1:07:49.360 --> 1:08:01.840
他还正处在想的过程当中嘛并没有开始去收这个钱因为轰不入也好还有所有跟轰不入类似的东西比如npm所有这些东西他们有收钱吗都没有

529
1:08:01.840 --> 1:08:31.840
啊我见过的一个挺有意思的模式他是这样的就是有一个人他搞了一个开源的项目也有一定的影响然后他就采取了典型的开源领域的那种百米洱咖啡就是你如果用用了喜欢的话你就给我请我喝的打赏打赏他说叫百米洱咖啡实际上就打赏了就donate了就是你可以选择donate的任任意数量的这个钱嗯但是他有一个很有意思的点

530
1:08:31.840 --> 1:09:01.840
就在哪里呢就说如果你打赏啊比如说超过了五十美金那么我就认定你是sponsor那么这个对于sponsor我会提供一些福利什么福利呢比如说如果你提的issue我会第一时间去处理就就类似这种啊ok就是这个给我一个感觉什么就是呃这么多年下来啊就是对于开源软件的使用大家的付费意愿

531
1:09:01.840 --> 1:09:13.920
如何建立啊非常难了已经对挺难的而且说句政治不正确的话也也存在一些非良性竞争比如说有人收费了一定有人会做一个免费的

532
1:09:13.920 --> 1:09:43.920
就是让你受不下去的嗯这个是有先例的还有人还会欢呼他就是个英雄因为你看当年最早的这个嗯所谓起来打倒微软的那些人也就是在做自由软件开源软件逻辑是一样的嘛现在既然某某开源软件竟然开始商业化赚钱了那就我们再搞一个开源了对而且这条路径你发现没有他最后赢了对他逼得微软下场做开源任人

533
1:09:43.920 --> 1:10:13.920
真正做开源了是微软最近做的一个事情让我都很感动的就是把lsp开源了就那个language server原服务器对这个东西是他完全自己做的东西然后在微轴steel code里面用的很好他把他开源出来看出来唯一的效果就是让别的编辑器也可以使用他这个lcp的后端就直接跟他自己的微轴steel code竞争的居然他就开源了呵呵当然这个也是鼓励那些lsp的作者

534
1:10:13.920 --> 1:10:43.920
把这个语言服务器做得更好了最后也是双赢了但是作为微软这样家公司来讲我觉得真的是已经成功的把他拉拉下水了这是开源界的一大胜利呵呵对彻底洗白嗯彻底洗白嗯所以最终的问题还是就是怎么去付费如果没有人付费的话你的嗯分配和激励机制做的再科学好像也没有用武之地确实对那现在的一个一个非常

535
1:10:43.920 --> 1:11:13.920
是吊诡的事情啊比如说我自己我买了必战的这个大会员我我我这个腾讯视频爱奇艺也也都买了会员我现在唯一没买的常用的可能就是音乐的那一批了因为我真的就宁可不用他因为我自己机器上有海量的自己的音乐我就自己可以去听这是多年的爱好好那我实际上已经为这些服务都付了钱但是我们我使用这些服务的频次其实

536
1:11:13.920 --> 1:11:24.120
低胆我我难得去看一看视频而必战可能经常看但我最必战看的绝大部分也是不需要会员就能看的东西偶尔追一两个番而已

537
1:11:24.840 --> 1:11:35.160
那就这么回事儿但是我使用的非常频繁的比如像红布啊啊还有那些开发语言的那些包啊比如拍摄下面的那些批埃批埃的那些包啊

538
1:11:36.160 --> 1:11:40.640
我就一分钱都没付然后如果他说他要收费了比如说

539
1:11:41.120 --> 1:11:49.280
呃这个偏偏他说我这个下载拍摄的这个偏偏硬store下载拍摄的这些包我一年收五十刀我会买吗

540
1:11:50.280 --> 1:11:57.000
我可能会买但是有很多人马法列列了就走了嗯对啊对啊变的

541
1:11:57.680 --> 1:12:03.840
哈哈所以这个怎么办这个才是一个真的超级难点所在

542
1:12:04.480 --> 1:12:09.360
就等下一代吧这一代估计是不行了这一代的习惯已养残了

543
1:12:10.000 --> 1:12:18.600
还是挺难的就是所谓历史趋势啊嗯虽然历史偶尔会开倒车但真的非常少嗯

544
1:12:19.440 --> 1:12:24.600
因为人的本性就这样嘛就是我我肯定尽可能少的这个付出得到好东西嘛

545
1:12:25.080 --> 1:12:31.920
你说国内的这些视频的网站那是因为垄断了呀最后两三家垄断他开始收费你不得不去付啊

546
1:12:33.000 --> 1:12:38.720
嗯是但开源软件本身的特性就保证了他不会被垄断了

547
1:12:39.600 --> 1:12:47.000
所以替典xyz我我还是我还挺关注这个东西我也很想看看他组为怎么怎么去走出这样条路来好

548
1:12:47.000 --> 1:12:56.520
呃我们最后一个话题啊来讲一讲这个ai监工的事情最近连续的出现了几个这方面的新闻啊

549
1:12:57.320 --> 1:13:01.440
就是关于这个一些大的公司啊

550
1:13:02.240 --> 1:13:09.280
用ai系统来做监工啊然后来统计这个员工的工作的时间啦

551
1:13:10.280 --> 1:13:22.440
所谓的效率了然后根据这个来做出呃裁员啊解雇啊或者降级啊类似这样的一些行为我我现在看到的有两个新闻啊都传播相对比较广的

552
1:13:23.800 --> 1:13:32.160
一个是好久以前了大概两三年以前了amson用ai系统来统计一个员工的工作时间

553
1:13:32.720 --> 1:13:38.760
啊然后来确定哪些人是末位淘汰那amson是

554
1:13:39.800 --> 1:13:46.520
就是amson这家公司很有意思啊他在美国基本上相当于是富士康这种地位的公司了

555
1:13:47.320 --> 1:13:49.760
就是在用工方面民生极差

556
1:13:50.640 --> 1:13:59.360
嗯嗯基本上是美国的大企业里面的末位了就是一般的人能不去就不去的啊当然他给的钱也多了有些人就会愿意去

557
1:14:00.200 --> 1:14:08.240
嗯就一般来讲加班加长便饭然后这个员工的福利也不太好也就处于这么一个状态老板还经常疲惫

558
1:14:09.400 --> 1:14:17.600
对嗯就是呃那么他之前就是用用这样的系统来来去统计工作时间的

559
1:14:18.080 --> 1:14:25.320
然后比较新的一个是facebook啊这个是最近刚刚看到的就是facebook解雇了一批人

560
1:14:26.160 --> 1:14:35.640
然后一开始的传闻是说是通过算法随机挑选的然后后面被解雇的人当中的一个啊出来爆料了说不是随机的

561
1:14:36.440 --> 1:14:53.120
是绩效考核绩效考核就是在电脑上安装监控软件啊这个软件可以监控比如说你连续十分钟啊这个没有在计算机下你比方正在工作啊突然停下来了十分钟到十五分钟啊那么认为这段时间你就没有在工作了

562
1:14:53.120 --> 1:15:10.400
那这个其实是一个混账逻辑啊呵呵如果我在思考呢对啊就程序员这个也太常见了啊嗯嗯或者程序员或者甚至我不是程序员我就是在写文档对啊我写完了一段接下来我要思考一下吧

563
1:15:11.560 --> 1:15:21.080
anyway反正总而言之就是有一系列当这个肯定他的猜测啊我不确定他是不是真的这样总而言之就是通过计算机系统里面的一些监控的软件

564
1:15:21.560 --> 1:15:32.640
监控员工在电脑上的操作记录啊行为来给员工打分来作为绩效然后这绩效分数最后作为了这个淘汰的标准

565
1:15:33.040 --> 1:15:51.040
嗯那么这个事情呢就引发了很多很多的争议啊就是这里面有各种各样的争议比如说隐私方面的啊比如说这个资本主义剥削劳劳动的方面的啊还有就是这个怎么对就这种行为到底

566
1:15:51.080 --> 1:16:02.240
怎么定性啊需不需要对这种行为进行制约比如这个算法本身是不是需要被一定的管制啊类似这样的讨论这个两位怎么看

567
1:16:02.840 --> 1:16:05.840
你要管制啊算吧至少要开放吧

568
1:16:06.960 --> 1:16:10.160
要公开透明啊至少嗯对啊对这次我们

569
1:16:10.880 --> 1:16:14.920
对因为现在碰到越来越多这样的一些事情对就是算法对我们

570
1:16:15.920 --> 1:16:23.240
个人个体的这种不管是监控也好还是规约规制也好对包括我们前面也讨论过的像那种

571
1:16:23.840 --> 1:16:29.720
嗯外卖选手的那个外卖的旗手啊也会和算法是有一定的关系嘛对吧现在越来越多都是这种

572
1:16:30.280 --> 1:16:32.040
对其实像现在学界

573
1:16:32.720 --> 1:16:37.240
其实开放数据开放算法对包括爱道德这些东西其实都是

574
1:16:38.040 --> 1:16:45.800
讨论的挺多的对但是呢具体怎么样去去落地特斯和一些法律最终能够结合起来其实

575
1:16:46.960 --> 1:16:48.440
还是还是挺有挑战的

576
1:16:49.840 --> 1:16:50.120
嗯

577
1:16:51.920 --> 1:16:54.040
其实我想讲个先讲个故事啊

578
1:16:54.960 --> 1:17:00.400
嗯就是我原来发现在我身上的我呃李俊可能知道的我原来在应客网

579
1:17:01.080 --> 1:17:09.200
嗯待过三年然后才进了盛大创新院嘛对然后其实我离开应客网是非常不愉快的

580
1:17:10.080 --> 1:17:13.440
就是最后是彻底闹翻打官司打到最后我胜诉

581
1:17:14.360 --> 1:17:21.480
然后结束的这个应客网的职业生涯但最后打的是个什么关系呢就是明明是公司没钱了

582
1:17:22.120 --> 1:17:26.520
要裁员但是呢他们就搞了一堆证据

583
1:17:27.320 --> 1:17:33.000
证明我当时在公司里访问的不是工作所需要的网站

584
1:17:34.160 --> 1:17:39.560
嗯然后说我不是呃这个因为什么什么裁员直推你

585
1:17:40.000 --> 1:17:44.640
而是因为你违反了公司的这个员工守则所以我把你开除了

586
1:17:47.400 --> 1:17:54.240
就是这样的所以这个跟ai没关系这就是一个老板当他要作恶的时候

587
1:17:54.960 --> 1:18:07.000
他可能会用出任何他可以想得到的损招来跟你跟你搞但是另外一方面啊就是值得高兴的就是我们国家的法律

588
1:18:07.880 --> 1:18:09.080
还是保护劳动者的

589
1:18:10.080 --> 1:18:20.720
所以最终是什么呢就是我先去申请劳动仲裁嗯然后他那个公司其实非常的就是那个老板是一个非常鸡贼的家伙他之所以在

590
1:18:21.240 --> 1:18:27.440
反过来提起诉讼就是对我提起诉讼只是为了拖延支付的时间

591
1:18:28.400 --> 1:18:36.280
他本来应该给我这个离职补偿金嘛他就打官司一审二审三审啊一审二审终审最后就是还是会给我钱

592
1:18:36.720 --> 1:18:39.960
只不过能够多拖几个月但是最终我还是赢了

593
1:18:41.480 --> 1:18:48.920
就是就是这样的事情反正你那个时候的这个劳动仲裁其实没有现在的环境好现在更倾向劳动者一些

594
1:18:49.600 --> 1:18:59.360
对所以当时我就觉得已经是算保护嘛因为这些证据都是都是不公正的证据就是他是从自己的公司里

595
1:19:00.360 --> 1:19:04.560
拿出来就是从公司里拿这种所谓的浏览器监控的数据

596
1:19:04.920 --> 1:19:11.840
然后说这些与工作无关因此你违反劳动的这个什么什么员工守则诸如此类的

597
1:19:12.440 --> 1:19:24.720
但两个第一个他完全可以伪造我的访问证访问数据另外一个即使是劳动守则里也没有规定到这么清楚其实他们后面自己

598
1:19:25.000 --> 1:19:33.600
是有另外创造了一个所谓的劳动劳动手册来来反过来告我所以这些都是都是他们违规的地方

599
1:19:34.440 --> 1:19:44.280
而且这个违反劳动这个公司签订的劳动手册是不是就能够无责任的这个解聘这个本身也不是必然的

600
1:19:44.960 --> 1:19:50.520
这个还要看是不是违反劳动法啊就就有很多这个讲究了嗯

601
1:19:52.440 --> 1:19:58.720
但是我感觉去这种技术手段确实对劳动者其实带来了挺大的这种

602
1:19:59.440 --> 1:20:08.040
这种压力对了那庄老子可能是还是挺挺愿意去去和企业去做这个事嘛对但对更多的

603
1:20:08.480 --> 1:20:15.760
做做一个弱势的可能他觉得啊甚至有点信心我确实可能做了一些上班个我摸鱼的事情

604
1:20:16.800 --> 1:20:23.160
这个我觉得就是大家的观念要要要转过就是该该争取的利益要去争取

605
1:20:23.640 --> 1:20:28.560
哪怕争取没有成功比如说确实自己最后发行理亏的话你也要去做

606
1:20:29.520 --> 1:20:33.200
嗯没什么的那那这是正当权益吗

607
1:20:33.640 --> 1:20:39.440
除非你认啊除非就是公司的这个各种理由和对你最后的这个处罚你都认那那没没话可讲

608
1:20:39.840 --> 1:20:46.320
你你就认了呗对吧如果你又不服气你又放弃这个权利的这个不好这个这个要去争取

609
1:20:47.320 --> 1:20:53.160
所以对我我完全赞同刚才老庄说的这个观点就是这事跟哎哎的关系不大

610
1:20:54.320 --> 1:20:56.440
当然当然现在这个

611
1:20:57.120 --> 1:21:01.800
计算机算法其实其实我更愿意用计算机算法这样的一个名称啊就是

612
1:21:02.360 --> 1:21:07.560
因为哎这个名字说白了比较像市场广告你说啥玩意算哎哎呢

613
1:21:08.960 --> 1:21:15.320
我写了一个程序这个程序可以猜测啊你接下来可能要

614
1:21:16.320 --> 1:21:26.040
这个这个打开的软件根据平常的啊习惯的这个追踪啊我猜测你可能每天中午十二点左右里面又要吃饭了吧

615
1:21:26.360 --> 1:21:34.840
啊可能会打开微博或者这个这个这个笔站刷他东西那这种东西算不算爱爱呢其实他就是一个统计算法而已

616
1:21:35.720 --> 1:21:39.240
所以实际上本质就是计算机算法啊通过计算机算法来做绩效

617
1:21:40.200 --> 1:21:41.200
而这件事情呢

618
1:21:41.880 --> 1:21:43.160
说老实话他是中立的

619
1:21:44.000 --> 1:21:47.200
他可能是作恶也可能不是这说不清楚

620
1:21:47.720 --> 1:21:49.200
所以还得具体看情况

621
1:21:50.040 --> 1:21:52.720
就我想说一说的是我个人的

622
1:21:53.520 --> 1:21:57.880
一个态度什么态度呢就是哪些东西是我明确的不赞同的

623
1:22:00.080 --> 1:22:04.600
比如说明显的这个侵犯个人隐私的东西

624
1:22:05.280 --> 1:22:11.880
比如在洗手间里装个监控啊这种肯定是有问题的啊然后

625
1:22:12.760 --> 1:22:15.800
这是就是对隐私已经违法了吧应该说

626
1:22:16.960 --> 1:22:17.440
有可能

627
1:22:19.240 --> 1:22:25.960
嗯这这个因为中国对于这个在什么地方可以安装摄像头也是有专门的法规的

628
1:22:26.800 --> 1:22:30.000
什么人可以在什么地方安装摄像头这个摄像头的数据

629
1:22:30.400 --> 1:22:35.160
这个是这是是什么人掌握的这这都是有相关的规定的

630
1:22:35.480 --> 1:22:36.880
OK还有第二种

631
1:22:38.000 --> 1:22:40.160
就是明显的

632
1:22:40.880 --> 1:22:44.920
不对等的关系比如说我在你的电脑上安装了监控软件

633
1:22:45.520 --> 1:22:46.280
但是你不知道

634
1:22:47.800 --> 1:22:55.000
就是我瞒着你在你的电脑上安装了这个监控软件也就是说这种东西它本身是

635
1:22:55.640 --> 1:23:01.840
嗯即使拿到法律上去打官司也是非常可疑的证据那么

636
1:23:03.040 --> 1:23:04.560
什么样的事情是

637
1:23:05.720 --> 1:23:09.360
不太好确定的甚至于我们必须要去面对的

638
1:23:10.760 --> 1:23:16.280
比如说如何去科学的衡量一个人的绩效和产出

639
1:23:17.200 --> 1:23:23.360
我以前在创新院因为虽然创新院是一个我们上次介绍过是一个非常

640
1:23:24.200 --> 1:23:29.600
特别的一个机构啊就很多地方是气氛非常自由然后也

641
1:23:30.600 --> 1:23:33.040
有有很宽松的一些管理环境但是他有一点

642
1:23:34.240 --> 1:23:40.240
他上海班是要打卡的这个是因为整个盛大集团都这样

643
1:23:41.480 --> 1:23:45.720
由于各种原因啊你可以认为是官僚可以认为什么反正就是摆不平

644
1:23:46.640 --> 1:23:48.880
没法让我们有特殊性

645
1:23:49.440 --> 1:23:55.360
那还是要打卡但是呢也采取了一些这个特殊的手段比如说你万一迟到了啊你跟

646
1:23:56.080 --> 1:24:00.400
领导打个招呼基本上问题不大哈但还是要打卡的这个其实

647
1:24:01.200 --> 1:24:12.960
创新院很多人是颇有微词包括我在内啊我我当时曾经讲过一个就是我我说我原则上是就绝对不会加入一家需要上海班打卡的公司

648
1:24:13.960 --> 1:24:19.560
为什么哈就是因为我觉得额上海班打卡他无非就是限定你的工作时间嘛

649
1:24:19.960 --> 1:24:23.560
然后你如果工作时间上有问题的话他就要扣你的钱

650
1:24:24.560 --> 1:24:30.120
而不去考虑你实际的铲除那么这是一种就相当于放弃了

651
1:24:30.640 --> 1:24:38.840
正确的管理而去屈从于一种简单粗暴的实际上没有任何科学性的一个管理这个东西尤其对于

652
1:24:38.840 --> 1:24:49.960
对于我们这样的做软件的也就是呃通过员工的智力创造来创造价值的这样的一种公司

653
1:24:50.400 --> 1:24:56.560
那你去严格的限定时间其实没有特别大的意义你关键还是要看他实际的铲除是怎么样子的

654
1:24:57.760 --> 1:25:04.160
啊那如果一个公司他对于绩效的管理非常的松垮

655
1:25:04.560 --> 1:25:08.200
反而很在意的是这样的一些绝对的工作时间

656
1:25:08.680 --> 1:25:15.800
比如像我刚才提到的那个报道里面说监控你的电脑你有十分钟没有任何操作了认为你这十分钟就没有在工作

657
1:25:16.240 --> 1:25:21.120
这个毫无疑问是很混账的逻辑啊这种我是坚决的反对的

658
1:25:21.800 --> 1:25:25.440
但是如果他的这个算法更精细一些

659
1:25:26.360 --> 1:25:29.800
比如他从你的工作成果上去做一些分析

660
1:25:30.600 --> 1:25:35.920
啊同样是这两个程序员这个月都产出了比如说五千行代码

661
1:25:37.000 --> 1:25:39.720
这五千代码的价值能不能够分析得比较清晰

662
1:25:40.360 --> 1:25:48.880
然后来作为绩效的一个基础这个我觉得这样的算法可能还真的值得去好好地研究这个是我的一个个人态度

663
1:25:49.680 --> 1:25:54.760
你们两位怎么看在这样的算法没有发明出来之前

664
1:25:55.600 --> 1:26:01.640
嗯如果有人忽悠老板说我能帮你算这个这就是小人

665
1:26:02.280 --> 1:26:10.200
嗯而且这种人太多就通常就会有人跟老板说我们可以用数数目字来管理

666
1:26:10.520 --> 1:26:15.800
然后我们可以量化的评估老板肯定也喜欢这种人但其实他在骗人

667
1:26:16.800 --> 1:26:21.760
那这个能不能就是说比如说设定一个时间段半年到一年然后在一个

668
1:26:22.280 --> 1:26:26.320
这个尺度有限的团队里面做一下对照组的测试

669
1:26:27.160 --> 1:26:34.800
比如说啊一个团队二三十个人找一个不大的团队二三十个人这个通过传统的

670
1:26:35.240 --> 1:26:44.280
呃立的嗯三百六十度的这个评价啊等等等等代码的这个review啊交叉review这样的评价得出一个

671
1:26:45.040 --> 1:26:49.800
绩效的打分然后通过算法的绩效打分这样连续跑他四个季度

672
1:26:50.920 --> 1:26:54.760
这样是不是能验证是不是真的这个吹的牛是有一定道理的

673
1:26:55.800 --> 1:26:58.680
就如果我是领导的话我不会简单因为这个人说的话

674
1:26:59.680 --> 1:27:06.600
听上去很美好我就觉得这个人很能干或者相信他的这套方案肯定要去这样去验证啊嗯

675
1:27:08.200 --> 1:27:15.240
是吧通常很难说实话你刚才说的这个其实已经是把一家公司当成是一个

676
1:27:15.720 --> 1:27:21.160
学术性的机构然后来做实验甚至做对照组然后来判断

677
1:27:22.120 --> 1:27:27.400
但是当一个家伙我们就说一家公司吧当一个家伙得到了老板的授权

678
1:27:28.800 --> 1:27:29.880
去做这件事情

679
1:27:30.720 --> 1:27:33.720
然后他的屁股就会变成我一定要证明这件事情是有用的

680
1:27:34.960 --> 1:27:43.000
啊那肯定不能这样呀这个这个我觉得肯定不能这样就是就是不可能把这件事就授权给他去做了不可能的这个一定是就是

681
1:27:43.400 --> 1:27:51.720
首先是业务上的老板肯定要去负责的然后由这个做这个工具的人和比如说hr的部门组成一个小组来

682
1:27:52.280 --> 1:27:58.480
定期的去做评估他不可能就是说让这个做工具的人就去做全面决策这这肯定有问题的

683
1:27:58.880 --> 1:28:02.000
嗯嗯当然这就

684
1:28:02.680 --> 1:28:12.960
而且我世界我就相当不乐观吧就说我通常不相信现在最近能能够有谁能够把这东西做出来通常假假设他号称自己做出来多多半都是假

685
1:28:14.480 --> 1:28:16.280
嗯确实有难度

686
1:28:17.080 --> 1:28:22.160
呢但是换一个比如说如果不是这个就算你编程是其他的一些

687
1:28:22.760 --> 1:28:31.280
嗯就是不同的工种是不是有可能对对这和工种肯定关系很大技建工嘛技建工当然是很容易的

688
1:28:31.880 --> 1:28:37.400
哎那些没问题那些就简单劳动制造业的对传统制造业我觉得不大现在主要的

689
1:28:37.840 --> 1:28:42.040
那困难是我刚才说这种就是通过自己创造作为主要成果的这种

690
1:28:44.000 --> 1:28:46.880
这种就很多人他工作习惯就这样比如说我

691
1:28:46.880 --> 1:28:52.640
我刚入行不久啊就是零零年代我自己写程序自己做方案自己做项目的那个时候

692
1:28:53.360 --> 1:28:58.280
一天可能会断断续续的工作时间可能有十二个小时比如说啊

693
1:28:58.680 --> 1:29:08.440
但其中真的在码成果的可能最多一半时间其他时间或者在思考或者来跟人聊天啊这个这个去去启发自己可能在做这样的事情

694
1:29:08.760 --> 1:29:14.080
那这个时候就是我们传统的方式他怎么去衡量这个人的产出

695
1:29:14.920 --> 1:29:22.160
嗯一方面我就就非常困难就是有没有一些至少比如说起到

696
1:29:22.920 --> 1:29:30.920
一半权重的客观的一些采集的数据这个我觉得是管理上的一个很大的挑战但是怎么也得去干难

697
1:29:32.240 --> 1:29:43.880
否则就是一旦这公司达到比如说一千人以上这个我觉得就基本上没有办法按照一般的那种人的方式去管理了

698
1:29:45.000 --> 1:29:46.400
必须依赖于数据了

699
1:29:48.240 --> 1:29:57.560
即便我们现在试验室对几个老师加起来比如说二十多个学生每个月给激励对我们对于我们来说就是一个挺头痛的事情

700
1:29:59.120 --> 1:30:07.640
对学校里面还有另外一个很复杂的问题就是他的人情占的比重相当高对挺挺头痛的你让人去做那

701
1:30:07.640 --> 1:30:15.200
大家都不喜欢得罪人那那总有好的和差的怎么办呢最理想的肯定大家都希望有一个数据表达能搞定这事儿

702
1:30:15.960 --> 1:30:16.640
对对对

703
1:30:18.240 --> 1:30:20.960
我我像我像稍微说一下这件事情的难度啊

704
1:30:21.360 --> 1:30:31.800
就是嗯嗯我其实思考过这件事情但是如果我们现在做的所谓的自力劳动是一个稳定的自力劳动的话

705
1:30:32.320 --> 1:30:35.800
那还可以逐渐地探索出一种估算的办法

706
1:30:36.520 --> 1:30:43.440
但是其实我们现在所处的软件工程软件工具是一个飞速发展的时期

707
1:30:44.760 --> 1:30:50.320
就比如说吧有包管理工具的编程语言和没有包管理工具的编程语言

708
1:30:50.840 --> 1:30:57.840
嗯以及这个包管理工具是联网的还是只准用公司里面的那些包完全不同

709
1:30:58.840 --> 1:31:07.560
嗯再比如说我基于一个框架来写代码和我自己手打手把手的从头写起这个效率也不同

710
1:31:07.880 --> 1:31:12.720
然后这个框架本身的灵活性就比如说当我想实现一个简单的功能

711
1:31:13.480 --> 1:31:21.640
有可能我想当然了发现不行我到最后还得把光框架的代码读懂了才能硬编码或者是把这个框架改了我才能实现这个功能

712
1:31:22.640 --> 1:31:29.840
但也有可能另外一个同样看上去挺简单的功能这个框架真的让我只用配一个参数就行

713
1:31:30.600 --> 1:31:36.880
嗯如果你只是从外在来看就说我交给这个家伙一个任务然后他多久干完

714
1:31:38.120 --> 1:31:39.920
说不定这家伙就是很擅长搜索呢

715
1:31:40.920 --> 1:31:49.080
不是很擅长搜索这个也也也是很很大的一个本钱就是我能通过不是不是你跟我说你跟我说我的意思是说

716
1:31:49.880 --> 1:31:58.320
不你看我给你一个任务然后呢我为这个任务估算了一个价值就是我认为这个功能大概是值一千块钱的功能

717
1:31:59.240 --> 1:32:04.200
然后呢你干三天也懂了懂了我带一个月也干完了我怎么评价

718
1:32:04.920 --> 1:32:14.680
对就是就是一个任务在他具体完成之前他实际上的难度和挑战其实不能够很精确的去判断嘛对

719
1:32:15.240 --> 1:32:18.080
嗯对是的这是难点之一啊

720
1:32:19.400 --> 1:32:26.120
然后接下来就是我如何去判断说这个人是因为能力很强

721
1:32:28.000 --> 1:32:28.640
做出来的

722
1:32:29.720 --> 1:32:36.600
还是因为能力不足他做完了他告诉我他做完了但其实他没做完所以后面的八个

723
1:32:37.480 --> 1:32:42.640
又一堆嗯因为八个这件事情就更困难

724
1:32:43.640 --> 1:32:51.480
到底是因为是这个人当初写下了八个还是整个系统的原因导致那里有个八个

725
1:32:51.800 --> 1:32:58.200
对这个八个有两个大难点啊一个难点是很多八个是有潜伏性的就像我们这个新冠一样啊

726
1:32:58.560 --> 1:33:06.160
他不是得了之后马上就这个感染之后马上就症状的他他可能很长时间才能发现等你发现的时候

727
1:33:07.000 --> 1:33:12.000
你给那个员工该奖励的已经奖励完了对啊对啊他活都干完了走人了

728
1:33:12.480 --> 1:33:16.120
第二个就是刚才老庄说的就是这个bug的根因很难判断

729
1:33:16.880 --> 1:33:17.760
嗯这就

730
1:33:18.400 --> 1:33:26.520
你不能说这个bug出在某个环节这个环节就背锅其实可能根因不在他这里跟他关系不大他最多只是百分之十的责任

731
1:33:27.360 --> 1:33:35.320
这两个都是还有第三个第三个是因为我们现在其实是一个大规模协作各有分工的

732
1:33:35.880 --> 1:33:47.840
其中最简单的工作叫写代码嗯其他的工作怎么评估对分析设计比如说写分析写设计写文档做测试甚至是写那种构建脚本的人

733
1:33:50.080 --> 1:33:50.600
找拍子

734
1:33:53.360 --> 1:33:58.520
但当然这也是因为我刚才说的最前面的那个原因因为我们这个行当正在快速变化

735
1:33:59.440 --> 1:34:05.360
所以才会不断的诞生新的工种诞生新的比如说现在叫压门程序员你原来都没听说过

736
1:34:06.480 --> 1:34:10.680
但这也是劳动啊嗯对专门写配置文件的是吧对

737
1:34:12.360 --> 1:34:17.520
所以对如果如果确实啊就是如果这个整个流程啊

738
1:34:18.280 --> 1:34:23.400
工作的协作的协同的节点啊相对稳定不说完全固定啊就相对稳定

739
1:34:23.960 --> 1:34:27.960
跑他个两三年那可能真能摸索出一套这个比较合理的

740
1:34:28.280 --> 1:34:31.400
权重啊包括衡量标准啊确实可以

741
1:34:32.440 --> 1:34:37.920
但如果半年就一变的话那这个确实就而且不值得去做了变的对

742
1:34:40.160 --> 1:34:42.640
对所以说我们现在在实验室的

743
1:34:43.120 --> 1:34:51.840
做这件事情的一个思路不是看最终的那个具体的产出是你写的做到代码写了文档其实其实是看那个协作关系

744
1:34:52.360 --> 1:34:58.800
对他是看协作关系去去得到最终的那个贡献度的对就有点像那个配就让可的

745
1:34:59.320 --> 1:35:05.680
那个排序对他不是看你的网页内容究竟是什么他是看你网页之间的关系网页之间的应用

746
1:35:06.160 --> 1:35:17.520
对我们现在也是这样就是看你在git hub上面的协作程度以及项目之间的依赖程度对他是看这种关系然后去做一个一个一个计算的模式

747
1:35:17.920 --> 1:35:31.160
对这个也是也是在看待如果后续有一些好的结果到时候我们可以把弗兰克纳泽一起来来来做讨论这个到时候我觉得也是是可以找时间来详细地去聊的

748
1:35:32.320 --> 1:35:41.960
好那如果这样的话我们反过来看哈是不是监控你的绝对工作时间反而成为现实的可能性了

749
1:35:41.960 --> 1:35:53.920
呵呵就只能这么干了其实我能够了解老板的心态就是说我不知道你干了啥但是我一定要让你忙到没空干任何其他的事情那么

750
1:35:55.040 --> 1:36:05.240
我我就至少把你的这个时间给吃掉了就跟原来的那个叫什么中世纪的时候那种封建男人给老婆装针钞带是一个逻辑

751
1:36:05.960 --> 1:36:34.080
嗯很多优秀的呃技术的人员不论架构式啊程序我我们交流都是感觉就是说人的思维啊在这种创造性思维过程当中它是存在一些目前还找不到规律但是确实有的一些东西在里面就是你需要不断去刺激你的思考嗯所以光占据时间其实意义不大啊假设我们有一位伙伴啊团队里面有一位伙伴

752
1:36:34.080 --> 1:37:04.080
素质能力都是不错的我们通过平常的这个东西可以判断出来但是有一段时间他状态就是不好不想工作或者各种其他的问题就是集中不了精力产出就是比较低怎么办最后我们的结论就是不办嗯等他自己走出来自然就好了或者放他休假对对这就是这样就就别的方法就是听上去很荒谬啊这个结论但实际上你仔细想其他的方法肯定都是

753
1:37:04.080 --> 1:37:34.080
不作用对啊就像学术圈里面不就有给教授放学术休假吗所以AI监工这件事情总体来说我的感觉就是第一不是很靠谱第二呢跟AI没什么关系对啊你你你无非就是这个套上这个关键字之后这条新闻比较容易传播而已嗯对这个事情本身就没啥帮助嗯从我个人的风格来就我我我还是愿意就是

754
1:37:34.080 --> 1:37:37.120
至少局部的去考虑一些可能性

755
1:37:38.120 --> 1:37:48.800
哪怕不能彻底解决至少在一定程度上能够帮助我们去做一些在这些简单粗暴的方式以外更有效的一些评估

756
1:37:49.680 --> 1:38:04.040
否则你公司的管理他就另一另一条路也也走不通就你完全不管肯定也有问题对吧因为嗯相当于做得好的和做得差的都大过分了这种肯定也非常糟糕或者你就只

757
1:38:04.080 --> 1:38:17.640
一刀切啊看时间看这个工作时间看代码航数这肯定最后结果也很不好你多多少少得有一点东西你哪怕只找到两三个局部指标但是是能客观分出来的那也好过没有

758
1:38:19.120 --> 1:38:27.960
我我唯一的想法就是唯一的建议就是说管理是分级的嗯就是你不要用一个全公司统一的办法去管理的个人

759
1:38:27.960 --> 1:38:37.000
啊这不可能对确实不是对你最多就是管理的这个研发主管然后研发主管想办法去管理他的手下的兄弟们

760
1:38:39.480 --> 1:38:41.000
好那我们今天就到这吧

761
1:38:41.000 --> 1:38:46.640
ok ok下次再聊好好嘞拜拜拜拜拜拜

