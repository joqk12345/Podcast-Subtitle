1
00:00:00,000 --> 00:00:03,120
各位朋友大家好欢迎来到后互联网时代的乱谈

2
00:00:03,120 --> 00:00:07,080
那今天我们时间提前了一点啊在周六的晚上

3
00:00:07,080 --> 00:00:17,080
嗯在开始今天的话题之前我先要补充几个跟我们上周聊的福岛核污水排放这个问题有关的一些事情

4
00:00:17,080 --> 00:00:23,600
上次因为内容特别多关于福岛这个事儿呢有特别多东西可以讲所以东西就没有展开

5
00:00:23,600 --> 00:00:28,120
那后面也有一些朋友在问所以今天就稍微补充几点吧

6
00:00:28,120 --> 00:00:30,960
一个就是关于东电的背景

7
00:00:30,960 --> 00:00:40,480
上节目里面我提了一下东电的背景它原来是东京都政府持有大部分股权百分之二三十大概

8
00:00:40,480 --> 00:00:44,640
然后还有其他各种各样的投资机构还有美国的一些资本

9
00:00:44,640 --> 00:00:49,520
但这个在福岛出事故之后其实它已经发生变化了

10
00:00:49,520 --> 00:00:53,800
因为福岛出事故之后第一它这个电站就没有办法正常运营了赚不到钱

11
00:00:53,800 --> 00:00:57,120
第二个它要做出大量的赔偿重建等等

12
00:00:57,120 --> 00:01:01,680
所以实际上负债累累它已经实际上濒临破产的这样一个状态

13
00:01:01,680 --> 00:01:11,640
那怎么办呢就是日本政府就出面组织了一个公司叫做核损害赔偿和退役促进公司

14
00:01:11,640 --> 00:01:17,280
实际上这个公司就是专门政府来注资的一个渠道

15
00:01:17,280 --> 00:01:21,400
那现在这个公司呢就占了东电一半以上的股份

16
00:01:21,400 --> 00:01:27,080
所以实际上现在你可以理解东电就是一个国企了日本的国企了大概这么一个状态

17
00:01:27,280 --> 00:01:30,440
那么它们的利益其实是紧密捆绑的

18
00:01:30,440 --> 00:01:37,040
第二个呢就是为什么我们不太相信这样公司不是说因为一些呃莫须有的原因

19
00:01:37,040 --> 00:01:45,000
是因为事实上它就干了很多蠢事或者坏事早先的就不说了日本国内的很多新闻报道都提过

20
00:01:45,000 --> 00:01:51,280
它在没有出这个核事故之前在福岛当地名声就不好有很多相关的劣迹啊

21
00:01:51,280 --> 00:01:55,200
但是最核心的其实还是当时这个事出现之后

22
00:01:55,760 --> 00:02:04,000
因为那一次大地震地震然后海啸实际上在地震发生之后这个风险已经非常大了

23
00:02:04,560 --> 00:02:14,840
当时当地的负责几个反应堆的运营团队里面有一个人就已经提了一个建议了说现在马上就启动关堆

24
00:02:14,840 --> 00:02:25,000
就是把这个堆废掉的准备注入一些专门的元素让它的反应停止把核燃料取出来啊然后做相应的应急处理

25
00:02:25,000 --> 00:02:27,960
这样不论发生什么事情都不会有大的问题

26
00:02:27,960 --> 00:02:35,080
那这个时候呢东电就非常犹豫犹豫的原因是他有侥幸心理他觉得这东西不会有问题

27
00:02:35,080 --> 00:02:42,240
以后我要靠它发电赚钱那我现在就把它废了那以后重启它又要花好多力气啊要花很多钱啊

28
00:02:42,240 --> 00:02:51,000
所以这个其实是最可惜的一个失误就当时这个是完全可以完全避免这个灾难的啊没有做好

29
00:02:51,000 --> 00:03:02,480
然后当海啸发生水淹过来之后后续又启动应急预案其实最后还是要停这个堆嘛结果就一切的事情都不顺

30
00:03:02,480 --> 00:03:17,600
首先本来应该深埋在地下的备用发电机它为了省钱它把它盖到地上然后海啸一来这个就没了这个停堆是要垫里的没有垫的情况下是没办法停堆的

31
00:03:17,600 --> 00:03:41,960
然后呢马上从东京调一个移动的电源车啊移动电源车过去接上核电站之后也可以启动这个停堆的操作结果移动电源车过去之后发现两边接口不对啊就是就好像一边是c口一边是苹果的ios这个这个lightning这个实在是太太典型的这种炒台班子的感觉啊对

32
00:03:41,960 --> 00:03:47,000
你们记不记得在六十六期我们聊过我们广东的那个电信事故

33
00:03:47,000 --> 00:03:55,040
嗯当时我就说了在最近的十年里面最大的一个电信事故就是日本的电运营商kdi的那个事故

34
00:03:55,040 --> 00:04:04,360
嗯那几乎跟这个如出一辙就是但凡他有一点准备但凡他做过一点实测都不会发生的事情哎它就发生了

35
00:04:04,360 --> 00:04:12,880
所以所谓日本的工匠精神这个事就很搞笑啊好然后还有更搞笑的一个事情就是最后这些停堆都不行了怎么办呢

36
00:04:13,000 --> 00:04:21,080
那就要引海水把海水灌到那个已经出问题的那个堆心附近把堆心的温度冷却下来防止它爆炸

37
00:04:22,080 --> 00:04:32,440
结果他们发现他们没有任何设备能够完成这件事情最后这个还是我们三一重工捐了一台设备这台设备现在还在辅导

38
00:04:33,160 --> 00:04:39,320
价值几个亿的一个很大很高的吊车啊把那个管子吊过去我们还派了人去支持的

39
00:04:40,040 --> 00:04:48,480
所以这一系列就是他们这完全这个应急是一塌糊涂还有一个最恶劣的事情就是当时他隐瞒了这个堆心熔毁的风险

40
00:04:49,280 --> 00:05:00,720
当前面这些应急东西都有问题的时候啊全世界各地都很担心啊说你这个会不会出现堆心熔毁所谓堆心熔毁就是反应堆的那个堆心里面它是包含了核燃料

41
00:05:01,280 --> 00:05:10,680
然后这个部分是完整的一个密封仓啊什么冷却都是从它外面走的这个密封仓保护了里面的核燃料不会泄露出来

42
00:05:11,440 --> 00:05:27,160
但这个密封仓在经过地震什么这东西之后呢它其实有风险的有裂纹很多就担心说会不会有问题他就一直说没问题没问题结果后面暴露出来其实早就已经泄露出来了就这个保护它的外壳早就已经露了

43
00:05:27,800 --> 00:05:52,600
所以现在福岛的这个出问题的反应堆它现在状态其实就是不明状态的核燃料跟混合了各种东西的冷却水跟地下不知道什么状况啊可能是混凝土跟土地跟什么混在一起一团降幅在下面不断地在往外放射东西啊现在是不断地往里面注水保持它冷却

44
00:05:53,000 --> 00:06:01,960
然后再把这个水抽出来放到储水罐里面然后再在储水罐的旁边修建净化的工厂来把这个水净化就像这么个状态

45
00:06:02,640 --> 00:06:10,680
根据日本的报道从一一年出现事故开始到现在他们有好几次很明确地隐瞒了这个污染水泄露的事情

46
00:06:11,240 --> 00:06:22,560
甚至有几次说明他们故意把它露出来都不知道啊然后最后是被揭穿了才不得不承认的所以这家公司就是一个很奇葩的状态承担不起责任也不太想承担责任的一家公司

47
00:06:22,600 --> 00:06:29,080
一个国企的状态所以他说的话那如果只有他说了那确实没人敢信啊

48
00:06:29,600 --> 00:06:39,960
所以这就是我们现在最大的问题那说这个的意思是什么呢就是最近我看到有一些媒体也好还有甚至包括我们的外交部也好

49
00:06:40,360 --> 00:06:52,240
在跟日本人打嘴仗啊其实日本人现在的攻势非常犀利啊在到处反击啊说我们如何如何那就几条线啊一条线说我们污蔑他啊

50
00:06:52,240 --> 00:07:07,360
说他是很科学的啊说我们才是在搞政治迫害啊这是一条线另一条线是举出数据很漂亮的数据图啊说全世界啊排核废水啊中国排了多少多少日本排多少多少日本只有一点点

51
00:07:07,920 --> 00:07:13,840
那就是混淆我们之前聊过的废水跟污水的差异就他们其实在全方位出击

52
00:07:14,520 --> 00:07:22,040
那我们也在回击一些东西比如我们外交部也在问啊说你们回答几个问题但是我看了以后觉得这些问题问得很不好

53
00:07:22,720 --> 00:07:33,800
没有什么针对性也没有什么伤害力我可以给他们出点招啊就是说其实我们现在真正质疑的是什么我们需要的我们提的要求是什么

54
00:07:34,520 --> 00:07:52,000
其实就围绕三个点就可以了啊如果我们的听友平常看到一些人在那里诡辩的话也可以问他们这三个问题啊但凡日本人能正式地回答这三个问题白纸黑字写下来哎那我觉得这事也能往前推进解决

55
00:07:52,240 --> 00:08:00,960
那三个方面呢第一个问题就是你现在说的那些水它的成分到底是啥里面到底包含什么

56
00:08:02,440 --> 00:08:10,560
你能说清楚吗然后这个成分除了日本政府和东电有没有中立第三方独立系统的采样和检测

57
00:08:11,360 --> 00:08:22,200
这件事情日本人就从来没说清楚过就哈哈呼呼地啊一会儿说这个国际原子能组织去的时候是做这样的一些采样和检测的

58
00:08:22,700 --> 00:08:25,520
但是都不敢说清楚是不是独立进行的

59
00:08:27,060 --> 00:08:34,480
因为爱耶自己也不敢去背这个锅啊那所以这个事你有本事就把它说清楚啊到底水的成分是什么

60
00:08:35,000 --> 00:08:50,360
像今天就有一个新闻东电那边公布的说在排放的口周围采样啊检测到里面有氚的元素啊大概是正常情况的十倍左右但是比安全线也就是大几百一千倍这种

61
00:08:50,880 --> 00:08:56,800
对人有明显危害的安全线还有很远所以没有问题闭口不谈其他任何元素

62
00:08:57,760 --> 00:09:07,560
那这个就是问题啊你你到底水里有啥你不能说只有船吧你要敢这么说也行那我回头就去你那边采集水样只要发现有其他的放元素你最爱撒谎

63
00:09:07,960 --> 00:09:15,560
所以这个问题是一定要被他们说清楚的就是水的成分第二就是关于你声称的排水无害

64
00:09:16,560 --> 00:09:26,320
那么关于海洋大气生态的影响到底你做过哪些科学实验你说它无害那不是你说就算的要做实验要去证明它呢

65
00:09:27,080 --> 00:09:33,040
从来没有人这么干过你是第一个这么干的你不需要证明一下它到底有什么影响吗

66
00:09:33,960 --> 00:09:45,320
没有做过任何实验对海洋在几十年的周期里面会产生什么影响大气生态会有什么影响有没有相应的研究有没有同行评议的成果

67
00:09:45,920 --> 00:09:50,640
我觉得你说它无害它的逻辑是我只要没超标就是无害的

68
00:09:51,160 --> 00:09:54,160
那这个显然说不过去嘛这个就不对嘛嗯对是

69
00:09:54,680 --> 00:10:03,960
因为因为其实我我是这样理解就是它先说我只有川其他的都可以忽略不计然后呢川只要不超标就是无害的

70
00:10:04,160 --> 00:10:14,160
但其实它根本没有说清楚它事实上排出来的水到底是不是混合了其他东西混合了多少如果排放多少年会产生什么问题它都没说

71
00:10:14,440 --> 00:10:24,480
对所以因为现在它在说它是科学的嘛嗯说我们是不科学的嘛那就大家说清楚这两个关键问题上你有没有科学的方法过程和成果

72
00:10:24,840 --> 00:10:36,400
嗯这是第二个问题第三个问题就是关于你的排放计划这个也是它的一个死穴但现在没有人盯着它打什么意思啊就是它不是号称要排三十年吗

73
00:10:37,360 --> 00:10:40,520
但其实这个三十年是非常非常不确定的

74
00:10:40,840 --> 00:10:45,960
为什么因为现在那个核电站的那个堆是我刚才说那种一泡降幅的状态

75
00:10:47,320 --> 00:10:59,760
它到底什么时候能够那个堆能够被彻底地封闭或者是把那个核燃料隔离拿出来这个它一点底都没有甚至连方案都没有

76
00:11:01,640 --> 00:11:08,560
一般我们是要去研究出方案出计划然后你才能预估时间嘛这一方面它其实是都没有的

77
00:11:08,960 --> 00:11:17,040
就它其实不知道这个水一共有多少假设这个堆一直在那搁着那个燃料不断的在放射

78
00:11:17,320 --> 00:11:28,960
然后周围靠水来一方面冷却它一方面把那个辐射物把它裹出来啊如果一直这么去循环处理的话那么很可能三十年之后那个水还在不断产生现在就是这样

79
00:11:29,280 --> 00:11:37,240
它从一年到现在积累了一百多万吨的水然后未来三十年它可能还要再产生一百多万吨甚至更多的水

80
00:11:37,560 --> 00:11:49,480
而且不知道什么时候结束所以这个问题你也要回答就是你现在到底是怎么个计划你什么时候能够完成这个堆的处理也就是说不再产生新的污染水

81
00:11:49,880 --> 00:11:58,320
到那个时候这个污染水是啥状态你知道吗LS系统能处理好它吗不确定也就是说你完全没有计划就是排一下算一下

82
00:11:59,320 --> 00:12:05,800
如果这几个事实能够很明确地扔出来让大多数人都看到的话那我觉得至少

83
00:12:06,640 --> 00:12:15,800
他不会随便说啊我是很科学的你们不科学这个问题我觉得对我们来说是一个大考啊是一个很重要的考试但我现在看到的

84
00:12:16,120 --> 00:12:27,120
我们正式的对外的不论是媒体还是外交我觉得这个事重点抓得不太对主要补充这么几点吧就是关于这个事这个事反正近期应该我们也不会再聊了啊就是大家就等着看吧

85
00:12:27,440 --> 00:12:46,000
这不是一件小事儿啊就是反正大家可以一直关注它嗯我们接下来聊的一个话题啊就是我们以前其实聊过的啊就是国产编程语言那为什么我们今天要聊呢因为终于出了一个啊我还觉得值得关注和比较看好的一个国产编程语言叫moonbeat

86
00:12:46,640 --> 00:12:55,520
中文好像是叫月兔是吧对嗯对的月兔那这个新闻我相信很多人都看到了啊你们两位怎么看

87
00:12:55,520 --> 00:13:02,120
还在就是是在了解哈罗沃德和他里面的基本语法的阶段

88
00:13:02,120 --> 00:13:23,440
嗯初步的感觉就是还挺挺舒服的就是就是说就很多编程语言我们都接触过嘛然后它里面有很多的关键字啊有很多的这种语法的符号啊然后有很多的这种写法看上去还觉得挺顺眼的就没有没有很诡异的东西

89
00:13:23,440 --> 00:13:23,720
没没有那种很很莫名之怎么会这个样子这个地方为什么又是又是方括号花括号然后又是什么语言括号各混在一块一堆就没有我觉得还挺干净的这是这是一个初步的印象但是因为因为就是说看到过一些介绍嘛就是说这个语言是比较从那个奥康来的但是那边那边的语言呢我原来就没有接触过所以说就谈不深嘛只能说第一印象

90
00:13:53,440 --> 00:14:23,440
觉得还行对我在他的官网上试了一下对我觉得体验还是不错的嗯他不光有还是比较全的从他这个语言究竟要干什么怎么来的还有线上的一个try这样的一个嗯直接可以去运行他的大概有二三十个这样的一个代码实例对我觉得还还挺不错嗯对一我这边其实虽然不是

91
00:14:23,440 --> 00:14:53,440
特别熟悉像webassembly嗯这样的一些一些一些语言对但是感觉应该是还能够比较轻量级特别是蛮适合现在云计算这样一个一个大的环境时代对因为因为我是在想把把这样把这种语言引入到一些像我们的一些嗯计算机教育还有教学里面去对应该也是一个一个挺不错的一个选择对我会持续关注一下

92
00:14:53,440 --> 00:15:23,440
的嗯有道理我简单介绍一下这个项目的背景哈这项目的主创叫张洪波啊这个人其实挺有名气的我个人认为啊他应该是现在在编程语言这个领域里应该是中国人在这个领域里面最有实力的中坚力量他早先是欧凯莫这个语言的主要的贡献者欧凯莫他又是凯某这个语言的继承者

93
00:15:23,440 --> 00:15:29,080
凯莫是一个非常非常函数式编程的一个语言

94
00:15:29,080 --> 00:15:33,960
然后欧凯莫这个欧就是object就给他加入了面对样的一些特征

95
00:15:33,960 --> 00:15:37,520
也可以看做是凯莫这个语言的一个现代化版本

96
00:15:37,520 --> 00:15:42,760
所以它是一个非常强调functional的就是函数式编程的一个语言

97
00:15:42,760 --> 00:15:52,280
它比较著名的一个衍生品是微软的Appsharp把欧凯莫这个语言跟微软的donate framework捆在一起啊

98
00:15:52,280 --> 00:15:54,040
就是Appsharp这个语言

99
00:15:54,040 --> 00:15:59,720
所以它应该算比较小众但是在那个领域里面名气还是挺大的

100
00:15:59,720 --> 00:16:07,320
而应该也算是就比较纯的函数式语言里面比较有工业实践成绩的这样一个语言

101
00:16:07,320 --> 00:16:10,920
好然后他是这个语言的主要的贡献者

102
00:16:10,920 --> 00:16:15,120
但是他后面呢兴趣又转向了云计算的编程

103
00:16:15,120 --> 00:16:20,320
所以他就做了一个新的语言叫rescript

104
00:16:20,320 --> 00:16:25,160
实际上rescript又是另外一个语言叫reason的一个变种

105
00:16:25,160 --> 00:16:34,960
reason是欧凯莫的一个变种啊rescript是把reason这个语言能够编译成JavaScript的一个变种

106
00:16:34,960 --> 00:16:40,200
所以大家可以理解实际上张红波他的精力就是从欧凯莫开始

107
00:16:40,200 --> 00:16:45,720
然后把欧凯莫编译成JavaScript产生了rescript这样的一种语言

108
00:16:45,720 --> 00:16:49,920
然后现在干脆就起了一个全新的语言就是这个moonbit

109
00:16:49,960 --> 00:16:59,200
但是呢它相当于我个人认为啊就是它实际上是一个更好的rescript什么意思呢就是它不是简单的编译成JavaScript

110
00:16:59,200 --> 00:17:07,960
而是它用了一个跟欧凯莫比较兼容的或者说呃精神上比较一脉相承的语法

111
00:17:07,960 --> 00:17:10,760
但是呢它是兼容web assembly的

112
00:17:10,760 --> 00:17:16,760
而web assembly是一个规范了就是它实际上是一种中间的语言格式

113
00:17:16,800 --> 00:17:24,280
就是你可以把各种语言的程序把它编译成web assembly的这样的一种中间代码

114
00:17:24,280 --> 00:17:27,360
然后就可以在浏览器环境里运行

115
00:17:27,360 --> 00:17:35,160
所以它跟rescript是类似的目标就是它希望把一个非常强大的functional的编程语言

116
00:17:35,160 --> 00:17:40,400
把它变成一个完全对浏览器很友好的一个环境

117
00:17:40,400 --> 00:17:42,880
它是这么一个思路

118
00:17:42,880 --> 00:17:54,960
所以大家就可以理解这个moonbit呢它最终的目标的生态是web assembly也就是完全在浏览器里面可以运行的这样的一套东西

119
00:17:54,960 --> 00:18:02,560
那张洪波现在是在哪里呢他是在idea就是叫大湾区数字经济研究院

120
00:18:02,560 --> 00:18:10,840
这个是粤港澳联合组建的一个科技研究院里边有一个部门叫基础软件中心

121
00:18:10,840 --> 00:18:13,560
张洪波是这个基础软件中心的负责人

122
00:18:13,560 --> 00:18:20,400
那这个基础软件中心我看一下他们主要的研究方向其实就是叫云环境下的一体化开发系统

123
00:18:20,400 --> 00:18:33,480
也就是完全脱离桌面系统就直接在云环境下去开发部署就一体化打开浏览器你就去编程编成完之后直接部署在云计算的环境然后它就可以对外去服务了

124
00:18:33,480 --> 00:18:36,760
这个是很多人都在研究的一个方向

125
00:18:36,800 --> 00:18:43,960
那他们研究这个方向里面一个很重要的分支就是有一个完全云原生的一个idea

126
00:18:43,960 --> 00:18:49,680
这个idea就是如果大家现在去摸贝特的主站点的话它不是有一个demo

127
00:18:49,680 --> 00:18:56,040
点到这个demo里它就会打开一个长得跟威尔斯丁code几乎一样的一个页面

128
00:18:56,040 --> 00:18:58,680
那这个其实就是它的那个云idea

129
00:18:58,680 --> 00:19:03,840
我猜想它应该是基于啊威尔斯丁online那个版本去构建的

130
00:19:03,840 --> 00:19:08,440
就在里边可以运行摸贝特这些程序代码运行的过程

131
00:19:08,440 --> 00:19:13,000
它就是完全基于它这个ide的技术把它编译成web assembly

132
00:19:13,000 --> 00:19:16,080
然后web assembly是可以直接在乱七里面去运行的

133
00:19:16,080 --> 00:19:19,360
那么它就直接给出结果整个速度非常非常快啊

134
00:19:19,360 --> 00:19:23,520
我看到的就是它这个语言一个是编译极快

135
00:19:23,520 --> 00:19:30,760
而且呢据说产生的这个web assembly就是wasm的这样的一个中间代码也非常小

136
00:19:30,760 --> 00:19:37,960
所以它应该是一个从头开始设计的但是根源于很经典的编程语言的

137
00:19:37,960 --> 00:19:43,920
同时面向未来的纯云计算环境这样的一个开发的一个生态

138
00:19:43,920 --> 00:19:50,880
而且它是有自动内存管理的这个也是就是它整个编程的体验会比较好

139
00:19:50,880 --> 00:19:58,560
然后我看了一下在黑客news上面因为它这个事是整个announcement整个发布啊

140
00:19:58,560 --> 00:20:07,280
是最早是发在这个黑客news上面的因为黑客news是一个就是人不算特别多但是上面大牛比较多的这样一个社区

141
00:20:07,280 --> 00:20:11,280
然后它主要讨论我们计算机相关的东西比较多

142
00:20:11,280 --> 00:20:17,760
它这个发上去之后立刻就有挺多的一流的专家来问问题和提建议

143
00:20:17,760 --> 00:20:23,440
那洪波也在上面就有很积极的一些回复啊从上面的一些信息呢

144
00:20:23,440 --> 00:20:26,640
他说大概这个东西现在属在一个demo的阶段

145
00:20:26,640 --> 00:20:31,960
那么他预期可能在明年的下半年会进入一个公开的贝塔

146
00:20:31,960 --> 00:20:37,400
那么那个时候大家就可以把它整个环境拿过来自己去玩去试一试了

147
00:20:37,400 --> 00:20:44,880
现在其实国外已经有一些高度基于webassembly的这样的一种云计算环境

148
00:20:44,880 --> 00:20:50,960
就是你只要兼容webassembly你用任何语言编写的东西也可以发布在上面成为一个服务啊

149
00:20:50,960 --> 00:20:58,640
然后这样的一个path一个platform as a service这样的一种云计算环境在国外已经有了国内好像还比较少

150
00:20:58,640 --> 00:21:07,040
然后那些社区都对这个呃语言非常感兴趣因为张洪波已经在这个圈子里消了名气啊很多人都知道他

151
00:21:07,040 --> 00:21:15,760
所以大家对他的这个事情是非常的有兴趣我个人认为这是国产编程语言的一个比较好的一个样板一个范例

152
00:21:15,920 --> 00:21:25,040
就是我们没有必要拘泥于说它是不是一个中文的编程语言或者它是不是有很中国性的特色

153
00:21:25,040 --> 00:21:33,760
它是很明确地去解决一个科学和工程问题然后有它独特之处就是跟别人不一样啊我可以把这个地方做得很好

154
00:21:33,760 --> 00:21:43,640
所以我个人是觉得会值得好好关注一下就是第一它这个人这个团队非常靠谱第二它的目标我觉得非常靠谱

155
00:21:43,640 --> 00:21:52,120
第三它目前的这个demo给人的感觉是有信心的第四它做的事情既不是很贪但是呢又不是很treble

156
00:21:52,120 --> 00:22:01,880
它不是一个微不足道的一点创新它是有它的很明确的目标的这个目标恰恰是现在既有需求又没有很好解决方案的这样一个领域

157
00:22:01,880 --> 00:22:12,240
所以我个人觉得是一个很好的样板就是其他做国产编程语言的可以好好看一下就正儿八经做这件事该怎么做我个人是这么一个态度

158
00:22:12,880 --> 00:22:20,160
哎呀我我真的很感慨啊嗯我因为我在华为内部我是看过昌杰语言

159
00:22:20,160 --> 00:22:37,360
OK一年以前那个时候我们在公司内部就已经可以下载到这个我的自己的个人电脑不管是Windows还是linux可以编译也可以运行可以有一定的跑跑很多东西了

160
00:22:37,840 --> 00:22:46,320
但是他们内部就一直在打磨打磨打磨到目前为止我一直在打听他们什么时候能够开出来没有一个明确的时间表

161
00:22:47,320 --> 00:22:54,560
嗯其实其实我为什么觉得阅兔非常好其实不管它语言本身如何它这样的一种

162
00:22:55,040 --> 00:23:06,440
就是从第一天就开始在社区里跟大家交流开源的方法我觉得是非常正的这是靠谱的开源的编程语言的做法

163
00:23:06,440 --> 00:23:13,760
因为你其实第一时间就要和人交流就要和你的潜在的使用对象开始去沟通

164
00:23:14,280 --> 00:23:36,400
然后他们才会持续的关注你的东西你一直非要打磨打磨不知道打磨得多好才敢放出来其实我倒觉得没那么没那么多打磨的必要早点放出来反而会更好嗯就这个感慨我觉得可能华为内部缺一个像张泽波这样的就是跟开源社区非常熟悉

165
00:23:36,660 --> 00:23:47,160
对他这种熟悉他就会就好像游泳一样很熟悉水我就不会怕他是的甚至我也没有完全准备好的情况下我可以下水去慢慢热身是吧

166
00:23:47,660 --> 00:23:59,760
但是如果就华为还是一个比较怎么讲比较serious就是他玩这个玩得太少他很多事情他会可能会过于严谨他不敢随便去试是的嗯他怕出问题

167
00:23:59,760 --> 00:24:00,400
所以这个也我觉得也不是不行吧那就看他们自己什么时候有准备了赶紧把拿出来是是是这个我觉得对我们做编程的教育也会非常有价值我一直心目中所憧憬的未来的编程体验就应该是本地零配置的我完全可以在任何地方用任何终端连上一个服务之后我就可以开始完成从

168
00:24:29,760 --> 00:24:41,160
设计到编程到测试部署调试等等等等所有的事情都可以在云端去完成我觉得这个应该是我们的一个很多人都有的愿景

169
00:24:41,960 --> 00:24:51,280
嗯那我很高兴看到就是国内有一家机构就是这个大湾区的数据研究院它有专门这样一个技术人中心我看上去觉得他们的目标应该就是这个

170
00:24:51,280 --> 00:25:21,240
而他们是一个研究院他们不一定会自己把所有事情都做了它很可能技术出来之后我希望比如说我们不论是阿里腾讯还是华为的云服务都能很好跟他们对接去把这种技术迅速的把它就是普及化那我们整个就我跟王老师我们做全民数字素养提升的工作又会简单一点对对

171
00:25:21,280 --> 00:25:50,680
对的对的对这一块其实我我我还有个体会嗯就是像这种在本地零配置全部跑在云端的还有一个非常大的优势就是它可以很好的去分享去做二次创新对这也是我可以看到的而且它的呈现力展现力非常好所以说就像刚才李峻老师所提到非常适合教学教育这一块嗯嗯

172
00:25:52,280 --> 00:26:01,600
就以后甚至可以有公司可能他就可以专门做一件事情啊就是叫做呃应用模板

173
00:26:03,040 --> 00:26:17,320
他不是说我帮你做应用的问题了我就发行很多的应用模板就类似于docker那样的可以立刻运行的container你要用的话或者免费或者付费你就克隆一份然后你可以改改完之后立刻可以看到它的效果

174
00:26:17,800 --> 00:26:45,200
然后当你一切都满意之后点击一个按钮它就能自动的发布到生态环境我觉得这个是下一代我们编程的领域的一个换代的一个东西而且这一步如果实现了的话呢另一个方向我觉得也会有很大的突破就是怎么把AI的一些能力引进进来现在人能做的事情我们看到的还是一些单元级的编码帮我们去做一些单元级的程序

175
00:26:45,200 --> 00:26:45,840
如果我刚才说那个事情都可以在一个系统里去完成的话那AI引进进来它能干的事情就更多了现在很难现在就是你有一堆的账号一堆的这个环境啊你把它都交给AI也很麻烦但如果真的能够把整条线都在一个云端的服务里面搞定那后续的想象空间就很大而他们在做的这个恰是里面的比较基础性的一个环节啊而且我用他那个在线的爱的最好的体验

176
00:27:15,200 --> 00:27:17,800
他真的反应很快干什么都很快

177
00:27:17,800 --> 00:27:21,560
就是不会那种说立动作要等半天那种感觉

178
00:27:21,560 --> 00:27:23,560
这个确实体验是不错的

179
00:27:23,560 --> 00:27:34,560
好那下一个话题啊我们来说一下就在这个礼拜之前我们政府不是出台了一个生成式人工智能的一个管理办法

180
00:27:34,560 --> 00:27:41,560
啊里面就要求这种生成式人工智能啊以及语言大模型它是要做备案的

181
00:27:41,920 --> 00:27:45,800
啊备案通过了你才能够对外提供服务

182
00:27:45,800 --> 00:27:52,120
那上周国内的第一批大概有十几个吧啊这个备案是完成了

183
00:27:52,120 --> 00:27:56,920
啊就是我们知道的几个大公司的大模型基本上都在里面

184
00:27:56,920 --> 00:28:01,520
所以大家看到上一周就一下子上架了好多的APP

185
00:28:01,520 --> 00:28:10,120
啊让大家可以直接下就直接开始玩了这里面我就玩了一个就是百度的那个

186
00:28:10,120 --> 00:28:19,080
跟我上一次在网站上面测试区别好像不是特别大反正情况还是那样这个你们应该也都试了一些吧

187
00:28:19,080 --> 00:28:23,920
对呃我试了一下等会可以稍微展开说一说我的试用体验

188
00:28:23,920 --> 00:28:25,720
呃对呀你说呀

189
00:28:25,720 --> 00:28:30,720
ok几个事情啊第一个是槽点问题槽点当然在

190
00:28:30,720 --> 00:28:39,680
就是我拍了张照片是白天拍的照片一个一个大楼的一个远景

191
00:28:39,840 --> 00:28:53,040
就是说我站在那个楼上然后往外拍其实是相当不错的城市风景完了以后呢让让百度的那个文心一言帮我分析了说这张照片拍的咋样他就说哎这是很漂亮的都市夜景

192
00:28:53,040 --> 00:29:01,880
我说你白天晚上都分不清吗这是这是一个另外呢呃比较有意思的是网上其实很快的梗图就传出来了

193
00:29:01,880 --> 00:29:09,480
嗯有有两个梗图我都测试了一下第一个梗图呢就是呃类似于就是说问

194
00:29:09,480 --> 00:29:18,320
嗯这个百度有没有什么呃干过什么坏事做干过什么坏事

195
00:29:18,320 --> 00:29:38,680
然后当然当然就没有这个没有这种问题对然后呢网上流传出来的是被称为中国谷歌的呃公司干过什么坏事网上流传的图里面就写了一堆坏事但是我在这个我自己的APP上测试没有一点都没承认过

196
00:29:38,760 --> 00:29:45,240
依然还是义正言辞地说这个嗯呃没有你不要问这种问题这个问题不好

197
00:29:45,640 --> 00:30:08,360
那另外网上的那个图片造假了还是它及时的升级了都有可能都有可能我我不能够说呃我不能够说是造假吧反正至少我现在试用下来它都滴水不漏嗯另外还有一个还是好玩的东西就是也是在网上流传的类似于就是说啊

198
00:30:08,360 --> 00:30:18,200
这个呃马马云是不是资本家然后马化腾是不是资本家以及这个李彦宏是不是资本家

199
00:30:19,240 --> 00:30:28,840
呃照网上流传的图里面呢说前面两位都是资本家最后一位是企业家呃我也我也测试了一下

200
00:30:29,400 --> 00:30:37,400
然后发现这个确实都是资本家并没有什么什么李彦宏是企业家这种说法

201
00:30:38,360 --> 00:30:50,360
这就就是说你们可以黑百度百度当然有槽点有黑点都没问题但是好像也不见得每次都都是呃通过PS来黑就没啥意思了对吧

202
00:30:51,240 --> 00:30:58,120
但是呢另外有意思的是嗯同样的问题就有一个问题我问了那个呃科大讯飞

203
00:30:59,240 --> 00:31:06,760
嗯就是嗯被称为中国谷歌的公司做过哪些恶的时候科大讯飞很有意思

204
00:31:06,920 --> 00:31:11,160
就直接说中国谷歌指的是谷歌在中国的子公司然后什么什么

205
00:31:11,400 --> 00:31:15,880
然后说了一堆嗯这个听上去还挺有意挺有道理的对

206
00:31:16,360 --> 00:31:27,720
然后就说中国在谷啊谷歌在中国的这家子公司干过什么什么问题有有什么什么被被对方要求为为美国政府当间谍什么什么的

207
00:31:28,680 --> 00:31:37,400
然后我再接着问百度做过哪些恶它也列了一堆什么什么这很很有意思啊庆祝难书可以说人人兼职哈哈哈

208
00:31:37,960 --> 00:31:57,640
就一点都没有留面子的那种就这就很有意思了就简单的试用了一下因为其实从功能上来说呃并没有太大的改善只是基于网上流传的一些梗图呢我就出于好奇心在自己的测试上面也看了看

209
00:31:57,720 --> 00:32:08,280
看看到底啥结果简单的就是说第一百度对于他的文心意言的回答确实做了一些防护

210
00:32:09,080 --> 00:32:19,000
这些防护我完全可以理解因为想在文心意言上面找毛病的人太多了防不胜防

211
00:32:19,320 --> 00:32:27,080
所以他们一定会做一些防护当然相对来说柯大讯飞就不需要做这些防护因为毕竟大家不太针对他

212
00:32:28,600 --> 00:32:49,960
但另外一方面就是嗯你防护是没有用的人家要黑你说实话也还是会持续的黑而且在网上当他在流传梗图的时候绝少有人会真的去一个一个的去求证到底是黑的还是皮埃似的还是还是真的有这样的问题

213
00:32:50,680 --> 00:32:52,520
对这就是我的一些感想

214
00:32:52,520 --> 00:32:53,480
对这个目前所有的语言大模型啊它里面都是有塞盖的这个是必须有的对只是说它做哪些怎么做的问题你看最早恰吉威基出来的时候其实大家也试出很多很多这样的塞盖嗯就很明显你特定的问题就会撞到这个墙它就会给出一个非常千篇一律的一个答复对比如说几乎所有的主观性的评价他如果不想

215
00:33:22,520 --> 00:33:52,520
答的话他都会用一套嗯就是我只是一个AI我不擅长在主观上做一个什么什么判断嗯对吧比如你问他拜登这个人怎么样的时候他都会回答这种东西这个一方面是就是政治正确在全世界都是有政治正确的界限的你不可能乱来对吧对而这个大模型本身存在着非常高的不可知的情况那你就必须要做一些塞盖把拦住因为你不知道他会怎么回答很可能带来很

216
00:33:52,520 --> 00:34:22,520
大的麻烦对这个我觉得没有什么大问题具体怎么实现这个塞盖国我觉得就有很多巧妙不同了从目前来看的话呢没有做的非常到位的还是会有一些槽点这个感觉上也比较正常还是多试试一些真的有价值的一些点当然我个人感觉比较无趣的一个点就是国内的所有这些大模型在编成这个领域都很弱而这个是我最想试的其他的很多东西反正我

217
00:34:22,520 --> 00:34:52,520
也知道它就那么回事儿短期之内我也想不出什么立刻能把它用上的地方王老师呢嗯对我说一下我的一些适用的一些体会对其实我还现在还挺重度地去使用GBT的这些这些工具在我的一些日常工作学习里面不过就几个例子对其实在做一些格式化的一些

218
00:34:52,520 --> 00:35:01,720
文本优化方面对我还是挺受用的对包括我们现在去做一些因为正好是开学了嘛

219
00:35:01,720 --> 00:35:16,200
对那开学呢其实在设计那个教学大纲对这个就是一个典型的场景对包括我们的一些除了微专业以外对我这些其实还是还有几门的一些课程

220
00:35:16,760 --> 00:35:45,200
对那我把我以前的课程大纲用加了GBT里面去做一些优化对一方面是可以提升你的语言质量第二个呢它其实还是可以给你一些比较更多的一些细节的一些点比如说我今年想增加一些新的内容的话对它有什么的它有什么一些好的建议对它列了一些对然后呢我有些东西我就直接采用了

221
00:35:45,200 --> 00:36:15,160
对第二个呢就是其实我是这学期挺想把像GBT这些工具啊用在我的课上对比如说在数据分析方面对其实最近也在探索其实我是用了除了前面用的GBT以外我我还有像百度的还有百川大魔神现在也是开放以后我也都用过对这里面的一些效果其实还是可以的对比如说去

222
00:36:15,200 --> 00:36:45,200
做一些垃圾邮件的分类对直接给一个垃圾邮件它对然后呢让它指出它的嗯类别再比如说去做一些数据的一些变化对比如说把那个嗯SSD的数据文件然后呢转换成markdown的对那在这些其实也是做的还是嗯挺不错的对还有些小的一些自动化的工具

223
00:36:45,200 --> 00:37:15,200
对因为我我们实际上现在也在做一些嗯全校的一些计算机的一些公共课对就是传统用一些excel处理的一些东西或者是一些嗯像微别呀里面的些东西对现在其实很多都是可以用一些GBT来做了嗯反正我是觉得现在像他们的这些东西发展的还挺快对虽然像刚才李老师也提到就是嗯还没有

224
00:37:15,200 --> 00:37:45,200
比较好的编程的对但我相信应该很快就会有对其实现在有一些学校其实已经在基于一些开源的在做这些领域的一些一些模型对那这块呢其实我们也是也是非常感兴趣的嗯嗯我先说这些就看那个拉玛扣的那一块啊对对能做成啥样都在看嗯所以反正我觉得现在这十几个

225
00:37:45,200 --> 00:38:15,200
正式公开亮相的向全社会提供服务的这总大叔肯定是个好事儿就算现在大家吐槽啊有很多那种槽点或者做的不太好的地方其实我觉得百度啊他关于图片那块他很强调自己所谓的多模态的那个特性就是怎么分析图片什么的那个完全不是重点那个他做的也不咋样说实话虽然已经改了一轮啊之前还不如别搞对

226
00:38:15,200 --> 00:38:45,200
真的还不如别搞就没必要这玩意也不会成为你的亮点还是老老实实把一些能出亮点地方搞一搞反而我觉得像讯飞这个呢我也经常吐槽他们啊经常吹点牛什么的但是他们走的方向我觉得还挺实用的他们已经分门别类地做了好多应用场景出来了其中就包括比如说怎么做一个PPT啊就这种它有很多应用的指引性的方向哎这个我觉得它反而比较利于它后续推出一些产品

227
00:38:45,200 --> 00:39:15,200
它也当然会有另外一个可能的问题就是它太急于在新端赚钱了比如它推出一个office小助手然后开始收你的钱这个反过来其实会影响它去优化自己的产品目前这个阶段所有大模型最需要的其实是高质量的使用就是有足够的量然后足够聚焦的一些场景去用它这个用得越多它其实迭代前进的就越快然后就看他们什么时候能够把喇嘛

228
00:39:15,200 --> 00:39:45,200
开源的一些能力能够更好地嫁接过来啊这个也是各家现在要去竞争的一个东西了那关于这个话题我们就先说到这儿啊下面我们来聊一个上周的大话题啊就是华为搞突然袭击啊推出了它的mate六零pro的这个新的手机啊这个引起了很大的反响从各个方面来看都很有一些看点这个你们是怎么探的这个事情说实话没看

229
00:39:45,200 --> 00:40:15,200
因为因为其实呃作为一个华为员工然后被人问太多次了以后就免疫了本来呢就是华为推出点新手机我还要在公司内部去了解一下因为呃这个以防别人问到问题但是后来发现这真不懂然后你要去找人问吧那个同事那些同事也未必就就说得清楚而且说实话业界所关注的很多东西都是所谓的八卦类的

230
00:40:15,200 --> 00:40:21,600
但是我在公司里其实打听不到这些八卦到后面就是如果我不买手机我就不关心华为手机

231
00:40:22,360 --> 00:40:27,240
嗯就是这种心态因为呃怎么说呢就是

232
00:40:27,740 --> 00:40:31,840
在外面的朋友看来这是值得吃的瓜

233
00:40:32,360 --> 00:40:38,760
但是在在我们内部看来就会觉得这是另外一个部门的事情

234
00:40:40,280 --> 00:40:41,320
而那个部门

235
00:40:41,780 --> 00:40:46,640
我如果没有熟人我最多就是和外面的人一样的吃瓜

236
00:40:46,900 --> 00:40:49,720
未必还吃到还未必吃得到就这种感觉

237
00:40:50,240 --> 00:40:53,560
所以还是听听看吧就是你你这边李军这边有没有

238
00:40:53,820 --> 00:40:56,880
有哪些比较有意思的消息呀什么的可以聊一聊

239
00:40:57,660 --> 00:40:58,680
我先插两句

240
00:40:58,940 --> 00:41:00,980
呵呵你说嗯

241
00:41:01,240 --> 00:41:06,880
对是这样因为我用过华为手机的对虽然我最近买的一个不是

242
00:41:07,080 --> 00:41:12,920
但是呢我前面大概两三个一直都是用的包括像三菱啊pro啊那些

243
00:41:13,440 --> 00:41:16,760
对其实总的感觉我我是觉得还是挺不错的

244
00:41:17,540 --> 00:41:20,860
而且呢包括鸿蒙的操作系统

245
00:41:21,380 --> 00:41:25,460
对那在一些方便性上特别是在方便性上

246
00:41:25,720 --> 00:41:27,260
我其实还是觉得挺好

247
00:41:27,760 --> 00:41:30,840
然后呢因为这两天朋友圈主要是刷屏了

248
00:41:31,360 --> 00:41:32,880
不光是各种

249
00:41:32,880 --> 00:41:37,740
因为华为认识的也挺多嘛除了庄老师以外嗯就是宣传片

250
00:41:38,000 --> 00:41:39,280
然后呢开箱的

251
00:41:39,780 --> 00:41:40,820
然后呢试用的

252
00:41:41,320 --> 00:41:45,940
虽然也有一些吐槽的但是呢有的是吐槽是正向的吐槽

253
00:41:46,440 --> 00:41:49,000
对特别是那个五级的网速

254
00:41:49,520 --> 00:41:54,380
对虽然没有但是呢它下载的速度特别特别快

255
00:41:54,900 --> 00:41:55,920
对吧就是类似这样的

256
00:41:56,420 --> 00:42:00,520
这总的感觉还是总总体感觉其实是挺挺正向的

257
00:42:00,780 --> 00:42:02,580
对因为里面还是

258
00:42:03,080 --> 00:42:06,660
特别是突破这种封锁技术封锁

259
00:42:07,180 --> 00:42:13,320
对可能细节可能一会李老师来给我们仔细地说一说啊

260
00:42:14,360 --> 00:42:17,160
这个事情它是突然发生的哈

261
00:42:17,420 --> 00:42:23,560
因为之前的新闻是这样的华为说它准备在九月份搞一次发布会

262
00:42:24,080 --> 00:42:28,180
然后很多人都猜测会公布这个mate六零pro

263
00:42:28,900 --> 00:42:35,040
而且上次就是第七十五期的时候我们不是有一期聊了关于国产光刻机的一些事情吗

264
00:42:35,560 --> 00:42:38,380
嗯当时我也提到了有一些传闻

265
00:42:38,880 --> 00:42:42,680
今年底国产的二十八纳米的光刻机会交付使用

266
00:42:43,440 --> 00:42:49,580
而且二十八纳米的这个光刻机它逻辑上讲它就是可以做到所谓七纳米的制成的

267
00:42:49,840 --> 00:42:54,180
只是说它的制成工艺会比较复杂需要多次曝光

268
00:42:54,440 --> 00:42:56,740
然后良品率可能会低一点

269
00:42:57,740 --> 00:43:03,840
以及据传说啊台积电也开始接我们的一些七纳米的货了

270
00:43:04,040 --> 00:43:08,040
所以这里面就很多之前有非常多的各种各样的传闻

271
00:43:09,240 --> 00:43:15,140
那么这一次呢一下子made in pro的发售是出乎大家的意料的

272
00:43:15,440 --> 00:43:19,140
那这件事情也展现了华为的一个很独特的点

273
00:43:19,540 --> 00:43:25,240
就是之前我们在某一期节目里我也提过就是在做高端的品牌这方面

274
00:43:25,540 --> 00:43:31,340
全世界现在手机这个领域啊能跟apple去拼一拼的就只有华为了

275
00:43:31,940 --> 00:43:39,040
其他所有的公司什么三星啦还有我们国家的那几只啊都差一点

276
00:43:39,340 --> 00:43:43,640
啊虽然它们销量很大做的手机型号也非常多

277
00:43:44,340 --> 00:43:49,140
但是它在高端品牌上面它的那个品牌力呀还是缺一点的

278
00:43:49,540 --> 00:43:54,840
那华为就不一样华为这次它一出手立马就引起了剧烈的反响

279
00:43:55,240 --> 00:44:04,240
啊就是从电子产品角度从供应链的角度从政治大国博弈的角度各种各样的分析马上就出来了

280
00:44:04,640 --> 00:44:12,340
它出来之后网上这一次看到最多的反而不是各种性能的测评什么的而都是拆机

281
00:44:12,940 --> 00:44:16,240
最火的视频是最早发出来的几个拆机的

282
00:44:17,040 --> 00:44:21,540
它二十九号发售然后凌晨三十号凌晨

283
00:44:21,840 --> 00:44:26,040
b站上就有一个up主发了一个完整的拆机的一个视频

284
00:44:26,640 --> 00:44:32,240
那就连夜买到之后立马就开拆啊然后就做出了他们的一系列的判断

285
00:44:32,740 --> 00:44:43,840
我当时听到这个新闻之后看到的第一波信息就是测速啊测数出来的结果呢基本上认为它在

286
00:44:44,740 --> 00:44:48,940
移动浮膜网络下它的下载速度至少是五百兆bps

287
00:44:49,940 --> 00:45:03,140
那一般来讲四季的网络它的下载速度一般就是一百多啊五百以上它最高有测到我看到八百多还有人是有一千多mbps的

288
00:45:03,540 --> 00:45:11,940
那这个速度肯定不是四季网络的速度但是呢它又很奇妙啊就所有拿到手机的人他都会发现一个很有意思的点

289
00:45:12,540 --> 00:45:22,140
就是它跟我们现在用的手机不一样的地方插上卡连上网之后它显示的那个网络信号的那个图标上面它是没有四季五季标识的

290
00:45:22,840 --> 00:45:31,140
我们现在上面都会有一个标识四季还是五季就根据连上的网络它会变的哎它这个没有它刻意的把五级的那个标识给去掉了

291
00:45:31,640 --> 00:45:37,940
就是让你搞不清楚它是什么网络但其实这个是可以验证的啊就是你连的到底是啥

292
00:45:37,940 --> 00:45:48,340
因为你四级的网络实际上打不到那个速度的还有人做了很细致的测试它专门打电话给电信说你能帮我把我的五级的那个通道间停掉吗

293
00:45:48,340 --> 00:45:59,140
电运商帮它停掉它再测就只有一百多兆了然后再打电话让它再打开啊然后再测哎呦速度又上去了所以基本上可以确定它是连到五级上面的

294
00:45:59,140 --> 00:46:02,140
拆机的视频出来之后就验证了这一点

295
00:46:02,840 --> 00:46:25,440
因为大家知道五机这个通信协议它比四机要复杂很多所以它五机的那一块baseband就是那个网络通信的那个芯片啊它的元器件的数量它的面积它的大小是比四级芯片要高很多的啊之前为什么华为就没有五级芯片可以用了呢

296
00:46:25,640 --> 00:46:42,940
华为自己是五级的专利大户啊它要造五级的芯片设计出来是完全没有任何难度的而且在全世界第一个把五级的baseband它那个通信芯片跟CPU GPU做到同一块SOC上去这件事情就是华为最早做到的

297
00:46:43,440 --> 00:46:53,540
所以它当时做不到的原因就在于五级的芯片比较大啊它要把它跟CPU和GPU集成到一块板上去的话

298
00:46:53,540 --> 00:47:23,540
那么它需要比较高级别的CPU的制程工艺而那个时候它被禁了之后啊台积电这种三星这种掌握十四纳米以下的工艺的这样的厂商都不能接它的活了所以它就做不出来了但是四机的芯片放进去呢这个要求就没有那么高所以它可以继续做所以本质就这么回事儿那现在这一又一次做到了那这个大家就立马就会问的一个问题

299
00:47:23,540 --> 00:47:53,540
就是这块新的芯片到底哪来的啊那拆机呢说明这个芯片上刻的这个文字啊是很明显的写着是海思的麒麟芯片然后是一个九千s的型号嗯现在基本上有几种猜测啊有一种就很明显不太相信有这么好的事儿的或者就是不希望有这么好的事儿的人他就猜说这其实就是最早啊二零年

300
00:47:53,540 --> 00:47:57,420
前后华为被制裁前囤的那一批芯片

301
00:47:58,140 --> 00:48:03,180
但这个肯定不是的啊这个是嗯很明确的就是从后续的一系列测试

302
00:48:03,740 --> 00:48:09,140
应该不可能是那一批囤的芯片啊它一定是新造出来的而且如果是囤的那个芯片的话

303
00:48:09,340 --> 00:48:12,780
这个时候华为没有必要这么高调的去做这么一件事情

304
00:48:13,180 --> 00:48:14,780
因为你囤的芯片会用光的

305
00:48:15,140 --> 00:48:17,740
它不是你解决问题的真正的办法

306
00:48:18,140 --> 00:48:23,020
你就这嗨一下是怎么是临终关怀什么意思啊没有这个可能性啊就是以

307
00:48:23,020 --> 00:48:26,820
我对华为这家公司的理解我觉得不会干这种事情这是第一个

308
00:48:27,660 --> 00:48:36,260
第二个呢有人说因为有人用一个专门的工具就是一个专门检测手机的硬件

309
00:48:36,260 --> 00:48:41,060
并且给出里面硬件的那些组件的数据信息的一个小工具

310
00:48:42,220 --> 00:48:47,260
它就显示这个九千s这个芯片它是一个五纳米制成的

311
00:48:47,500 --> 00:48:51,100
然后还有其他很多信息和数据包括它的主屏啊什么那些东西的

312
00:48:51,180 --> 00:48:58,780
这个呢我猜测呢是不准确的为什么哈很可能那个工具是把它识别成了麒麟九千

313
00:48:59,380 --> 00:49:02,300
因为九千s芯片太新了它不可能有数据的

314
00:49:02,700 --> 00:49:08,700
而是这个芯片的整个制作工艺现在就是个谜啊华为是有意识地在藏这里面一些细节的

315
00:49:09,100 --> 00:49:16,380
所以我认为那个工具里面不可能真的有这个数据它可能只是把它认成了以前老的就是在华为被禁之前

316
00:49:16,660 --> 00:49:24,460
华为设计的并且由台积电代工的那个九千的那个芯片把它当成那个了所以它显示五纳米因为那个芯片是五纳米工艺做的

317
00:49:25,660 --> 00:49:31,260
而这个新的芯片因为是肯定在美国人不知道的情况下做出来的

318
00:49:31,780 --> 00:49:43,580
所以它不太可能是五纳米的制成所以这个是一个悬念就到底芯片哪来的现在我们也不知道而且看得出来华为是不希望人知道啊

319
00:49:44,380 --> 00:49:59,860
所以我们也没有必要去挖这种事情但是一些合理的推测是可以的我这里有几个我认为已经比较确定的信息第一个呢它肯定是一个内含了五级通信能力的芯片

320
00:50:00,660 --> 00:50:10,380
而因为从各方面测试来看它一定是连接五级网络的啊它不可能通过四级网络做出这个速度甚至它可能比一般的五级网络还会快一点

321
00:50:11,020 --> 00:50:18,780
这个就体现华为的在通信这方面的一些实力它可能用到了一些新的技术或者是一些通信的规格

322
00:50:20,500 --> 00:50:30,060
第二它是一个什么制成这个呢就只能猜了啊但是我觉得有兴趣的话大家可以听一下我们之前七十五期聊国产光刻机的那一期

323
00:50:30,860 --> 00:50:58,580
就是我们现在国内所拥有的光刻机最高端的是目前荷兰的这个阿思摩尔ASML这个公司还卖给我们的最高级的光刻机就是二十八纳米的duv啊深紫外线的光刻机这个呢我们以前就有些存量而且目前这个公司ASML这个公司向荷兰政府申请了一个豁免

324
00:50:58,980 --> 00:51:05,580
本来从九月一号开始所有的出口都必须要审核那现在已经拿到一个豁免就是可以延续到今年年底

325
00:51:06,460 --> 00:51:28,540
就到今年年底中国向它买这些二十八纳米的duv还是可以随便买的就是它还在使劲地延续这个东西但是未来是很难讲的而且这一次华为这个事情出来之后美国人不会当没看见的他们一定会仔细去研究的啊看是哪个方向漏了啊居然它还能干这种事情

326
00:51:29,060 --> 00:51:51,060
看能不能毒死啊我现在觉得它毒死很难了但是他们肯定会仔细研究的好那这是一个我们现在手上有的可以用的而且嗯华为和中兴研究在这个二十八纳米的duv上能做出什么样的芯片极限状况能做到啥程度他们已经研究了好几年了

327
00:51:51,060 --> 00:51:51,620
啊据说是可以通过这个二十八纳米的duv能够做出类似于台积电的七纳米工艺的那样的一种制成的芯片这里我要简单跟大家解释一下这个几纳米几纳米到底啥意思在二十八纳米以下的时候实际上它具体的加工工艺和它那个产生的晶体管的那个宽度其实已经不是物理意义上那个大小了比如说三纳米五纳米它真的就是有三纳米五纳米的原件在上面

328
00:52:21,060 --> 00:52:51,060
刻出来了吗其实不是的它只是大致上相当于把你单位面积上的晶体管数目提高了多少所以这个实际上是台积电的一种话术你可以理解为就是一种型号它不是真的刻出来了三纳米五纳米甚至两纳米的那样的刻法其实不是的所以这个所谓的七纳米只能说它是能够在单位面积上放进去类似于台积电七纳米工艺那么多的晶体管

329
00:52:51,060 --> 00:53:21,060
大概是这么个意思而已所以那怎么做到这一点呢其实很多办法的这个就是华为跟中兴这边他们最近这几年在公关的东西我们相信它现在已经可以做到这一点而且这里面还有一个很有意思的细节就是用来做芯片设计的那个软件就EDA的软件这个东西其实华为是被禁了就是它不能用了世界上有大概三四个厂商做这个EDA的软件主流的就一两家

330
00:53:21,060 --> 00:53:51,060
这个华为已经不能用了所以现在海思自己设计芯片用的这个EDA是什么软件不知道有很大概率是华为自己做的这个也印证了好早以前我们给大家讲这个芯片产业的时候我曾经讲过这个观点就是我认为EDA这个软件本身研发这么个软件出来并不难难的是你怎么强制那些造芯片的车间用你的这个软件就好像你有个CD

331
00:53:51,060 --> 00:54:21,060
完了之后你要导出一些CD的数据文件这些数据文件拿到加工厂之后它直接上那个它的生产设备就直接可以把东西做出来那你这个软件本身先不说你是不是标准规范人家要愿意试啊万一把你的数据文件导进去我那个很精密的那些仪器它不认怎么办那一般人家用的好好的成熟的EDA软件怎么会给你去试这种东西

332
00:54:21,060 --> 00:54:51,060
是拜美国人所赐啊他们逼着我们去做这个事情那现在华为拿出来一个自己它的软件的话那它很可能就有一些厂愿意跟它去试这样的东西因为华为这个量体还是足够大的所以我们现在猜想啊就是他们已经搞出了一套自己的一整套的流程从EDA软件到设计整个加工的流程比如说它要做多次曝光我设计好的图纸

333
00:54:51,060 --> 00:55:21,060
它分三次曝光啊这每一次曝光分别做哪些事情里边都描述的清清楚楚了而且可以通过一系列的模拟测试让这样的方式做多次曝光产生的良品率相对比较高很肯定测了很多轮了啊所以在这种情况下的话他们可能已经把这条路走通了就是从一点软件到设计到工厂去使用这个软件方法所做出来的这个芯片使用二十八个软件

334
00:55:21,060 --> 00:55:51,060
八纳米的DOV做出了类似于台积电七纳米的这样的效果为什么说它做出这个效果呢因为它现在这个芯片的大小和它的计算能力啊以及它捆了一个五基的通信芯片进去这样一个事实然后跟既往的芯片相比较它大致上相当于两年以前的旗舰芯片那那个时候的芯片就是五到七纳米的工艺做出来的才能做成这个大小那所以我们现在合理的猜测就是这样

335
00:55:52,060 --> 00:56:01,060
然后另一个很重要的猜想就是到底谁做的很多人说是中芯做的但是我觉得从我得到的一些信息来看的话很可能不是中芯做的

336
00:56:01,060 --> 00:56:02,060
很可能是华为和中芯把这条路走通之后这个技术就已经是OK了嘛但是呢实际做这件事儿可能中芯因为毕竟数大遭风啊中芯现在是除了台积电跟三星以外中芯这最大的嘛是美国人盯我们盯得最紧的一个这个公司啊所以很可能是有另外一些公司这个也有一些传闻啊包括我们政府的拨款包括华为的投资收购

337
00:56:31,060 --> 00:56:35,260
或者甚至直接就是建立了一些这样的芯片代工厂

338
00:56:36,060 --> 00:56:40,060
然后他们使用华为中心已经摸索出来的这套公益手段

339
00:56:40,060 --> 00:56:52,060
然后采购一些相应的设备啊他们来做的这一波妹子六零普上架现在初步估计大概是几百万台就第一批卖光

340
00:56:52,060 --> 00:57:00,060
然后华为可能在这个月会有一个发布会上会具体的讲一些东西啊我猜测他可能就会有一个相对的计划

341
00:57:00,060 --> 00:57:05,060
现在大家猜测今年应该至少想销个几千万只这样的手机

342
00:57:05,060 --> 00:57:11,060
那他既然敢迈出这一步他后续的供货他的这个芯片的生产能力就必须达到这样一个水平

343
00:57:11,060 --> 00:57:13,060
否则那不就砸自己的脚嘛

344
00:57:13,060 --> 00:57:19,060
所以很可能他已经布局了一些这样的芯片代工厂因为其他的部分他都早就搞定了

345
00:57:19,060 --> 00:57:21,060
主要就是这颗芯片的问题

346
00:57:21,060 --> 00:57:25,060
那这些代工厂可能就是他具备了年产几千万这样的一个水平

347
00:57:25,060 --> 00:57:31,060
所以关于这颗芯片我们现在已知的以及我的一些个人推断大概就是这样

348
00:57:31,060 --> 00:57:36,060
这也是现在我看网上大家讨论最多的一个问题啊好这个问题搁一边

349
00:57:36,060 --> 00:57:44,060
我其实觉得这个问题现在炒得虽然热啊但其实这个手机还有另外一个非常大的一个亮点

350
00:57:44,060 --> 00:57:49,060
这一波旗舰手机里面他独有的就是卫星通信

351
00:57:49,060 --> 00:57:58,060
他这一轮用的是中国电信在运营的那一组天通的卫星一共有三颗星

352
00:57:58,060 --> 00:58:07,060
复盖了整个亚太地区还有可能到非洲就比较一带一路复盖那个部分啊就天通现在能够运营到的

353
00:58:07,060 --> 00:58:15,060
那这个卫星通信呢在以前它是一个很专门的领域比如说一些专业的冒险家登山家

354
00:58:15,060 --> 00:58:25,060
他们肯定出门要带一个专门的卫星通信的手机的一个大桩块啊很长的天线天通的这个卫星电信是有一个专门的卫星通信套餐的

355
00:58:25,060 --> 00:58:33,060
这个套餐大概是一个月两百块钱的月租那很贵啊但是你每次通信呢大概一分钟一块多钱

356
00:58:33,060 --> 00:58:42,060
但这一次华为拿出了一个普通的智能手机它支持卫星通信这个就很神奇啊就是

357
00:58:42,060 --> 00:58:51,060
你像那个马斯克的星链它是缺个小锅的一个那个锅状的小天线作为它的那个专门的地面终端

358
00:58:51,060 --> 00:59:03,060
然后用这个东西连星链然后它可以复盖周围的一定范围这个范围内大家都可以用它做WiFi的那个中心啊来使用这个卫星通信它是这种方式

359
00:59:03,060 --> 00:59:10,060
但是这一次华为就是一个普通的手机它就能连到这个通信卫星了这个怎么做到的我说实话我也不是很清楚

360
00:59:10,060 --> 00:59:20,060
这肯定这里面是有一些黑科技的而且呢这次华为做到这件事情之后啊甚至跟中电信专门谈了一个deal

361
00:59:20,060 --> 00:59:31,060
就是中电信为这个手机推出了一个全新的套餐这个套餐就是专门针对这种普通的智能手机有卫星通信这种功能来设计的

362
00:59:31,060 --> 00:59:55,060
它就是月租就很低一个月十块钱相当于一年你掏一百二买一个保险你平时不会用的但是万一你哪一次在什么地方你就是连不上服务网络了但是你又很需要快速连接上网络去跟人通信比如求救之类的那这个时候你就是一年一百二块钱的一个保险费而已

363
00:59:55,060 --> 01:00:25,060
那你你这个时候通信的话会贵一些一分钟十块钱这样子啊那你也不需要嘛你就几分钟几十块钱就行了你救命而已所以这种全新的卫星通信的模式就是从魏思六零普奥开始这个从实用意义上甚至我觉得还大于刚才我们说的麒麟的九千s的芯片那个事情的意义更大的是一种大国博弈下的科技战的一个里程碑就是说哎

364
01:00:25,060 --> 01:00:55,060
真的如果刚才所推测那样的话就是我们基本上已经把七纳米以上的工艺就搞定了以后我们就可以源不断生产这种东西了而且基本上够我们日常的所有能想到的应用了这个历史意义很非凡但对普通用户来讲呢其实没啥说实话但是卫星通信这个设计不一样了这个对所有人都可能是有用的而且这个手机的出现它甚至催生了运营商会开始进一步的

365
01:00:55,060 --> 01:01:25,060
投资卫星通信大家知道我们国家的通信啊在五机这个时代是实现了超越的我们三机是落后的四机勉强追平五机是领先全球了那领先全球情况下美国人就很不爽嘛他们就说我们跳过五机我们直接搞六机那六机是什么呢其实六机里面很重要的一个环节就是卫星通信地面的风光网络跟天际的卫星网络之间的融合提供更好的复盖更好的速度

366
01:01:25,060 --> 01:01:55,060
这个是六机的很重要的特色所以我们可以理解为媒体六零普奥所携带的这个卫星通信的这样一个功能啊实际上是开启了未来向六机的一个怎么说呢就是鸣枪了那就是起跑了啊跑在了最开始的位置这个意义可能会更加重大在某种意义上那最后一个就是很多人在猜为什么要搞突然袭击啊这个倒是看到一点笑说法

367
01:01:55,060 --> 01:02:25,060
它发售的当天下午有欧破的一个发布会啊欧破表示很无辜躺枪啊苹果也是下周会开发布会这都被华为提前就占了一个便宜啊这个呢有几个可能性我现在看到的有几种可能性第一个就大家传得最广的啊就是因为正好美国的这个商务部长也是对华科技站的主要的操刀的部门啊主要操作人不是他是他的副手

368
01:02:25,060 --> 01:02:55,060
但是是他这个部门那么在他来访的时候哎用这么一个事情去告诉你说哎你封不住我我现在已经跳出来了打他的脸啊这个呢以前就有先例就是我在我们听众群里我也讲了这个故事就是为二零一一年美国当时的国防部长来访华的时候我们做了歼二零的首次试飞这个事后来是一个罗生门啦

369
01:02:55,060 --> 01:03:25,060
就是我们这边坚持说这是老早就安排好的我们的军工的这样的装备什么都是有自己计划的哪会管你的时间啊都是这样说的但是这位美国的国防部长是不太信啊他非常的郁闷他非常的不爽以至于他后来写了个自传自传就写了这个是对我个人的侮辱哈哼哼于怀那很多人把这个故事想起来了就开始跟这个事类比这可能性有没有呢我觉得有但是真不是特别的

370
01:03:25,060 --> 01:03:55,060
有必要说实话就是肯定不会只为了这个我个人观点啊有这种因素但肯定不会只为了这个啊当然也有进一步的阴谋论比如我就设想是不是现在有可能美国有一些公司想偷偷的或者甚至已经是准备回归我们这边比如像上次我说的啊台积电就准备重新开始接我们的单了我们已经努力到这个阶段了你再来回过头来一清消不是让我们前功尽弃吗

371
01:03:55,060 --> 01:04:25,060
我个人的脸让你们更加的跳脚啊更加的严厉的管制使这些想回来清消的公司都没法成功这样我们国内的可以继续发展这就是阴谋论啊有没有这个可能性呢你不能说完全没有但是说实话真的没有那么容易了另外的一些可能性比如说在这个销售之后的第二天八月三十号华为就公布了它今年上半年的财报这个财报是非常非常亮眼的啊它销售额增长了百分之几

372
01:04:25,060 --> 01:04:55,060
利润增长了一倍多非常好的一个上半年的业绩而且在这个半年报里面也明确讲了说下半年五级手机会开始继续销售会大幅的提振华为手机的销量那么这个当然也可能是配合这个年报但这个呢我觉得也不是特别的必要为什么因为华为不是一家上市公司它对于自己的市值维护没有那么高的需求它是一家私营公司

373
01:04:55,060 --> 01:05:25,060
说实话更多的是华为内部的员工啊持股者们看会比较关注其他的跟它也没什么特别大的关系所以这个到底原因是啥这个说实话我觉得很难猜啊非常非常难猜但至少有一点就是它敢于现在去突然搞这么一次运作而这肯定不是一个自然的也不是一个早就安排好的是突然做出的决定啊那么这个突然做出的决定肯定是背后它的逻辑的

374
01:05:25,060 --> 01:05:55,060
几个主要的点主要是这些你们有什么想法呃我我可以补充一个材料正好前段时间呃有人联系我们开元社就是在给我们开元社公众号发私信然后呢说他们是新网集团的啊中国新网对新网集团然后说他们想做开元然后呢就我说这这么大个集团这么厉害的找我们吗

375
01:05:55,060 --> 01:05:57,460
随便聊了聊大概了解下情况

376
01:05:57,860 --> 01:06:05,500
那大概的意思就是说他们面向这个为新的操作系统也想做开元

377
01:06:06,460 --> 01:06:10,740
啊所以所以我还是觉得很厉害啊他们想得这么远

378
01:06:10,900 --> 01:06:16,060
虽然他们觉得呃不知道该怎么样做开元的这个社区啊这种事情

379
01:06:16,300 --> 01:06:19,460
但是但是就是说肯定有个东西要开元了

380
01:06:19,740 --> 01:06:22,740
而且可能是一个未来非常厉害的一个

381
01:06:23,380 --> 01:06:30,180
呃基础性的操作系统是以打算以开元的方式来做这个我觉得

382
01:06:31,140 --> 01:06:44,940
还是很振奋的觉得很期待你如果以后能够跟他们呃有有些合作啊就是帮着他们一起来做一些呃开元相关的事情我还是非常期待嗯

383
01:06:45,420 --> 01:06:50,180
因为你刚才在说到这个呃六季和这个

384
01:06:50,860 --> 01:07:01,460
卫星通讯有关然后我就联想到就说你看它不仅仅是考虑到卫星的布局而且已经开始考虑以开元的方式来布局了嗯这个还是不错的

385
01:07:02,380 --> 01:07:09,380
嗯这个有可能我不太懂啊就是因为具体现在卫星通信这个做啥程度了我我已经不太跟得上了

386
01:07:09,660 --> 01:07:16,180
但是我猜想啊就是可能有点类似于早期的通信的设备比如西斯库那些路由器啊交换机啊

387
01:07:16,460 --> 01:07:18,260
它里面其实是有自己一套操作系统的

388
01:07:18,740 --> 01:07:22,020
然后那个操作系统的话呢它会涉及到一些规范

389
01:07:23,140 --> 01:07:30,740
就你对外联络彼此之间在比较底层啊不是我们平常考考虑的网络层应用层的那些协议

390
01:07:31,020 --> 01:07:38,420
而是更底层的链路以及以下的那些层的一些通信的方式它可能会跟现在我们地面基站会不太一样

391
01:07:38,940 --> 01:07:45,740
嗯所以它一开始如果这个操作系统就开元的话可能有助于它去抢占跟这个有关的一系列规范

392
01:07:46,100 --> 01:07:54,060
嗯对的而且还有就是他们也想做就是基于卫星通讯下的开放生态

393
01:07:54,860 --> 01:08:03,140
嗯就是卫星上能玩的什么应用啊对对当然现在已经知道有一个很出名的就是对表的那个服务啊

394
01:08:03,340 --> 01:08:08,700
嗯啊计时的那个服务还有比如说北斗是有那个短消息的

395
01:08:09,380 --> 01:08:13,780
就是完全不依赖于任何运营商直接在北斗那个网络里面完成了短消息

396
01:08:14,780 --> 01:08:18,980
这个在就直说就是在军事上面有很多应用是

397
01:08:19,660 --> 01:08:23,180
另外我还看到一个挺有意思的一个帖子啊就是

398
01:08:23,980 --> 01:08:34,660
可能是在外卖还是什么平台上面有一个呃折库就是债口那个原来欧泽的那个芯片公司不是解散了吗

399
01:08:34,820 --> 01:08:41,060
嗯有一个折库的前员工写了一句话说啊看到这个美六零普奥的发售

400
01:08:41,540 --> 01:08:44,340
多少还是有点心有不甘的感觉

401
01:08:46,700 --> 01:08:57,220
嗯就是他们做了一半最后没做下去了海思其实在被制裁的那个时候二零年啊开始被制裁的时候也非常困难

402
01:08:58,060 --> 01:09:07,260
首先他的芯片设计出来没有人接单去做了其次他平时用的工具比如像刚才提到的一堆软件这些东西都没法用了

403
01:09:08,140 --> 01:09:15,660
而且那个时候也传出来就是说海思团队就解散了或者怎么样了就淡出了大家很长时间没有听到他们的消息

404
01:09:16,180 --> 01:09:26,980
但现在看上去就很确定的可以知道就是他们其实没有解散啊可能有一些优化吧但是总体部分主体部分其实是没有动的而且在持续投入

405
01:09:27,340 --> 01:09:36,660
而且肯定他们就开始往下延展了以前他们只管设计那被制裁的时候他们肯定开始甚至要到前线去

406
01:09:37,260 --> 01:09:41,580
建工厂指导那些工厂啊然后怎么跟他们磨合

407
01:09:42,580 --> 01:09:49,860
所以过去三年到底他们发生了什么这个我们外界不确切知道以后如果有机会他们携带东西出来应该会蛮有意思的

408
01:09:50,540 --> 01:10:02,860
那反观像欧普这边的话呢虽然没有明确的证据啊但是我比较倾向于就是美国人加重对芯片的管制之后

409
01:10:03,620 --> 01:10:12,780
因为欧普的老板现在呆在美国啊上面大老板他可能比较怕这件事情给他惹事儿吧所以比较坚决就把这事情砍掉了

410
01:10:13,300 --> 01:10:24,620
所以怎么说呢就是立场决定命运王老师有什么要补充吗对我没有太多我有啥呢就是因为我们也和像上飞

411
01:10:25,220 --> 01:10:33,460
还有我们前面我记得有期节目也聊过卫星里面的一些设立软件有一些合作

412
01:10:34,180 --> 01:10:48,420
就是感觉现在国内的这样的一些都在去做这种嗯创新包括像这种卡脖子的这种突破而且呢也都取得了很好的一些成果

413
01:10:48,820 --> 01:10:56,420
我记得我前面所提到的像他们用像朱利亚的语言对对这个和我们今天的对变成也是有关系的

414
01:10:56,980 --> 01:11:18,340
对就是都是开始用这些方法而且呢开始形成了一些相互之间的这种连接对因为像我知道的其实都都都有几个相关的而且他们都是有一些嗯互相的一些合作包括政府包括像上海市都有一些嗯政策上的一些支持和辅助

415
01:11:18,980 --> 01:11:38,340
对我觉得还是非常鼓舞人心的啊嗯二零二零年的时候有一个粗的估算就是国家选了有几个领域说我们被卡脖子或者可能被卡脖对我们很严重的有三十五个课题

416
01:11:39,140 --> 01:12:06,900
然后最近有一个报道就说这里面大概有二十几个已经基本上突破了啊三年时间很有成效当然这个选的都不是那种很基础很怎么样都是一线工业界的就是直接会影响我们的国际民生的这种嗯就直接会让我们的工业体系受到影响的但是这个也相当不错了我觉得就是这个片子再次证明了我们之前说的那个结论吧

417
01:12:06,900 --> 01:12:14,060
就像中国这种大国它的市场足够大然后它的研发能力也足够强你光靠卡脖子是肯定卡不住的

418
01:12:14,820 --> 01:12:33,060
那最后说一句就是我看我们天狗群里面也有一些小伙伴在犹豫要不要去买这个妹子六英普洱这个我给一个大致的我个人的建议啊这个手机的历史意义非凡啊但是它的实用性呢可能不是每个普通人都用得着的

419
01:12:34,020 --> 01:12:45,300
它就跟华为历史上的旗舰机是差不多的水平然后因为它这一次采用了完全国产化的芯片所以它性能上其实有所下降的

420
01:12:46,100 --> 01:13:01,620
也就是它比现在我们比如我今年换了一部手机啊中兴的这个纽比亚它就是用的高通的最新的那个芯片比这一代的芯片性能上是要略差一些的大概差距一到两年吧

421
01:13:01,620 --> 01:13:06,980
那一到两年的手机芯片的差距大概性能上百分之二十到三十就这么一个情况

422
01:13:07,340 --> 01:13:17,580
然后因为这个芯片是自研的尤其它的工艺可能是全新的所以它的兼容性尤其是比如一些游戏的兼容性上面它肯定要做些工作的

423
01:13:18,100 --> 01:13:35,780
这个是纯软件可以搞定的事情但是目前肯定做得不可能完美我看已经有报道说了玩一些流行的嗯手机游戏会出现贴图错误啊什么之类的这种都是后续可以通过软件升级去解决的问题但是目前肯定它不会做那么完美这是它

424
01:13:36,100 --> 01:13:53,340
因为是一个里程碑式的芯片所以嗯这些问题一定会有的如果你只是追求一个好用的普通的手机其实我觉得你没有必要考虑这个除非就是说你不差钱你也不是很在乎这个短期内啊软件责任方面有点小问题

425
01:13:54,300 --> 01:14:05,740
那你可以冲着它这个历史性去收藏一部这个我觉得没有问题但是如果你只看实用价值也不是有那么多闲钱的话我觉得其实没有必要去考虑这部机器

426
01:14:05,780 --> 01:14:35,780
那另一个类人很适合的就是你如果挺需要那个卫星通讯的话你想尝尝鲜那也值得考虑但是我可以讲你也不用着急因为这个卫星通讯这个东西啊开了头之后接下来一定从明年开始就是标配我跟你讲呵呵就是我们中国现在做手机的这波厂商的能力基本上就一年是最多最多一年的时间否则就基本上都会追平的而且接下来除了电信以外

427
01:14:35,780 --> 01:15:05,780
联通和移动肯定也会上自己的卫星系统然后刚才老庄提到的我们的卫星通信的这个公司他们也会加快布局就是以后会形成一个呃现在中国已经通过了一个方案在未来的五到七年的时间里面要打大概两万多颗卫星吧我忘了具体数字了反正就是几万这个数量级哇这个有点数量有点吓人啊

428
01:15:05,780 --> 01:15:35,780
比星链的数量要少一些色比星链计划的数量还是少一些但是我们这个是后发优势啊嗯就这几万颗足够我们用了它是低轨卫星基本上可以复盖全球的通信然后这一位打上去之后它就是由我们会成立一两家专门做卫星的运营的公司然后跟三家运营商配合怎么把这个天机跟地面的风和网络揉合起来这个是已经在路上了它已经不是一个规划了已经是一个具体计划了

429
01:15:35,780 --> 01:16:05,780
如果你对卫星通信很有兴趣或者很有需求那你可以考虑但是如果你不急的话你等一等明年的最迟后年会成为标配就如果要买这个机器啊这是我给的一个建议ok我们最后来聊的一个话题是关于编程的ide环境啊因为最近有一些看标题非常吓人的新闻出现了引起了我们的兴趣这个请我们老庄来说一说哎呀其实就是标题党呗

430
01:16:05,780 --> 01:16:15,580
呃先是osc开源社区只是开源中国吗标题叫做宇宙第一ide放弃了麦克

431
01:16:15,580 --> 01:16:21,620
哈哈哈嗯好吧其实讲的就是visual studio for mac

432
01:16:21,620 --> 01:16:27,220
从二零二四年八月三十一日起将不会再获得任何支持

433
01:16:27,220 --> 01:16:35,740
其实当时我就在群里面跟李俊和王老师讨论嘛当时就是说哎这东西其实没有啥呀

434
01:16:35,740 --> 01:16:39,740
因为大多数在麦克上的开发者都不用visual studio的

435
01:16:39,740 --> 01:16:56,180
对下面到了昨天西斯蒂恩又发了另外一个标题叫做麦克痛失宇宙第一ide明年退役还有一个小标题微软给出了三种替代方案

436
01:16:56,180 --> 01:17:04,740
嗯嗯怎么说呢就我我其实还是很佩服标题党的嗯就是这种为了让你点进去不

437
01:17:04,740 --> 01:17:14,340
不惜一切代价地想办法想就在就其实微信公众号它留给你的创作空间很很小的

438
01:17:14,340 --> 01:17:23,740
嗯就是一个大标题加一个小标题再加一个题图就是三样东西你就你就排列组合然后想办法想招

439
01:17:23,740 --> 01:17:27,940
然后怎么把人骗进来对要提高这个阅读量

440
01:17:28,540 --> 01:17:39,140
所以编辑为了这个估计是每天都得绞尽脑汁啊再次向他们表示钦佩啊你们不容易你们又做到了这个再一次的让我们震惊了

441
01:17:39,140 --> 01:17:53,740
震惊体又一次立功了就这种感觉嗯但其实其实不值得多说嘛因为因为事实上这种标题党它呃并没有真的呃给大家太多的信息

442
01:17:54,740 --> 01:18:07,140
说实话这也不是什么大事对吧就像刚才说的在在这个爱滴的领域在这个不同的这个操作系统其实不同的爱滴有不同的市场占有率

443
01:18:07,140 --> 01:18:13,740
呃那个所谓的宇宙第一的爱滴并不是在全平台在所有操作系统上面的占有率都是第一的

444
01:18:13,740 --> 01:18:23,140
所以我甚至在这个事之前我都不知道微轴 Studio 有这么个名号我以前真没听过这个我还真知道是的这个我还真知道

445
01:18:23,140 --> 01:18:49,940
这个是一个很很经典的梗了就是人家人家编辑用这个标题一定是是不是乱用的不是自己编的都是跟梗有关的嗯所以但在我们这个圈子里我真的很少我从来没听到人说这个你像原来老赵他们用微轴使用的比较多的对他们哪敢在我面前吹这个呀他如果吹宇宙第一爱滴一的话肯定要被喷死

446
01:18:50,340 --> 01:19:19,540
其实当年当年还是那个戴菲和这个呃微轴 Studio还在激烈拼杀的时候嗯那个时候还没有微轴 Studio那个时候是什么微轴 Basic微轴 C++这些东西嗯后来有某个版本才把它整合起来叫微轴 Studio对嗯就就就是从这个演进的历程来说其实其实当年确实有两波粉丝对吧

447
01:19:19,540 --> 01:19:49,540
一波粉丝是微轴 Studio的粉丝另外一波是这个戴菲以及相关的这个C++ Build的粉丝对对对就是博兰的跟微轴和打架的时候对对那个时候确实还是还是互喷过一段时间爱滴一大战对所以我才提议说咱们聊一聊咱们各自用过的呃爱滴一以及对于爱滴一的一些看法嗯

448
01:19:49,540 --> 01:20:19,540
提到没啥意思对那个还不如聊点有益的嗯对对我个人的体会啊我其实写程序是从爱滴一开始然后最后逐步的又离开了爱滴一开始用一些更轻量级的编辑器然后最近这些年似乎没有真正意义上的纯编辑器了已经好像所有东西都是爱滴一化了只有重一点和轻一点的差异

449
01:20:19,540 --> 01:20:49,540
我经历过这么一个过程我的感觉是这样啊就是因为我们国家写程序这件事情相对起步晚一些嘛所以我们国家的程序员基本上最早一代就是我们这批人那我们这批人的话实际上跳过了美国最早期的unix的那一步我们开始写程序就是DOS有一段时间比较短然后就直接是Windows了嗯对大部分人都是这样的

450
01:20:49,540 --> 01:21:19,540
那DOS下面我接触的第一个东西就是特洛帕斯卡布兰的公司的经典之作嗯还有特洛西也是那个时候出来的对特洛帕斯卡特洛西然后后面特洛西加加嗯我们就是这一套东西写的然后这套东西呢它是在DOS下面的通过自服性的UI做出来的一个完整的环境所以我们当时都挺习惯的是这套东西

451
01:21:19,540 --> 01:21:49,540
那这些IDE就是进去创建一个工程然后工程对应到目录然后有一些文件然后最大的特色就是它编辑然后运行然后调试都是在一个环境里做的这也是IDE这个词啊integrated development environment就是集成化开发环境的含义所在进展到Windows之后显然就更强大了嘛因为图形界面更强大比DOS下面那个自服性的图形要更加牛一些那个时候就基本上

452
01:21:49,540 --> 01:21:54,220
出现了几派我自己用过的实际上有四公司的东西

453
01:21:54,220 --> 01:21:59,340
那微软的就是vizzo basic然后vizzo cia加然后后面的vizzo studio这条线

454
01:21:59,340 --> 01:22:08,020
本来的公司的就是Delphi啊什么cia加builder还有jbuilder家瓦的哈这个在这一系列它都差不多

455
01:22:08,020 --> 01:22:13,620
每个公司都有自己的特点基本上UI啊然后那个整个使用的风格是比较接近的

456
01:22:13,620 --> 01:22:17,220
然后我还用过另外两个很特别的

457
01:22:17,220 --> 01:22:22,100
因为我工作以后主要的工作一段时间都是加瓦嘛

458
01:22:22,100 --> 01:22:30,020
然后那个时候加瓦的IDE就挺多的有一家公司叫Symantec做抗病毒软件的

459
01:22:30,020 --> 01:22:39,060
然后它都出过一个加瓦的IDE叫Symantec CAVE咖啡啊

460
01:22:39,060 --> 01:22:45,620
我甚至用过那个那个很长一段时间比博兰德的接builder做得好

461
01:22:45,700 --> 01:22:53,140
啊但是有很多问题就用不下去然后还有就是三公司三公司出过好几个加瓦的IDE

462
01:22:53,140 --> 01:23:00,980
要说使用体验最好的应该还是Delphi可视化速度很快所有的功能速度很快可视化做得非常好

463
01:23:00,980 --> 01:23:06,100
可惜就是后面没有继承者啦大家现在都做不到那个程度了

464
01:23:06,100 --> 01:23:11,380
然后后面我开始用Mac之后呢很长一段时间我就用它的textmate

465
01:23:11,460 --> 01:23:32,180
那textmate它是个编辑器但是它有很好的语法高亮有很好的一些辅助的功能啊包括比如说快速插入一些代码片段啊类似这样的很智能化的一些辅助功能用得很爽当他要使用一些比如说编译运行甚至调试性的工作怎么办呢

466
01:23:32,180 --> 01:23:38,820
那你就得跟命令行这些工具结合起来那这个正好是Mac下面比较能做到的一件事情

467
01:23:38,820 --> 01:23:52,020
啊这个时候我才真的很深度地把早期我们跳过的Unix那一代的东西仔仔细细地过了一遍什么GCC啊GDB啊这样一些工具会能够玩起来

468
01:23:52,020 --> 01:24:00,020
但这个时间并不长因为很快Windows Studio Code这样的工具起来之后极大地强化了这些程序编辑器的能力

469
01:24:00,020 --> 01:24:07,860
我记得早期我们区分一个写程序的工具到底是IDE还是普通的编辑器

470
01:24:07,860 --> 01:24:31,060
一个标志性的差异就是它有没有断点和单步跟踪的能力嗯对的是吧对就假设它能够标断点能够运运行然后加载之后停在断点然后可以步进单步地去执行程序那这个就是很明显是debug的能力嘛那这个东西一般的编辑器就没有那如果有这个能力我就认为它是IDE

471
01:24:31,060 --> 01:24:31,100
那现在按这个标准来看的话我觉得基本上纯编辑器就很少很少了啊可能就是什么taxmate啊sublime啊那几个还算其他大线主流用的像Windows Studio Code啊啊Emacs啊VRM啊JetBrains的那那一套东西其实也都是IDE的这种级别了反正我的经验大概是这样嗯其实我想就是说从这个IDE来说可以我们可以分代嘛就是第一代就是所谓的字符界面

472
01:25:01,060 --> 01:25:10,900
的IDE第二代就是普通的图形界面的IDE然后到了第三代其实印象最深的是插件出来

473
01:25:10,900 --> 01:25:26,500
嗯就是各种各样的一克利姆斯我觉得是一克利姆斯对一克利姆斯那一代是特别突出的对化时代的就在此之前感觉IDE就是IDE这家厂出来的就是他们家的其他的就没了但是从一克利姆斯开始它有插件

474
01:25:27,020 --> 01:25:54,900
对再下一代其实我我认为是IDE也要联网了就是就是它的很多功能是在网上的嗯其实最开始也是从一克利姆斯开始的就比如说最简单的联网功能就是你要升级你的插件定期要升级过段时间还要update一下对但是这个不够其实后面的话呢就发现这个最新的现在其实最新的是copilot

475
01:25:55,820 --> 01:26:04,740
它不仅是需要联网而且它需要连连接的是一个远端的特别厉害的这个AI的终端对它来帮你做很多的事情

476
01:26:05,420 --> 01:26:20,540
嗯这个一代一代的IDE的发展在但是为什么我们一直会就我很早就听到VISA studio是宇宙第一的这个IDE这个说法其实是因为呃保揽的被干掉以后

477
01:26:21,420 --> 01:26:30,660
我其实已经默认这个世界上已经没有能够跟微软竞争的IDE了虽然呃这个其他的厂商还一直在但是但是都差得远

478
01:26:31,420 --> 01:26:42,980
在后面VS code在出来之后就发现这个这个世界已经没有其他厂商的生存空间了不仅仅是在这个商业的IDE领域哪怕是开源的IDE

479
01:26:43,380 --> 01:26:49,220
而且后面这个呃VISA studio还出了这个社区版就完全就是免费的

480
01:26:49,820 --> 01:26:54,460
所以很多人用这个社区版已经足足够够的可以开发很多东西了

481
01:26:55,180 --> 01:27:05,540
那所以所有的售价这件事情已经不存在了花钱都不需要花钱就可以用到一个非常非常可用的一个一个IDE而且嗯

482
01:27:06,340 --> 01:27:13,100
其实我很喜欢VISA studio因为它还支持很多种不同的编程方式不同的编程语言它它都可以搞

483
01:27:13,700 --> 01:27:18,180
说说说实话它确实是已经是一个在IDE领域的极大承者

484
01:27:18,820 --> 01:27:21,860
然后然后在继续发展到今天

485
01:27:22,780 --> 01:27:28,660
所以所以我我很早就知道这个说法但是其实现在有了这个copilot之后

486
01:27:29,300 --> 01:27:34,500
呃我我认为呃新的竞争对手说不定就从这边会出来

487
01:27:35,420 --> 01:27:42,780
因为呃基于IDE的一个集成开发环境这件事情重新被打开了想象空间

488
01:27:43,780 --> 01:27:48,060
原本原本就是我一个人坐在一台电脑前面闷头写我的代码

489
01:27:48,380 --> 01:27:53,140
这是一个呃最常见的程序员工作状态就是埋头搬砖的状态

490
01:27:53,620 --> 01:28:01,180
但是一旦我们的IDE是联网的而且连接的是一个智能的云上的一个庞大的一个知识库的时候

491
01:28:01,660 --> 01:28:09,260
其实我并不是一个关在小房间里面干活的人我是跟整个世界联通的这个时候所有的事情都有可能发生

492
01:28:10,660 --> 01:28:16,700
嗯所有的想象空间比如说大家一起联网写代码或者是我写代码别人帮我review

493
01:28:17,260 --> 01:28:23,820
甚至我写着写着别人插一点东西进来把代码打在我的屏幕上都是有可能的

494
01:28:25,180 --> 01:28:31,220
所以呃我觉得未来还是挺挺可以期待的那种下一代的IDE的感觉

495
01:28:32,100 --> 01:28:34,940
当然今天前面还说到一个IDE是web IDE

496
01:28:35,700 --> 01:28:43,540
有了有了这个联网这件事情以后所谓的桌面IDE和web IDE的界限会越来越模糊

497
01:28:44,540 --> 01:28:48,820
因为反正你都得联网你反正都需要借助后端的很多能力

498
01:28:49,500 --> 01:28:56,180
而且最好就是直接部署到云上就从devops的角度来说的话尽快部署这个可能是最好的

499
01:28:56,540 --> 01:29:03,580
那这个时候呃桌面和外部的区别也会逐渐的模糊化我我感觉的趋势大概是这样

500
01:29:04,660 --> 01:29:12,980
嗯这个联网还不仅仅是像co-pilot这种啊就是因为像吉他这样的工具的

501
01:29:12,980 --> 01:29:21,380
或者服务的成熟其实编程从某个时间段开始随着git这样东西的成熟

502
01:29:21,380 --> 01:29:26,260
大家已经习惯了本地的代码库和远端的它就会建立一个联系

503
01:29:26,260 --> 01:29:32,660
嗯然后接下来还会有一些工具它会更强调就是social coding的这个部分

504
01:29:32,660 --> 01:29:37,260
对比如说一边写代码一边去做一些code review

505
01:29:37,260 --> 01:29:41,580
然后这code review可以自动的push到相关的人那里去

506
01:29:41,980 --> 01:29:46,180
嗯然后甚至还可以就这个code review去做一些交流讨论

507
01:29:46,180 --> 01:29:53,060
前不久不是有一个我忘了是叫啥呀它就很强调在编程当中的实时沟通

508
01:29:53,060 --> 01:29:57,020
啊反正就是这一类的东西我觉得也会开始产生

509
01:29:57,020 --> 01:30:04,860
爱滴易的接下来开发我觉得一个是会尽量地在本地端越来越轻降低门槛

510
01:30:04,860 --> 01:30:09,260
啊你不需要花很多时间去部署本地的环境你可以很快地进入到状态

511
01:30:09,580 --> 01:30:16,180
然后接下来就是协同怎么在线上跟其他的人甚至给一些AI的工具去协同

512
01:30:16,860 --> 01:30:19,220
这个应该是我觉得接下来发展的一个重点

513
01:30:19,220 --> 01:30:24,300
如果真往这方向走的话我觉得那还是微软的领地呀基本上别人很难跟它争啊

514
01:30:24,300 --> 01:30:28,060
依然依然是微软是王者呀这个没办法

515
01:30:28,060 --> 01:30:32,940
它微度私有code的成功我原来在好早以前啊在支付上面还回答过一个问题

516
01:30:32,940 --> 01:30:39,140
就是为什么微度私有code会会成功那时候它还没有现在这么牛逼我当时已经说它就基本上会不败了

517
01:30:39,460 --> 01:30:48,420
其实微软计划里面很多东西是打了基础的比如语言服务器的协议这个其实是微软计划最早搞出来的

518
01:30:48,420 --> 01:31:02,940
它把它收拾了一下开放然后扔到微软计划上去还有那个intellisense就是智能化的提示信息这个也是最早微软计划做得非常好的

519
01:31:02,940 --> 01:31:09,100
当时它打败德尔菲除了公司实力以外这个方面是很大的一个功能上的优势

520
01:31:09,100 --> 01:31:15,700
这个微度私有code也是直接拿过来用了所以它一开始就有很好的体验这些都是它长期积累的啦

521
01:31:15,700 --> 01:31:24,420
然后像copilot这种东西嗯它显然也就布局了很长时间收购github投资openai的codex这些

522
01:31:24,420 --> 01:31:31,820
它最早投openai就是看中这个codex后来才发现哎袁大梦现在这么厉害我再追加一笔是这么来的

523
01:31:31,820 --> 01:31:36,540
所以我觉得这个领域恐怕也没人能跟它打了

524
01:31:37,540 --> 01:32:05,940
你你们刚才说的大部分的爱滴其实我都用过从巴斯扣对吧到可视化对那个时候像德菲那就是爱滴里面的王对我记得我们当时几乎统一了做秘识系统的这种标准化的工具全部都是用用这个做的对对然后呢市面上的这些书啊对我觉得特别热

525
01:32:05,940 --> 01:32:33,700
因为它确实提高了很大的一些生产效率特别是后端的数据库去做一些连接嗯对然后呢外部这一块呢其实我也我也是很有体会的对就是把爱滴这件事情放到云端去对曾经其实是有两类声音的一类声音是就是真正的开发者不会去用云端的这一块的爱滴的对因为他们非常注重企业

526
01:32:34,340 --> 01:33:02,980
对因为这种细细微的这种体验是很能够影响他们的一些生产力的对但是呢这这个其实现在我们基本上也可以看到逐渐地就被想社交化这种协作化对这种便利性对因为我们以前做那个在线视讯平台嘛对其实就是想着办法去把这种在线变成环境给它融气化

527
01:33:02,980 --> 01:33:32,060
然后在云端去去做这种呃开箱即用的这样一些方式对其实最这样的一些开源软件其实也都还总的来说还是挺成熟的对那现在特别是随着git的这种模式还有开源对那再加上刚才老庄也提到的这种嗯copilot的这种呃智能化的工具对这个趋势肯定是不可去不可去阻挡的

528
01:33:32,060 --> 01:33:49,260
而且呢我们曾经去分析过那个嗯github上面的权益数据嘛对那当时第一名就是VS code对因为它的整个生态做得非常好各种各样的一些插件和几乎所有的技术领域都有连接

529
01:33:49,620 --> 01:34:11,980
对使得它我们有一个指标嘛就是open rank使它使得它当时的这种open rank的值是最高对一看就是嗯花了大量的力气对还有长期的这种积累才能够做得出来的而且很难被其他的竞争对手所撼动了嗯我我也是挺有感触的啊

530
01:34:12,980 --> 01:34:31,620
我觉得web爱的应该以后会越来越好我原来就是觉得本地的一定是不可替代的但最近这几年我的观点在发生变化因为web上的这个体验已经越来越好了就是很可能未来可以做到一点都不比你本地的差嗯是的是的

531
01:34:31,620 --> 01:34:45,620
OK看看还有什么其他要补充的吗嗯没有了没有了OK那我们今天的节目就到这里啊谢谢大家嗯好拜拜好谢谢拜拜

