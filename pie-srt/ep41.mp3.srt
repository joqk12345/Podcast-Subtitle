0
0:00:00.000 --> 0:00:01.400
各位朋友大家好

1
0:00:01.400 --> 0:00:03.800
欢迎来到后互联网时代的乱谈

2
0:00:03.800 --> 0:00:07.400
今天我们是正式的这个是第41期

3
0:00:07.400 --> 0:00:10.200
但是算上各种翻案篇的话正好是第50期

4
0:00:10.200 --> 0:00:12.900
所以这个也算一个小里程碑

5
0:00:12.900 --> 0:00:14.400
不容易

6
0:00:14.400 --> 0:00:18.700
好 那今天我们聊点什么呢

7
0:00:18.700 --> 0:00:21.700
这个首先是昨天的一个大事

8
0:00:21.700 --> 0:00:25.800
果然我们说艾伦·马斯克马老板这个是不甘寂寞

9
0:00:25.800 --> 0:00:27.300
就是一刻都不停

10
0:00:27.300 --> 0:00:29.000
什么稍微这个热度降低点

11
0:00:29.000 --> 0:00:30.400
马上丢一大瓜

12
0:00:30.400 --> 0:00:32.700
昨天这个瓜非常非常的大

13
0:00:32.700 --> 0:00:35.200
在推特上直接就直播

14
0:00:35.200 --> 0:00:41.200
公布了一系列的所谓2020年总统大选的深度黑幕

15
0:00:41.200 --> 0:00:42.500
你们也都看到了

16
0:00:42.500 --> 0:00:44.400
大概有什么一个想法

17
0:00:44.400 --> 0:00:45.600
就看到一点点

18
0:00:45.600 --> 0:00:46.800
就觉得这个瓜太大

19
0:00:46.800 --> 0:00:49.000
还不知道怎么下嘴

20
0:00:52.200 --> 0:00:54.300
就这个事吧

21
0:00:54.300 --> 0:00:57.800
是美国两党政治里边一个非常大的问题

22
0:00:57.800 --> 0:01:00.400
因为它直接关系到政权合法性

23
0:01:00.400 --> 0:01:02.600
就这个大选的结果

24
0:01:02.600 --> 0:01:04.300
因为当时有很多这个

25
0:01:04.300 --> 0:01:08.500
基本上两党都喜欢在关键时刻去操作这个事情

26
0:01:08.500 --> 0:01:10.800
之前大家记不记得就是有一段时间

27
0:01:10.800 --> 0:01:13.800
就一直说这个川普通俄

28
0:01:13.800 --> 0:01:16.000
对的 有印象

29
0:01:16.000 --> 0:01:18.000
然后这个是甚至准备弹劾

30
0:01:18.000 --> 0:01:20.100
因为当时民主党控制众议院嘛

31
0:01:20.100 --> 0:01:22.900
Pelosi就是这个众议院当时的议长

32
0:01:22.900 --> 0:01:24.300
就发起弹劾案

33
0:01:24.300 --> 0:01:25.400
众议院实际上已经发起了

34
0:01:25.400 --> 0:01:26.100
但是肯定过不了

35
0:01:26.100 --> 0:01:28.500
就是在参议院一定会被挡住嘛

36
0:01:28.500 --> 0:01:30.200
但他们也就去做这个事情

37
0:01:30.200 --> 0:01:33.200
发起点就是说当时16年大选的时候

38
0:01:33.200 --> 0:01:34.600
说俄罗斯干预了大选

39
0:01:34.600 --> 0:01:36.600
否则的话川普上不去

40
0:01:36.600 --> 0:01:38.400
这次其实如出一辙

41
0:01:38.400 --> 0:01:42.100
这次是说媒体干预了大选

42
0:01:42.100 --> 0:01:46.600
这个帮拜登遮挡了他的关键性的丑闻

43
0:01:46.600 --> 0:01:48.400
这个丑闻往深了挖

44
0:01:48.400 --> 0:01:49.500
可以说深不见底

45
0:01:49.500 --> 0:01:51.200
就拜登的亲儿子

46
0:01:51.200 --> 0:01:52.500
这个一系列的丑闻

47
0:01:52.500 --> 0:01:55.800
什么那些不雅的那些视频照片

48
0:01:55.800 --> 0:01:56.700
这都不算什么了

49
0:01:56.700 --> 0:01:58.900
最大的丑闻是他跟乌克兰

50
0:01:58.900 --> 0:02:01.600
有很深刻的这个关系

51
0:02:01.600 --> 0:02:04.400
如何如何笔记本里面透露出来

52
0:02:04.400 --> 0:02:08.300
甚至这些跟乌克兰的这种桌面以下的交易

53
0:02:08.300 --> 0:02:09.800
是老拜登知道的等等等等

54
0:02:09.800 --> 0:02:12.700
有很多这样的传闻

55
0:02:12.700 --> 0:02:15.800
所以这个事挺热闹的

56
0:02:15.800 --> 0:02:18.100
至于说他能够变成一个多大的瓜

57
0:02:18.100 --> 0:02:19.000
这个还真说不准

58
0:02:19.000 --> 0:02:21.000
我们可能还要再观察一阵

59
0:02:21.000 --> 0:02:21.900
个人的感觉

60
0:02:21.900 --> 0:02:27.000
因为推特在以前是一个比较亲民主党的

61
0:02:27.000 --> 0:02:31.100
但是表面上要做出一个非常公正的样子的

62
0:02:31.100 --> 0:02:34.100
这样的一个互联网媒体平台

63
0:02:34.100 --> 0:02:36.500
但现在马斯克收购之后

64
0:02:36.500 --> 0:02:37.900
这个所谓的推特2.0

65
0:02:37.900 --> 0:02:40.800
直接一个原地大变身

66
0:02:40.800 --> 0:02:42.300
就变成支持共和党

67
0:02:42.300 --> 0:02:44.800
而且根本不装的那种

68
0:02:44.800 --> 0:02:47.700
民主党之前也没想到

69
0:02:47.700 --> 0:02:49.600
没想到掀桌子

70
0:02:49.600 --> 0:02:51.500
进去就直接掀桌子了

71
0:02:51.500 --> 0:02:53.700
对

72
0:02:53.700 --> 0:02:55.000
所以这个我们再观察一阵

73
0:02:55.000 --> 0:02:57.000
估计会很有趣

74
0:02:57.000 --> 0:02:57.700
好

75
0:02:57.700 --> 0:03:00.100
我们之前聊过这一届世界卫足球赛

76
0:03:00.100 --> 0:03:02.800
里面使用的一些新的黑科技

77
0:03:02.800 --> 0:03:06.800
叫半自动视频助理裁判

78
0:03:06.800 --> 0:03:08.300
包括判越位

79
0:03:08.300 --> 0:03:09.100
判出界

80
0:03:09.100 --> 0:03:10.400
判进球

81
0:03:10.400 --> 0:03:12.600
它都可以提供很强有力的一些东西

82
0:03:12.600 --> 0:03:14.300
每场比赛开赛前

83
0:03:14.300 --> 0:03:18.900
专门有一个叫做视频助理裁判组

84
0:03:18.900 --> 0:03:20.800
就那样摆了若干台电脑

85
0:03:20.800 --> 0:03:21.900
然后有几个人坐在那里

86
0:03:21.900 --> 0:03:24.700
技术人员和有裁判资格的人

87
0:03:24.700 --> 0:03:26.800
就是为主裁提供

88
0:03:26.800 --> 0:03:29.300
实时的技术分析情报的

89
0:03:29.300 --> 0:03:31.200
在小组赛的最后一轮

90
0:03:31.200 --> 0:03:33.800
影响到非常多球队出现的

91
0:03:33.800 --> 0:03:35.100
关键的一轮比赛里面

92
0:03:35.100 --> 0:03:37.100
好像又出现了一些有争议的球

93
0:03:37.100 --> 0:03:40.700
那天晚上我是去看德国队的比赛去了

94
0:03:40.700 --> 0:03:43.400
所以同组的西班牙对日本的那一场

95
0:03:43.400 --> 0:03:44.300
我就没看

96
0:03:44.300 --> 0:03:45.300
但是好像那场比赛里

97
0:03:45.300 --> 0:03:46.500
出现了有争议的球

98
0:03:46.500 --> 0:03:48.200
这个好像老庄看了是吧

99
0:03:48.200 --> 0:03:51.000
你说一下当时你是怎么观感

100
0:03:51.000 --> 0:03:52.500
其实我当天没看

101
0:03:52.500 --> 0:03:54.000
我第二天看的是回看

102
0:03:54.000 --> 0:03:56.200
就是新闻里面

103
0:03:56.200 --> 0:03:58.800
对 新闻里面就说直接

104
0:03:58.800 --> 0:04:01.000
就说是这个什么

105
0:04:01.000 --> 0:04:05.500
离出线只差1.88毫米什么的

106
0:04:05.500 --> 0:04:08.800
就是后来去看了那个回看的镜头

107
0:04:08.800 --> 0:04:11.900
感觉上就是那个球已经整体出界了

108
0:04:11.900 --> 0:04:14.000
整体出界了之后

109
0:04:14.000 --> 0:04:18.500
这个日本队的那个球员就把他勾回来了

110
0:04:18.500 --> 0:04:20.300
然后球就打进去了

111
0:04:20.300 --> 0:04:21.500
对

112
0:04:21.500 --> 0:04:22.700
是的

113
0:04:22.700 --> 0:04:26.100
我后面仔细去看了一下那个比赛的回放

114
0:04:26.100 --> 0:04:30.000
就是这个球就跟之前我们评论过的那一次

115
0:04:30.000 --> 0:04:33.800
就史艾根廷对沙特吧

116
0:04:33.800 --> 0:04:36.500
史艾根廷上半场有好几个球被吹了越位

117
0:04:36.500 --> 0:04:39.600
其中有一个就是那个越位的那个前锋

118
0:04:39.600 --> 0:04:44.400
他就是一边肩膀和胳膊出去了一点点

119
0:04:44.400 --> 0:04:46.400
我估计就是毫米级的

120
0:04:46.400 --> 0:04:48.200
就是当时我们就评论了嘛

121
0:04:48.200 --> 0:04:51.400
就这种球要靠人的肉眼看

122
0:04:51.400 --> 0:04:53.200
是绝对看不出来的

123
0:04:53.200 --> 0:04:54.900
一般这个鞭才啊

124
0:04:54.900 --> 0:04:56.400
他看这个越位怎么看

125
0:04:56.400 --> 0:04:58.300
他就是保持自己

126
0:04:58.300 --> 0:05:00.600
始终跟这个后卫

127
0:05:00.600 --> 0:05:02.900
最后一名后卫

128
0:05:02.900 --> 0:05:06.100
他站在不分线的位置

129
0:05:06.100 --> 0:05:08.700
然后看这个对方前锋

130
0:05:08.700 --> 0:05:11.700
在就是传球的那一瞬间

131
0:05:11.700 --> 0:05:13.800
对方突前的这个前锋

132
0:05:13.800 --> 0:05:15.900
他是不是越过了我视线

133
0:05:15.900 --> 0:05:17.900
这条水平线

134
0:05:17.900 --> 0:05:18.900
就靠这个来看

135
0:05:18.900 --> 0:05:20.100
以前没有电脑的话

136
0:05:20.100 --> 0:05:21.500
就是人眼就这么看

137
0:05:21.500 --> 0:05:23.900
这个就只能看个大概了

138
0:05:23.900 --> 0:05:26.500
你说这个人他在那一瞬间

139
0:05:26.500 --> 0:05:28.200
人晃动冲出去了

140
0:05:28.200 --> 0:05:29.800
很多时候是有很多争议的

141
0:05:29.800 --> 0:05:32.300
就是好球被吹成越位或者反之

142
0:05:32.300 --> 0:05:34.900
这个越位的球被放过了

143
0:05:34.900 --> 0:05:36.400
都很常见

144
0:05:36.400 --> 0:05:39.100
但是这一次因为引入了这个

145
0:05:39.100 --> 0:05:41.800
高精度的高速摄影设施

146
0:05:41.800 --> 0:05:43.900
和这个电脑实时分析

147
0:05:43.900 --> 0:05:46.100
所以这个变成特别精密了

148
0:05:46.100 --> 0:05:47.700
这次这个球也是一样的

149
0:05:47.700 --> 0:05:49.800
这个球当时我觉得很多观众

150
0:05:49.800 --> 0:05:51.300
都没有搞懂

151
0:05:51.300 --> 0:05:52.300
为什么

152
0:05:52.300 --> 0:05:54.700
因为我看了一下那场比赛的回放

153
0:05:54.700 --> 0:05:57.000
就是那场比赛的回放里面

154
0:05:57.000 --> 0:05:59.000
没有放那个

155
0:05:59.000 --> 0:06:01.700
电脑分析的那个画面

156
0:06:01.700 --> 0:06:03.800
他只是在反复的播放

157
0:06:03.800 --> 0:06:04.900
正常的摄像头

158
0:06:04.900 --> 0:06:06.300
就是转播用的摄像头

159
0:06:06.300 --> 0:06:07.700
所拍摄到的画面

160
0:06:07.700 --> 0:06:10.000
因为转播的时候也会有多机位的

161
0:06:10.000 --> 0:06:12.100
会从正面

162
0:06:12.100 --> 0:06:13.100
左侧右侧

163
0:06:13.100 --> 0:06:15.700
然后跟底线并齐的摄像头

164
0:06:15.700 --> 0:06:17.800
跟边线并齐的摄像头都有

165
0:06:17.800 --> 0:06:19.100
尤其是底线那个摄像头

166
0:06:19.100 --> 0:06:19.800
可以看得很清楚

167
0:06:19.800 --> 0:06:21.300
那个球几乎已经就

168
0:06:21.300 --> 0:06:24.000
就看上去就出界了

169
0:06:24.000 --> 0:06:27.100
那这个足球规则里面是这样讲的

170
0:06:27.100 --> 0:06:29.200
就是一个足球在空中

171
0:06:29.200 --> 0:06:30.600
往界外飞

172
0:06:30.600 --> 0:06:32.100
怎么样算出界呢

173
0:06:32.100 --> 0:06:33.400
他描述的非常具体

174
0:06:33.400 --> 0:06:34.800
非常清晰的叫做

175
0:06:34.800 --> 0:06:40.200
这个球垂直向地面的投影

176
0:06:40.200 --> 0:06:43.200
如果整体越过了边线

177
0:06:43.200 --> 0:06:45.200
那么就算出界

178
0:06:45.200 --> 0:06:48.500
就哪怕他这个球往地上打一个投影

179
0:06:48.500 --> 0:06:50.800
这个投影哪怕只有一丁点

180
0:06:50.800 --> 0:06:52.000
还压着线的话

181
0:06:52.000 --> 0:06:53.400
就不算出界

182
0:06:53.400 --> 0:06:55.500
所以这个判断就变得特别困难

183
0:06:55.500 --> 0:06:56.100
对吧

184
0:06:56.100 --> 0:06:56.900
如果是这个球

185
0:06:56.900 --> 0:06:58.600
他只要是跨线就算出界

186
0:06:58.600 --> 0:06:59.600
那就很好判断

187
0:06:59.600 --> 0:07:01.300
因为那个边线还是有宽度的

188
0:07:01.300 --> 0:07:04.300
有一两公分宽的

189
0:07:04.300 --> 0:07:07.500
那么这个规则下要判断出界

190
0:07:07.500 --> 0:07:09.500
其实是难度是挺高的

191
0:07:09.500 --> 0:07:13.100
那么当时看那个正常摄像头所拍的东西

192
0:07:13.100 --> 0:07:15.100
感觉就确认出界了

193
0:07:15.100 --> 0:07:17.400
所以当时就有一套阴谋论

194
0:07:17.400 --> 0:07:19.200
因为这场球非常关键

195
0:07:19.200 --> 0:07:23.400
这场球如果打平或者西班牙赢的话

196
0:07:23.400 --> 0:07:26.600
那边德国只要赢就出现了

197
0:07:26.600 --> 0:07:28.900
但是如果日本赢的话

198
0:07:28.900 --> 0:07:32.400
德国必须要跟西班牙拼竞胜球

199
0:07:32.400 --> 0:07:34.400
而西班牙第一场是7比0

200
0:07:34.400 --> 0:07:36.600
这个竞胜球是德国怎么也拼不出来的

201
0:07:36.600 --> 0:07:41.400
所以这场比赛直接影响世界冠军得主德国队能不能出现的问题

202
0:07:41.400 --> 0:07:44.100
所以当时就有很多的阴谋论

203
0:07:44.100 --> 0:07:48.300
说第一西班牙想选一个比较弱的分区

204
0:07:48.300 --> 0:07:49.600
所以想输

205
0:07:49.600 --> 0:07:50.400
故意想输

206
0:07:50.400 --> 0:07:51.700
这是一种阴谋论

207
0:07:51.700 --> 0:07:53.000
另一种阴谋论就是说

208
0:07:53.000 --> 0:07:59.200
这个裁判或者怎么被收买了

209
0:07:59.200 --> 0:08:01.000
就是要把德国队做出去

210
0:08:01.000 --> 0:08:02.700
所以也在帮日本队

211
0:08:02.700 --> 0:08:04.500
就很多这样的传言

212
0:08:04.500 --> 0:08:08.300
尤其是这个球当时就肯定有争议

213
0:08:08.300 --> 0:08:11.200
因为防守队员会说这个是不是已经出界了

214
0:08:11.200 --> 0:08:11.600
好

215
0:08:11.600 --> 0:08:16.100
那这个主裁判就征询VR

216
0:08:16.100 --> 0:08:19.000
就是这个视频助理裁判的意见

217
0:08:19.000 --> 0:08:20.600
然后中断了一段时间

218
0:08:20.600 --> 0:08:21.500
等那边的结论

219
0:08:21.500 --> 0:08:22.700
最后结论出来了

220
0:08:22.700 --> 0:08:24.300
还是进球有效

221
0:08:24.300 --> 0:08:27.000
那因为没有在直播当中

222
0:08:27.000 --> 0:08:30.200
没有去放那个VR的那个具体分析的画面

223
0:08:30.200 --> 0:08:32.900
所以就引起了很多的争议

224
0:08:32.900 --> 0:08:34.900
但是后来这个我看了报导

225
0:08:34.900 --> 0:08:39.100
就是国际足联官网上专门登了一篇说明

226
0:08:39.100 --> 0:08:42.900
就是说经过这个计算机反复的这个

227
0:08:42.900 --> 0:08:44.200
测算分析

228
0:08:44.200 --> 0:08:48.800
说这个球还有1.8毫米在跨在在线

229
0:08:48.800 --> 0:08:50.300
就它在地面上的投影

230
0:08:50.300 --> 0:08:52.000
有1.8毫米没有出去

231
0:08:52.000 --> 0:08:53.900
所以这个球确实是没出界

232
0:08:53.900 --> 0:08:57.300
给我个人带来的一个启示就是

233
0:08:57.300 --> 0:08:58.900
在这种情况下

234
0:08:58.900 --> 0:09:01.800
有没有哪个主裁判他敢于就是说

235
0:09:01.800 --> 0:09:04.400
VR说它是这样

236
0:09:04.400 --> 0:09:07.300
那主裁就硬是坚持另外一样

237
0:09:07.300 --> 0:09:09.200
如果主裁坚持的话

238
0:09:09.200 --> 0:09:12.200
是不是会被视为是一种

239
0:09:12.200 --> 0:09:14.700
这个街道的问题

240
0:09:14.700 --> 0:09:17.300
所以这是一个有意思的点

241
0:09:17.300 --> 0:09:18.400
当然这场比赛不算

242
0:09:18.400 --> 0:09:22.800
这场比赛最后是采纳了VR的意见

243
0:09:22.800 --> 0:09:24.200
对 我刚才也在想

244
0:09:24.200 --> 0:09:26.000
对 因为我第二天也看了

245
0:09:26.000 --> 0:09:29.000
因为像这种细微的差别

246
0:09:29.000 --> 0:09:32.600
首先那个人肯定是识别不出来的

247
0:09:32.600 --> 0:09:34.800
第二个就是

248
0:09:34.800 --> 0:09:38.100
那其实是给了裁判的一个

249
0:09:38.100 --> 0:09:40.800
我不知道是主动权还是李军刚才所说的

250
0:09:40.800 --> 0:09:42.500
对 因为从一般的人来看

251
0:09:42.500 --> 0:09:43.700
确实是会

252
0:09:43.700 --> 0:09:47.000
至少我个人觉得是倾向于他出界的

253
0:09:47.000 --> 0:09:50.300
对 那如果他又有了计算机的信息以后

254
0:09:50.300 --> 0:09:53.600
他其实是可以有不同的这种做法

255
0:09:53.600 --> 0:09:57.100
而且我相信如果他倾向于他自己的这种直觉的判断

256
0:09:57.100 --> 0:09:58.400
应该不会有太

257
0:09:58.400 --> 0:10:01.000
至少观众不太会说他的

258
0:10:01.000 --> 0:10:04.400
虽然他和机器判断有矛盾

259
0:10:04.400 --> 0:10:05.100
是

260
0:10:05.100 --> 0:10:07.800
这是一个挺有意思的新问题

261
0:10:07.800 --> 0:10:09.200
我联想到的是

262
0:10:09.200 --> 0:10:12.700
以后这个足球是不是得变成智能硬件

263
0:10:12.700 --> 0:10:15.700
内置GPS 内置定位

264
0:10:15.700 --> 0:10:17.400
然后

265
0:10:17.400 --> 0:10:18.900
这个就有点是不是有点没意思

266
0:10:18.900 --> 0:10:23.000
根本就不要用摄像头来判断了

267
0:10:23.000 --> 0:10:26.600
然后所有的运动员身上也装定位仪

268
0:10:26.600 --> 0:10:28.000
到底有没有越位

269
0:10:28.000 --> 0:10:31.800
当场就能够判出来

270
0:10:31.800 --> 0:10:33.700
其实是可以的

271
0:10:33.700 --> 0:10:35.600
对 我觉得反反正正的方向

272
0:10:35.600 --> 0:10:41.700
其实这一届卡塔尔世界杯的足球是内置芯片的

273
0:10:41.700 --> 0:10:42.300
是吧

274
0:10:42.300 --> 0:10:44.400
他已经是有一个内置芯片的

275
0:10:44.400 --> 0:10:44.800
OK

276
0:10:44.800 --> 0:10:49.000
那这个芯片他到底是发挥了什么样的东西

277
0:10:49.000 --> 0:10:49.500
现在不好说

278
0:10:49.500 --> 0:10:52.500
现在没有把它用于足球场上的裁判

279
0:10:52.500 --> 0:10:54.100
而是用于数据搜集

280
0:10:54.100 --> 0:10:56.600
比如说这个球的飞行速度

281
0:10:56.600 --> 0:11:00.300
它这个就是被传递了多少次

282
0:11:00.300 --> 0:11:01.800
这些数据会实时采集

283
0:11:01.800 --> 0:11:02.900
直接发送到后台

284
0:11:02.900 --> 0:11:05.300
所以那个会出统计数据

285
0:11:05.300 --> 0:11:09.200
会每场比赛会出非常详细的统计数据

286
0:11:09.200 --> 0:11:10.600
这些现在是用到了

287
0:11:10.600 --> 0:11:14.400
但是好像还没有用于现场的裁判

288
0:11:14.400 --> 0:11:17.400
所以这届的球已经是智能足球了

289
0:11:17.400 --> 0:11:20.900
当然现在还没有让那个队员带一个芯片

290
0:11:20.900 --> 0:11:23.400
这个现在暂时还没有

291
0:11:23.400 --> 0:11:26.400
我觉得早晚都得这样

292
0:11:26.400 --> 0:11:29.300
这个体育拼科技

293
0:11:29.300 --> 0:11:30.500
对

294
0:11:30.500 --> 0:11:31.900
我刚才想说的一个点

295
0:11:31.900 --> 0:11:36.400
就是足球比赛的规则有一个非常著名的一个条款

296
0:11:36.400 --> 0:11:38.500
就是不论发生什么事

297
0:11:38.500 --> 0:11:40.800
不论这个判断正确与错误

298
0:11:40.800 --> 0:11:44.300
主裁的裁判是最终裁判

299
0:11:44.300 --> 0:11:47.600
就是他不能改变这个比赛的结果

300
0:11:47.600 --> 0:11:49.900
假设有个主裁在场上乱判

301
0:11:49.900 --> 0:11:51.900
最后判出了一个很荒谬的结果

302
0:11:51.900 --> 0:11:54.900
那最多是事后把这个主裁开除出队伍

303
0:11:54.900 --> 0:11:56.300
或者处罚他

304
0:11:56.300 --> 0:11:58.500
但比赛结果是不能够改变的

305
0:11:58.500 --> 0:12:02.900
这是一直以来都是这么一个规矩

306
0:12:02.900 --> 0:12:04.500
当然这个规矩是有它的道理的

307
0:12:04.500 --> 0:12:06.200
就是因为如果随便能改的话

308
0:12:06.200 --> 0:12:08.900
那这个就引起的麻烦就太多了

309
0:12:08.900 --> 0:12:11.500
就实际上有各种实用性考虑在里面

310
0:12:11.500 --> 0:12:13.300
那现在引入了VR之后

311
0:12:13.300 --> 0:12:14.100
就有一个问题

312
0:12:14.100 --> 0:12:18.000
就是主裁的这个权威性是不是仍然是这样子

313
0:12:18.000 --> 0:12:19.200
这是一个双刃剑

314
0:12:19.200 --> 0:12:22.000
就是如果我们肯定仍然是主裁说了算

315
0:12:22.000 --> 0:12:24.800
那他就是不跟VR一致

316
0:12:24.800 --> 0:12:26.100
可以吗?

317
0:12:26.100 --> 0:12:27.300
如果不可以

318
0:12:27.300 --> 0:12:29.100
那是不是足球规则里面就要加一条

319
0:12:29.100 --> 0:12:30.100
就是VR的这个

320
0:12:30.100 --> 0:12:32.000
如果现场有VR的结果

321
0:12:32.000 --> 0:12:33.600
必须要VR的结果来判

322
0:12:33.600 --> 0:12:37.000
尤其是在越位、出界、进球

323
0:12:37.000 --> 0:12:38.500
这样的一些关键

324
0:12:38.500 --> 0:12:39.700
这样一些比较

325
0:12:39.700 --> 0:12:40.900
怎么讲

326
0:12:40.900 --> 0:12:43.300
有客观标准的这样的一些判断上

327
0:12:43.300 --> 0:12:44.500
那如果是这样的话

328
0:12:44.500 --> 0:12:47.400
那么主裁判的这个工作和他的职责

329
0:12:47.400 --> 0:12:48.700
其实跟以前就有区别

330
0:12:48.700 --> 0:12:52.100
所以我觉得这个事影响会挺深远

331
0:12:52.100 --> 0:12:53.200
就像我们上次聊的时候

332
0:12:53.200 --> 0:12:55.100
如果这个这套做法

333
0:12:55.100 --> 0:12:57.500
包括这套规则和这套设施

334
0:12:57.500 --> 0:12:59.400
如果以后这个确定了

335
0:12:59.400 --> 0:13:02.000
就是在所有的这个比赛里面都这么干

336
0:13:02.000 --> 0:13:04.800
那我觉得这可能真的会逐步的产生一些影响

337
0:13:04.800 --> 0:13:06.900
甚至不排除就像刚才老庄说的

338
0:13:06.900 --> 0:13:09.800
那以后很多事情就主裁判就不要干了

339
0:13:09.800 --> 0:13:11.800
你就没什么可做的了

340
0:13:11.800 --> 0:13:12.600
对吧

341
0:13:12.600 --> 0:13:16.600
所有的球员和球都装上一个智能芯片

342
0:13:16.600 --> 0:13:19.200
这个场外有一个大显示器

343
0:13:19.200 --> 0:13:20.500
一个大喇叭

344
0:13:20.500 --> 0:13:23.400
这个实时的做出判罚

345
0:13:23.400 --> 0:13:27.900
以后将来未来就在园宇这里踢球算了

346
0:13:27.900 --> 0:13:30.300
甚至都不需要去现场

347
0:13:30.300 --> 0:13:32.600
好吧

348
0:13:32.600 --> 0:13:34.900
就像那个玩那个什么足球经理

349
0:13:34.900 --> 0:13:35.900
数字游戏了

350
0:13:35.900 --> 0:13:37.000
对

351
0:13:37.000 --> 0:13:38.000
对的

352
0:13:38.000 --> 0:13:43.900
那我觉得中国人的机会就来了

353
0:13:43.900 --> 0:13:44.700
好

354
0:13:44.700 --> 0:13:48.300
那关于这个体育竞技和AI的问题

355
0:13:48.300 --> 0:13:50.400
正好我们还有另外一个事

356
0:13:50.400 --> 0:13:52.300
也可以跟大家聊一聊

357
0:13:52.300 --> 0:13:55.600
就是最近这个

358
0:13:55.600 --> 0:13:57.900
这个围棋的AI里面

359
0:13:57.900 --> 0:14:00.900
出了一个挺有意思的发现

360
0:14:00.900 --> 0:14:03.600
就是有一个研究团队写了一篇论文

361
0:14:03.600 --> 0:14:06.600
声称他们用一种专门的对抗算法

362
0:14:06.600 --> 0:14:11.400
去和这个主流的围棋AI进程进行对抗

363
0:14:11.400 --> 0:14:15.200
然后发现了主流的围棋AI进程里面的

364
0:14:15.200 --> 0:14:18.100
一个很大的缺陷或者一个bug

365
0:14:18.100 --> 0:14:20.700
这个bug什么性质现在还不好说

366
0:14:20.700 --> 0:14:23.300
就是还没有听到这个

367
0:14:23.300 --> 0:14:27.500
围棋AI进程这边的正式的回应

368
0:14:27.500 --> 0:14:30.400
但这个bug是非常有意思的

369
0:14:30.400 --> 0:14:34.500
我之前也发给这个老庄跟王老师看了

370
0:14:34.500 --> 0:14:36.300
你们下下围棋吗

371
0:14:36.300 --> 0:14:39.500
我小时候其实下下围棋

372
0:14:39.500 --> 0:14:40.900
OK

373
0:14:40.900 --> 0:14:42.300
我不怎么下

374
0:14:42.300 --> 0:14:42.800
对

375
0:14:42.800 --> 0:14:46.800
因为围棋的规则本身其实是非常简单的

376
0:14:46.800 --> 0:14:49.600
但是它的策略又特别复杂

377
0:14:49.600 --> 0:14:53.100
所以这个bug哪怕不太下棋的人

378
0:14:53.100 --> 0:14:54.400
我觉得他也能够理解

379
0:14:54.400 --> 0:14:57.600
它是个什么bug我简单解释一下

380
0:14:57.600 --> 0:14:59.800
就是说它有几个必要条件

381
0:14:59.800 --> 0:15:01.800
来触发这个bug

382
0:15:01.800 --> 0:15:03.700
第一个必要条件就是

383
0:15:03.700 --> 0:15:05.600
让对弈的双方

384
0:15:05.600 --> 0:15:08.500
有一方胜率非常高

385
0:15:08.500 --> 0:15:11.000
就是在AI看来它的胜率非常高

386
0:15:11.000 --> 0:15:12.400
比如99%

387
0:15:12.400 --> 0:15:13.700
那在这种情况下

388
0:15:13.700 --> 0:15:17.100
就这个AI对一些招法的优先级的判断

389
0:15:17.100 --> 0:15:21.600
可能它的这个就是敏感度就会上升

390
0:15:21.600 --> 0:15:23.100
就是你稍微弄错一点

391
0:15:23.100 --> 0:15:24.800
可能就会导致很大的出入

392
0:15:24.800 --> 0:15:27.600
就是人家第一就是要一开始就拼命送

393
0:15:27.600 --> 0:15:31.600
送的让这个AI这个

394
0:15:31.600 --> 0:15:33.200
就是胜率爆表

395
0:15:33.200 --> 0:15:35.100
在这个前提下这是第一

396
0:15:35.100 --> 0:15:35.700
第二

397
0:15:35.700 --> 0:15:37.300
轻敌了

398
0:15:37.300 --> 0:15:39.200
对就在他看来怎么走都是赢

399
0:15:39.200 --> 0:15:41.100
进入这么一种状态

400
0:15:41.100 --> 0:15:42.100
这是第一

401
0:15:42.100 --> 0:15:46.400
第二的话是要制造一个特定的局面

402
0:15:46.400 --> 0:15:49.200
这个局面从直观上来看

403
0:15:49.200 --> 0:15:53.400
就是有一条很大的这个棋

404
0:15:53.400 --> 0:15:55.800
有一串很大的这个子

405
0:15:55.800 --> 0:15:58.000
它是走成一个环形

406
0:15:58.000 --> 0:16:02.400
就是走成一个连成一个圆环的形状

407
0:16:02.400 --> 0:16:04.600
然后这一串子

408
0:16:04.600 --> 0:16:06.400
它里边只有一个眼

409
0:16:06.400 --> 0:16:09.000
就是围棋里面要做两个眼才能活棋

410
0:16:09.000 --> 0:16:10.400
就是它只有一个眼

411
0:16:10.400 --> 0:16:12.700
它不是完全活棋

412
0:16:12.700 --> 0:16:15.000
那它在这种情况下

413
0:16:15.000 --> 0:16:19.500
AI就有很大的概率会做出误判

414
0:16:19.500 --> 0:16:22.100
去乱走一个棋

415
0:16:22.100 --> 0:16:24.300
而认为这是最佳的招法

416
0:16:24.300 --> 0:16:25.400
而这种情况下

417
0:16:25.400 --> 0:16:27.600
就会导致整条一大串

418
0:16:27.600 --> 0:16:29.500
围成一个圆环的这一大串棋

419
0:16:29.500 --> 0:16:30.500
最后都会死掉

420
0:16:30.500 --> 0:16:32.200
都会被对手吃掉

421
0:16:32.200 --> 0:16:34.500
那一旦吃掉当然就肯定输了

422
0:16:34.500 --> 0:16:37.300
就因为很大的一块棋

423
0:16:37.300 --> 0:16:38.300
这个bug

424
0:16:38.300 --> 0:16:41.100
它的有意思的点有几个方面

425
0:16:41.100 --> 0:16:42.800
第一个方面就是说

426
0:16:42.800 --> 0:16:46.600
有很高的概率可以再现

427
0:16:46.600 --> 0:16:48.400
他们测试主要用的是

428
0:16:48.400 --> 0:16:50.400
现在比较流行的一个

429
0:16:50.400 --> 0:16:53.900
开源的围棋AI叫KataGo

430
0:16:53.900 --> 0:16:56.500
KataGo它实际上

431
0:16:56.500 --> 0:16:58.600
是一个全新的一个模型

432
0:16:58.600 --> 0:17:00.900
它跟AlphaGo是不一样的

433
0:17:00.900 --> 0:17:02.000
AlphaGo出来之后

434
0:17:02.000 --> 0:17:05.200
有一个很出名的开源的围棋AI

435
0:17:05.200 --> 0:17:07.100
叫Lila Zero

436
0:17:07.100 --> 0:17:09.200
Lila Zero就是完全按照

437
0:17:09.200 --> 0:17:10.500
Google的那篇论文

438
0:17:10.500 --> 0:17:12.200
相当于是由开源社区

439
0:17:12.200 --> 0:17:14.300
重新实现了一遍AlphaGo

440
0:17:14.300 --> 0:17:15.700
但是KataGo不是的

441
0:17:15.700 --> 0:17:18.600
KataGo是完全新的一套模型做的

442
0:17:18.600 --> 0:17:19.600
但是从现在

443
0:17:19.600 --> 0:17:22.200
这个大家下棋的情况来看的话

444
0:17:22.200 --> 0:17:24.300
KataGo应该是开源里面

445
0:17:24.300 --> 0:17:27.000
棋力最强的这个AI

446
0:17:27.000 --> 0:17:28.100
他们当然测试就是

447
0:17:28.100 --> 0:17:29.300
针对这个AI去测试的

448
0:17:29.300 --> 0:17:31.800
当然那个计算深度

449
0:17:31.800 --> 0:17:32.400
不是很高

450
0:17:32.400 --> 0:17:35.800
大概2000步这样子

451
0:17:35.800 --> 0:17:39.700
就是往下算2000这样的深度

452
0:17:39.700 --> 0:17:42.700
那么有相当高的概率可以重现

453
0:17:42.700 --> 0:17:44.300
就是这个对抗算法

454
0:17:44.300 --> 0:17:46.000
不仅找到了这个bug

455
0:17:46.000 --> 0:17:48.100
而且找到了一条能够

456
0:17:48.100 --> 0:17:52.600
比较稳定的触发这个bug的方法

457
0:17:52.600 --> 0:17:53.300
这是第一个

458
0:17:53.300 --> 0:17:54.800
我觉得比较有意思的点

459
0:17:54.800 --> 0:17:56.200
第二个比较有意思的点

460
0:17:56.200 --> 0:17:59.500
就是这个事情本身

461
0:17:59.500 --> 0:18:02.400
它几乎没有在AI的这个领域

462
0:18:02.400 --> 0:18:04.600
引起很大的冲击

463
0:18:04.600 --> 0:18:07.300
也没有在职业棋手这个圈子里

464
0:18:07.300 --> 0:18:08.200
引起很大的冲击

465
0:18:08.200 --> 0:18:10.400
因为职业棋手第一时间觉得

466
0:18:10.400 --> 0:18:11.800
这个不太可能

467
0:18:11.800 --> 0:18:12.900
这肯定是哪里搞错了

468
0:18:12.900 --> 0:18:14.700
可能是个软件的小bug

469
0:18:14.700 --> 0:18:16.200
可能是这种态度

470
0:18:16.200 --> 0:18:22.200
反而是一些有很比较深的

471
0:18:22.200 --> 0:18:24.000
计算机背景的维棋爱好者

472
0:18:24.000 --> 0:18:25.300
他们很关注这个事情

473
0:18:25.300 --> 0:18:27.900
然后做了很多的验证考察

474
0:18:27.900 --> 0:18:32.200
然后最后发现这个确实是比较

475
0:18:32.200 --> 0:18:33.000
怎么讲

476
0:18:33.000 --> 0:18:36.600
就是一个比较有冲击力的发现

477
0:18:36.600 --> 0:18:39.100
就很可能对现在的这个维棋爱

478
0:18:39.100 --> 0:18:40.800
会产生一些影响

479
0:18:40.800 --> 0:18:43.600
这个就变成了一个很有意思的点

480
0:18:43.600 --> 0:18:45.400
我那天看了一个直播

481
0:18:45.400 --> 0:18:48.000
柯杰在B站做的直播

482
0:18:48.000 --> 0:18:50.300
他一开始也是比较不以为然的

483
0:18:50.300 --> 0:18:52.300
就是觉得这个东西没啥

484
0:18:52.300 --> 0:18:56.000
但是后面他就是在那个

485
0:18:56.000 --> 0:18:58.400
参加直播的水友的这个怂恿之下

486
0:18:58.400 --> 0:19:00.700
说你去试试就知道了

487
0:19:00.700 --> 0:19:02.200
他就把那个论文翻出来

488
0:19:02.200 --> 0:19:04.400
照着里面的那个棋图

489
0:19:04.400 --> 0:19:05.900
那个棋谱

490
0:19:05.900 --> 0:19:07.000
自己去摆了一遍

491
0:19:07.000 --> 0:19:10.400
他就只要摆成特定的一个局面

492
0:19:10.400 --> 0:19:13.100
然后用他自己的AI去算

493
0:19:13.100 --> 0:19:15.200
他就立刻能发现这个算错了

494
0:19:15.200 --> 0:19:16.500
错得很离谱

495
0:19:16.500 --> 0:19:19.900
那个AI认为99.99%胜率的一步棋

496
0:19:19.900 --> 0:19:21.600
其实是必输的一步棋

497
0:19:21.600 --> 0:19:23.100
就是人类棋友一眼就能看出来

498
0:19:23.100 --> 0:19:25.100
唯一的一招是另外一招

499
0:19:25.100 --> 0:19:27.500
这个AI走的肯定是死的

500
0:19:27.500 --> 0:19:28.700
但是很有意思的是

501
0:19:28.700 --> 0:19:31.700
如果人类棋手帮AI走一步

502
0:19:31.700 --> 0:19:34.100
然后让AI再去算下一步的话

503
0:19:34.100 --> 0:19:37.500
这个AI反而又能够发现正确的招法了

504
0:19:37.500 --> 0:19:39.500
就是他就在特定的那个节点上

505
0:19:39.500 --> 0:19:41.900
会懵逼一下

506
0:19:41.900 --> 0:19:42.900
然后就发现这个之后

507
0:19:42.900 --> 0:19:44.100
这个柯杰就说完了

508
0:19:44.100 --> 0:19:46.200
我的人生观

509
0:19:46.200 --> 0:19:49.700
我的这个又颠覆了

510
0:19:49.700 --> 0:19:52.900
柯杰说我们之前输给这个

511
0:19:52.900 --> 0:19:54.500
AlphaGo是颠覆了一次

512
0:19:54.500 --> 0:19:57.300
这次发现这种BUG又颠覆一次

513
0:19:57.300 --> 0:20:00.700
他去找这个他们学校里的

514
0:20:00.700 --> 0:20:02.600
这方面的大牛去咨询

515
0:20:02.600 --> 0:20:03.400
这个学习一下

516
0:20:03.400 --> 0:20:05.200
搞清楚到底是怎么回事

517
0:20:05.200 --> 0:20:08.700
柯杰当时验证这个棋的BUG的

518
0:20:08.700 --> 0:20:10.200
AI不是用的AlphaGo

519
0:20:10.200 --> 0:20:11.900
用的是爵翼

520
0:20:11.900 --> 0:20:14.600
我们知道爵翼是专门给

521
0:20:14.600 --> 0:20:17.300
这个围棋国家队有一个特供版

522
0:20:17.300 --> 0:20:19.600
后台是有很强的算力的

523
0:20:19.600 --> 0:20:20.900
然后特供了一个进程

524
0:20:20.900 --> 0:20:23.300
给所有的国家队的这个棋手

525
0:20:23.300 --> 0:20:24.700
所以他当时用的是

526
0:20:24.700 --> 0:20:26.200
这个国家队特供的这个爵翼

527
0:20:26.200 --> 0:20:28.200
按理说比AlphaGo厉害很多

528
0:20:28.200 --> 0:20:29.400
所以这个事还挺有意思

529
0:20:29.400 --> 0:20:33.200
我反正个人也会持续关注一下

530
0:20:33.200 --> 0:20:35.900
我先说一个类似的一个东西

531
0:20:35.900 --> 0:20:37.700
对其实是在计算机科学里面

532
0:20:37.700 --> 0:20:39.000
也是非常关注的

533
0:20:39.000 --> 0:20:40.800
对就是图像识别

534
0:20:40.800 --> 0:20:42.900
对图像识别里面有一类研究

535
0:20:42.900 --> 0:20:44.500
也是专门针对

536
0:20:44.500 --> 0:20:47.000
现在一些图像识别的算法

537
0:20:47.000 --> 0:20:49.100
去对它做攻击

538
0:20:49.100 --> 0:20:50.100
什么意思呢

539
0:20:50.100 --> 0:20:51.800
就是对

540
0:20:51.800 --> 0:20:54.800
就是通常来说

541
0:20:54.800 --> 0:20:57.100
一个图片给机器去识别

542
0:20:57.100 --> 0:20:59.300
是猫是狗它很容易识别出来

543
0:20:59.300 --> 0:21:01.800
但是如果一个研究人员

544
0:21:01.800 --> 0:21:04.500
他知道他背后算法那些原理

545
0:21:04.500 --> 0:21:06.400
他其实是可以在这个图片里

546
0:21:06.400 --> 0:21:09.200
去加一些噪音或者是一些pattern

547
0:21:09.200 --> 0:21:12.800
这样的话可以去欺骗这个AI进程的

548
0:21:12.800 --> 0:21:15.100
甚至你加的这些数据噪音

549
0:21:15.100 --> 0:21:17.100
本身可能它不是可见的

550
0:21:17.100 --> 0:21:20.100
你比如说再加一些像素

551
0:21:20.100 --> 0:21:22.800
对这个AI其实就识别不出来了

552
0:21:22.800 --> 0:21:24.900
或者是它可以把它判断成

553
0:21:24.900 --> 0:21:26.700
另外的一类东西

554
0:21:26.700 --> 0:21:28.700
这些东西其实在现在的

555
0:21:28.700 --> 0:21:30.300
很多的一些AI进程里面

556
0:21:30.300 --> 0:21:31.400
都有类似的

557
0:21:31.400 --> 0:21:33.400
不光光是图像识别

558
0:21:33.400 --> 0:21:35.500
包括一些语音文本

559
0:21:35.500 --> 0:21:37.200
对其实都有类似的东西

560
0:21:37.200 --> 0:21:38.700
所以说我就在想

561
0:21:38.700 --> 0:21:42.900
其实像刚才所讲的围棋

562
0:21:42.900 --> 0:21:44.800
应该也是这一类的东西

563
0:21:44.800 --> 0:21:46.900
而且我相信它应该是不止

564
0:21:46.900 --> 0:21:48.300
某一类的这种棋局

565
0:21:48.300 --> 0:21:50.100
可能有很多类

566
0:21:50.100 --> 0:21:52.400
只要是摆到特定的一种pattern

567
0:21:52.400 --> 0:21:54.800
那这个AI就懵逼了

568
0:21:54.800 --> 0:21:57.100
我感觉应该是这样的

569
0:21:57.100 --> 0:21:58.500
我看之前也有一个报导

570
0:21:58.500 --> 0:22:00.800
是说专门用来

571
0:22:00.800 --> 0:22:03.400
对抗特斯拉的自动驾驶的

572
0:22:03.400 --> 0:22:04.400
对的

573
0:22:04.400 --> 0:22:05.700
就有一个人举这个牌子

574
0:22:05.700 --> 0:22:08.000
那个牌子上画了一个特定的符号

575
0:22:08.000 --> 0:22:09.700
看上去像路标牌

576
0:22:09.700 --> 0:22:11.200
又不是路标牌

577
0:22:11.200 --> 0:22:12.600
就只要他这样举着这个东西

578
0:22:12.600 --> 0:22:15.800
那么特斯拉的自动驾驶就会出问题

579
0:22:15.800 --> 0:22:18.600
就会对方向判断会出问题

580
0:22:18.600 --> 0:22:20.300
这种东西反而人一眼就可以知道

581
0:22:20.300 --> 0:22:21.900
它是错的或者是有问题的

582
0:22:21.900 --> 0:22:24.400
但是机器就判断不出来了

583
0:22:24.400 --> 0:22:27.500
我比较关心的其实是两个点

584
0:22:27.500 --> 0:22:30.800
第一个点就是软件都有bug

585
0:22:30.800 --> 0:22:34.000
但是它找出bug的办法

586
0:22:34.000 --> 0:22:36.100
是用另外一种AI算法

587
0:22:36.100 --> 0:22:38.800
去找出这种AI算法的bug

588
0:22:38.800 --> 0:22:39.500
对

589
0:22:39.500 --> 0:22:43.100
这个其实我们往深了想的话

590
0:22:43.100 --> 0:22:45.900
这是一种更强的黑客工具

591
0:22:45.900 --> 0:22:47.100
对

592
0:22:47.100 --> 0:22:48.300
而这种黑客工具

593
0:22:48.300 --> 0:22:50.500
它可以用于非常非常多的领域

594
0:22:50.500 --> 0:22:53.100
而不仅仅是用来下围棋

595
0:22:53.100 --> 0:22:54.400
嗯

596
0:22:54.400 --> 0:22:55.600
第二个就是

597
0:22:55.600 --> 0:22:58.200
我们以前一直在说一个成功率

598
0:22:58.200 --> 0:23:00.500
或者叫准确率

599
0:23:00.500 --> 0:23:02.700
都说这个99%的时候

600
0:23:02.700 --> 0:23:04.800
AI都能够识别准确

601
0:23:04.800 --> 0:23:06.700
都能够识别对

602
0:23:06.700 --> 0:23:08.700
但是没有用

603
0:23:08.700 --> 0:23:13.200
它的百分比和人类的百分比不一样

604
0:23:13.200 --> 0:23:15.600
人类说我认错

605
0:23:15.600 --> 0:23:18.700
那是在确实非常难认的情况下

606
0:23:18.700 --> 0:23:20.100
它会认错

607
0:23:20.100 --> 0:23:21.000
嗯

608
0:23:21.000 --> 0:23:23.100
但是AI的百分比

609
0:23:23.100 --> 0:23:25.400
如果你真的找到了规律

610
0:23:25.400 --> 0:23:27.800
它可能会做到百分之百认错

611
0:23:27.800 --> 0:23:29.000
对

612
0:23:29.000 --> 0:23:31.700
就计算机里没有真随机吗

613
0:23:31.700 --> 0:23:33.400
对

614
0:23:33.400 --> 0:23:36.000
所以这个才是真正

615
0:23:36.000 --> 0:23:38.800
就是说我们要认真的去想

616
0:23:38.800 --> 0:23:42.000
这个AI进程的可靠性问题了

617
0:23:42.000 --> 0:23:45.100
因为一旦它可能会发生

618
0:23:45.100 --> 0:23:48.900
那么它将来就肯定会发生

619
0:23:48.900 --> 0:23:49.700
对

620
0:23:49.700 --> 0:23:51.300
因为假设我们说

621
0:23:51.300 --> 0:23:54.600
这个AI进程是有可能被人找到bug

622
0:23:54.600 --> 0:23:56.300
然后利用它的漏洞

623
0:23:56.300 --> 0:23:58.200
那么以后一定会有人这么干

624
0:23:58.200 --> 0:24:00.500
而且早期可能是玩笑

625
0:24:00.500 --> 0:24:01.900
可能是娱乐

626
0:24:01.900 --> 0:24:05.100
以后说不定就会有非法的东西出来

627
0:24:05.100 --> 0:24:08.100
这才是真正需要担忧的事情

628
0:24:08.100 --> 0:24:12.600
尤其是如果人类对这些人工智能算法过于依赖

629
0:24:12.600 --> 0:24:14.200
就像我们之前有一次聊过的

630
0:24:14.200 --> 0:24:16.400
就是咱就不说人工智能了

631
0:24:16.400 --> 0:24:20.400
就说一个普通的这个地图的导航的这个软件

632
0:24:20.400 --> 0:24:21.500
嗯

633
0:24:21.500 --> 0:24:21.800
是吧

634
0:24:21.800 --> 0:24:23.300
你如果很依赖这个软件的话

635
0:24:23.300 --> 0:24:26.700
不就有出现那种开着开着从墙上开河里去的情况吗

636
0:24:26.700 --> 0:24:27.800
对

637
0:24:27.800 --> 0:24:30.200
还有比如以后更科幻一点

638
0:24:30.200 --> 0:24:32.600
像Cyberpunk 2077那个游戏里面

639
0:24:32.600 --> 0:24:36.200
它不就是有黑客互相攻击对方的大脑

640
0:24:36.200 --> 0:24:38.900
因为那个时候人的大脑都是植入芯片的

641
0:24:38.900 --> 0:24:41.600
是大脑跟计算机芯片联合起来运作的

642
0:24:41.600 --> 0:24:42.300
嗯

643
0:24:42.300 --> 0:24:45.400
那类似于我们现在这种AI

644
0:24:45.400 --> 0:24:47.900
或者是其他领域的对抗算法

645
0:24:47.900 --> 0:24:49.100
发现了一个漏洞的话

646
0:24:49.100 --> 0:24:51.300
就让你进入死循环

647
0:24:51.300 --> 0:24:53.000
就直接把人给hack掉了

648
0:24:53.000 --> 0:24:54.200
就把你脑子烧了呀

649
0:24:54.200 --> 0:24:55.100
你就死掉了

650
0:24:55.100 --> 0:24:58.900
这是那个游戏里面经常出现的场景

651
0:24:58.900 --> 0:25:00.600
以前还是黑客对黑客

652
0:25:00.600 --> 0:25:01.300
现在不是了

653
0:25:01.300 --> 0:25:03.700
现在是黑客的AI对黑客的AI

654
0:25:03.700 --> 0:25:04.700
呵呵

655
0:25:04.700 --> 0:25:06.000
嗯

656
0:25:06.000 --> 0:25:07.700
挺科幻的

657
0:25:07.700 --> 0:25:11.000
因为人类他的思考总是有上限的嘛

658
0:25:11.000 --> 0:25:14.400
我不可能这个无上限的提高我的思维速度

659
0:25:14.400 --> 0:25:16.600
但AI这个事情只要有算力保证

660
0:25:16.600 --> 0:25:20.100
那很有可能会产生就是量变会产生一些质变

661
0:25:20.100 --> 0:25:21.800
确实

662
0:25:21.800 --> 0:25:23.900
像Catago的这个bug

663
0:25:23.900 --> 0:25:24.900
这个VCI这个bug

664
0:25:24.900 --> 0:25:28.400
我觉得要人类去找这个bug

665
0:25:28.400 --> 0:25:30.200
我觉得是一辈子也找不出来的

666
0:25:30.200 --> 0:25:33.000
这必须用另外一个算法才行

667
0:25:33.000 --> 0:25:35.600
魔高一尺道高一丈

668
0:25:35.600 --> 0:25:39.300
以后防范黑客也得靠AI

669
0:25:39.300 --> 0:25:40.800
顺便多说一句啊

670
0:25:40.800 --> 0:25:43.700
前两天我们听众群里面不是有人在问

671
0:25:43.700 --> 0:25:45.000
未来产业发展的问题

672
0:25:45.000 --> 0:25:46.000
我就说了一句

673
0:25:46.000 --> 0:25:48.400
我说我觉得5到10年之内啊

674
0:25:48.400 --> 0:25:51.400
会会有下一波的新的浪潮

675
0:25:51.400 --> 0:25:53.300
虽然上一波的互联网

676
0:25:53.300 --> 0:25:56.100
移动互联网都现在基本上进入平台期

677
0:25:56.100 --> 0:25:58.500
或者我们老庄说的缓坡啊

678
0:25:58.500 --> 0:26:00.500
但是新的会出现

679
0:26:00.500 --> 0:26:01.900
那新的什么东西会出现呢

680
0:26:01.900 --> 0:26:04.500
我觉得跟智能化的关系会非常非常大

681
0:26:04.500 --> 0:26:05.600
什么叫智能化呢

682
0:26:05.600 --> 0:26:13.200
其实就是高强度算力和海量数据支撑下的算法革新

683
0:26:13.200 --> 0:26:15.300
很多人会神话AI

684
0:26:15.300 --> 0:26:18.500
会说现在这个AI是多么多么的智能

685
0:26:18.500 --> 0:26:20.800
然后真的跟人类的智能相提并论

686
0:26:20.800 --> 0:26:21.800
实际上是不一样的

687
0:26:21.800 --> 0:26:23.000
差别还挺大的

688
0:26:23.000 --> 0:26:24.400
就还是很多局限性的

689
0:26:24.400 --> 0:26:26.800
但是由于有强大的算力

690
0:26:26.800 --> 0:26:28.600
和海量的数据支撑

691
0:26:28.600 --> 0:26:30.600
那么算法的发展

692
0:26:30.600 --> 0:26:33.400
甚至叫做算法的自迭代

693
0:26:33.400 --> 0:26:37.300
这个速度会远超过去的若干年

694
0:26:37.300 --> 0:26:38.900
所以未来这段时间里面

695
0:26:38.900 --> 0:26:42.000
各个领域都会进入到一个智能化的阶段

696
0:26:42.000 --> 0:26:43.700
比如我我是半个军迷啊

697
0:26:43.700 --> 0:26:47.200
这个军工领域现在全是在讲智能化的东西

698
0:26:47.200 --> 0:26:51.200
就是无人作战跟有人作战怎么结合的问题

699
0:26:51.200 --> 0:26:53.700
那换句话说以后我们幻想中

700
0:26:53.700 --> 0:26:55.800
比如像前段时间这个TopGun

701
0:26:55.800 --> 0:26:57.400
或者像当时的零云二

702
0:26:57.400 --> 0:26:59.700
那种两个飞机之间狗斗

703
0:26:59.700 --> 0:27:01.200
在很近的距离里面

704
0:27:01.200 --> 0:27:03.400
你咬我 我咬你的这种场景

705
0:27:03.400 --> 0:27:05.500
以后越来越不可能发生了

706
0:27:05.500 --> 0:27:07.800
以后是一个隐形战斗机

707
0:27:07.800 --> 0:27:10.200
带着一堆的无人聊机

708
0:27:10.200 --> 0:27:11.600
隔老远就发现对手

709
0:27:11.600 --> 0:27:12.800
然后指挥无人聊机上去

710
0:27:12.800 --> 0:27:14.300
把对手干掉就走了

711
0:27:14.300 --> 0:27:15.500
你根本看都看不到

712
0:27:15.500 --> 0:27:16.600
连雷达都看不到

713
0:27:16.600 --> 0:27:18.900
就结束了

714
0:27:18.900 --> 0:27:21.100
所有的一切都是在很遥远的地方

715
0:27:21.100 --> 0:27:24.500
一套计算机的系统控制的

716
0:27:24.500 --> 0:27:27.300
东西真的是变化会很大

717
0:27:27.300 --> 0:27:30.000
可能就在未来的5到10年

718
0:27:30.000 --> 0:27:32.700
我今天顺便讲一个我今天的事情

719
0:27:32.700 --> 0:27:34.500
也算是一个感受

720
0:27:34.500 --> 0:27:36.300
就是非常小的一种事情

721
0:27:36.300 --> 0:27:40.800
就是我去楼下去那个蜂巢快递柜

722
0:27:40.800 --> 0:27:43.700
然后就是扫码开门

723
0:27:43.700 --> 0:27:45.100
开门拿快递

724
0:27:45.100 --> 0:27:47.500
然后那个门没打开

725
0:27:47.500 --> 0:27:48.300
门没打开

726
0:27:48.300 --> 0:27:51.600
然后他就在弹一个确认键

727
0:27:51.600 --> 0:27:52.700
说是不是没打开

728
0:27:52.700 --> 0:27:53.500
我说没打开

729
0:27:53.500 --> 0:27:56.100
然后他就说你再点一次重新打开

730
0:27:56.100 --> 0:27:57.500
我又点了一下门开了

731
0:27:57.500 --> 0:27:59.400
我就把东西拿走了

732
0:27:59.400 --> 0:28:00.400
但没完

733
0:28:00.400 --> 0:28:02.800
马上电话就来了

734
0:28:02.800 --> 0:28:04.400
就一个人工智能的电话

735
0:28:04.400 --> 0:28:07.100
就是人工合成的语音电话就问

736
0:28:07.100 --> 0:28:09.200
请问刚才你门打开了吗

737
0:28:09.200 --> 0:28:10.900
我说打开了

738
0:28:10.900 --> 0:28:12.200
就这样

739
0:28:12.200 --> 0:28:14.200
这些事情全都是连起来的

740
0:28:14.200 --> 0:28:17.000
而且它会非常的细枝末节的

741
0:28:17.000 --> 0:28:20.100
点点滴滴的渗入到你的生活

742
0:28:20.100 --> 0:28:22.800
它不像我们原来所想像的科幻小说里面

743
0:28:22.800 --> 0:28:24.200
砰出来一个机器人

744
0:28:24.200 --> 0:28:26.500
这个智能比人类高多少倍

745
0:28:26.500 --> 0:28:27.800
不是的

746
0:28:27.800 --> 0:28:29.200
它就是一点一滴的

747
0:28:29.200 --> 0:28:30.200
这里改一点点

748
0:28:30.200 --> 0:28:31.200
那里改一点点

749
0:28:31.200 --> 0:28:33.400
然后多了一点点不一样的地方

750
0:28:33.400 --> 0:28:34.900
看上去都不重要

751
0:28:34.900 --> 0:28:36.200
但是慢慢的

752
0:28:36.200 --> 0:28:41.000
它就已经从头到尾渗透进了你的生活

753
0:28:41.000 --> 0:28:42.000
你说这个案例

754
0:28:42.000 --> 0:28:48.000
我猜想很可能是以前发生过故障

755
0:28:48.000 --> 0:28:51.000
或者有人有意的去黑道系统里面

756
0:28:51.000 --> 0:28:53.800
去拿这个快递

757
0:28:53.800 --> 0:28:55.300
然后制造了一些系统里面

758
0:28:55.300 --> 0:28:57.200
比如状态不一致等等等等的

759
0:28:57.200 --> 0:28:59.100
所以它后面加了很多校验

760
0:28:59.100 --> 0:28:59.600
对

761
0:28:59.600 --> 0:29:02.000
包括实时采集那个门的状态

762
0:29:02.000 --> 0:29:03.000
然后一旦发生

763
0:29:03.000 --> 0:29:05.000
他认为不确定状态了

764
0:29:05.000 --> 0:29:08.000
立刻就增加了一个回复确认的这样一个过程

765
0:29:08.000 --> 0:29:08.700
对

766
0:29:08.700 --> 0:29:10.100
这些一定不是一开始就有的

767
0:29:10.100 --> 0:29:11.600
一定是逐步迭代加进去的

768
0:29:11.600 --> 0:29:14.900
对 就是慢慢出来的

769
0:29:14.900 --> 0:29:17.300
哎呀 数字时代

770
0:29:17.300 --> 0:29:19.400
既令人兴奋又令人恐惧

771
0:29:19.400 --> 0:29:20.400
对

772
0:29:20.400 --> 0:29:21.900
对 就是这种感觉

773
0:29:21.900 --> 0:29:23.400
确实

774
0:29:23.400 --> 0:29:25.600
好 然后我们下面来聊一点

775
0:29:25.600 --> 0:29:27.100
相对轻松一点的话题

776
0:29:27.100 --> 0:29:30.100
这已经到12月的4号了

777
0:29:30.100 --> 0:29:31.700
所以越来越近年末

778
0:29:31.700 --> 0:29:33.800
我们其实之前就已经提过

779
0:29:33.800 --> 0:29:36.700
越往年末这种各种各样的年会

780
0:29:36.700 --> 0:29:41.000
这种什么这种颁奖等等都会出来

781
0:29:41.000 --> 0:29:45.400
这是每年年末的一个固定排列

782
0:29:45.400 --> 0:29:47.200
包括我们这个行业

783
0:29:47.200 --> 0:29:50.700
不论是互联网 计算机 还有开源

784
0:29:50.700 --> 0:29:52.500
各种各样的年会都会有出现

785
0:29:52.500 --> 0:29:54.600
这个王老师在学术界的

786
0:29:54.600 --> 0:29:57.500
是不是格外会多一些

787
0:29:57.500 --> 0:29:58.000
对的

788
0:29:58.000 --> 0:30:01.100
因为大家都想撑着办线下

789
0:30:01.100 --> 0:30:06.100
结果一起在年末办在线了

790
0:30:06.100 --> 0:30:08.800
最近特别多

791
0:30:08.800 --> 0:30:13.800
就现在还是不太赞同大家搞线下年会是吧

792
0:30:13.800 --> 0:30:14.700
对的

793
0:30:14.700 --> 0:30:19.300
基本上大部分城市都不太支持线下

794
0:30:19.300 --> 0:30:21.000
所以说只能线下了

795
0:30:21.000 --> 0:30:24.100
因为它不能够放到明年去办

796
0:30:24.100 --> 0:30:27.500
明年有明年的新一轮的计划

797
0:30:27.500 --> 0:30:28.800
而且有经费在里面

798
0:30:28.800 --> 0:30:29.700
你不花掉的

799
0:30:29.700 --> 0:30:30.500
对

800
0:30:30.500 --> 0:30:30.900
是吧

801
0:30:30.900 --> 0:30:31.500
这个玩意儿

802
0:30:31.500 --> 0:30:33.700
对的

803
0:30:33.700 --> 0:30:36.700
我先说一下我们现在办会里面

804
0:30:36.700 --> 0:30:38.900
碰到的一些问题和有趣的一些事情

805
0:30:38.900 --> 0:30:39.900
大家可以听一听

806
0:30:39.900 --> 0:30:41.000
好

807
0:30:41.000 --> 0:30:41.500
对吧

808
0:30:41.500 --> 0:30:41.700
对

809
0:30:41.700 --> 0:30:43.500
因为我们是属于计算机行业

810
0:30:43.500 --> 0:30:45.600
计算机行业其实在办会这一块

811
0:30:45.600 --> 0:30:47.400
还是非常活跃的

812
0:30:47.400 --> 0:30:47.700
对

813
0:30:47.700 --> 0:30:50.700
因为也有像计算机类的一些行业协会

814
0:30:50.700 --> 0:30:51.400
对吧

815
0:30:51.400 --> 0:30:52.700
还有像人工智能

816
0:30:52.700 --> 0:30:53.100
通信

817
0:30:53.100 --> 0:30:53.800
其实都有

818
0:30:53.800 --> 0:30:54.100
对

819
0:30:54.100 --> 0:30:55.700
计算机它是一个比较大的

820
0:30:55.700 --> 0:30:59.100
里面还有很多的一些分的委员会

821
0:30:59.100 --> 0:30:59.300
对

822
0:30:59.300 --> 0:31:00.400
各个领域的

823
0:31:00.400 --> 0:31:00.700
对

824
0:31:00.700 --> 0:31:03.300
这些领域的都有一些小会

825
0:31:03.300 --> 0:31:03.800
对

826
0:31:03.800 --> 0:31:05.300
这个小会在我们看来

827
0:31:05.300 --> 0:31:06.200
它也不小

828
0:31:06.200 --> 0:31:06.500
对

829
0:31:06.500 --> 0:31:08.100
也是

830
0:31:08.100 --> 0:31:10.400
因为确实中国还是挺大的

831
0:31:10.400 --> 0:31:10.700
对

832
0:31:10.700 --> 0:31:12.100
每个里面都挺多

833
0:31:12.100 --> 0:31:12.300
对

834
0:31:12.300 --> 0:31:13.300
其实我在这一块

835
0:31:13.300 --> 0:31:16.200
其实观察到一些一些一些现象

836
0:31:16.200 --> 0:31:16.500
对

837
0:31:16.500 --> 0:31:18.200
就是现在发现

838
0:31:18.200 --> 0:31:21.100
就是学校里面的这些老师

839
0:31:21.100 --> 0:31:22.200
研究人员

840
0:31:22.200 --> 0:31:22.400
对

841
0:31:22.400 --> 0:31:25.800
其实在使用一些数字化工具上面

842
0:31:25.800 --> 0:31:26.000
对

843
0:31:26.000 --> 0:31:27.900
其实一些态度

844
0:31:27.900 --> 0:31:29.200
还有他的一些经验

845
0:31:29.200 --> 0:31:31.500
还是有非常大的一些差别的

846
0:31:31.500 --> 0:31:31.800
对

847
0:31:31.800 --> 0:31:33.300
我举几个例子

848
0:31:33.300 --> 0:31:33.500
对

849
0:31:33.500 --> 0:31:37.900
那第一个其实就是最大的一个计算机类的联会

850
0:31:37.900 --> 0:31:42.100
最近就是在集中在在线召开

851
0:31:42.100 --> 0:31:42.300
对

852
0:31:42.300 --> 0:31:43.800
那集中在在线召开的时候

853
0:31:43.800 --> 0:31:47.200
它其实有一百多个分论坛

854
0:31:47.200 --> 0:31:47.500
对

855
0:31:47.500 --> 0:31:51.800
它是全部都是采取这种在线录制的

856
0:31:51.800 --> 0:31:52.100
对

857
0:31:52.100 --> 0:31:53.000
预录制

858
0:31:53.000 --> 0:31:53.200
对

859
0:31:53.200 --> 0:31:54.600
然后会议时间

860
0:31:54.600 --> 0:31:54.800
对

861
0:31:54.800 --> 0:31:57.000
应该就是一周多以后

862
0:31:57.000 --> 0:31:57.300
对

863
0:31:57.300 --> 0:31:58.900
就开始去播放

864
0:31:58.900 --> 0:32:00.500
然后用微信群

865
0:32:00.500 --> 0:32:03.000
然后去一起去做一些交互

866
0:32:03.000 --> 0:32:03.300
对

867
0:32:03.300 --> 0:32:05.800
那现在在那个预录制的时候

868
0:32:05.800 --> 0:32:08.300
其实就会出现比较大的问题

869
0:32:08.300 --> 0:32:08.600
对

870
0:32:08.600 --> 0:32:11.200
那第一个就是

871
0:32:11.200 --> 0:32:13.800
学会不知道是出于什么原因

872
0:32:13.800 --> 0:32:14.200
对

873
0:32:14.200 --> 0:32:17.600
这一次它不是用的一些国内的

874
0:32:17.600 --> 0:32:20.200
像腾讯会议去做这种录制

875
0:32:20.200 --> 0:32:20.600
对

876
0:32:20.600 --> 0:32:22.700
也不是说大家自己去

877
0:32:22.700 --> 0:32:25.400
你想用什么工具去用就好了

878
0:32:25.400 --> 0:32:26.600
它是统一的

879
0:32:26.600 --> 0:32:26.900
对

880
0:32:26.900 --> 0:32:31.300
它是统一采购了zoom的一个软件帐号

881
0:32:31.300 --> 0:32:32.600
为什么用zoom

882
0:32:32.600 --> 0:32:33.400
对

883
0:32:33.400 --> 0:32:34.900
那听我一会来说

884
0:32:34.900 --> 0:32:36.900
为什么要用zoom

885
0:32:36.900 --> 0:32:37.300
对

886
0:32:37.300 --> 0:32:38.900
因为用zoom一方面

887
0:32:38.900 --> 0:32:42.100
我估计可能它有一些非常规范的

888
0:32:42.100 --> 0:32:45.200
是不是因为有比较多一些国外的

889
0:32:45.200 --> 0:32:47.000
一些参会的大佬

890
0:32:47.000 --> 0:32:50.300
但是据我观察下来

891
0:32:50.300 --> 0:32:52.300
好像并没有太多的国外的

892
0:32:52.300 --> 0:32:53.300
OK

893
0:32:53.300 --> 0:32:56.300
但是可能有一部分确实会有很多

894
0:32:56.300 --> 0:32:58.200
在国外的一些华人

895
0:32:58.200 --> 0:32:58.800
对

896
0:32:58.800 --> 0:33:00.200
也会参会

897
0:33:00.200 --> 0:33:02.100
而且他们都是重量级的嘉宾

898
0:33:02.100 --> 0:33:08.200
zoom最大的优势可能就是国际化的做得好一点

899
0:33:08.200 --> 0:33:10.500
就是在各个地方

900
0:33:10.500 --> 0:33:12.000
比如多国的连接

901
0:33:12.000 --> 0:33:13.700
可能效果会稍微好一点

902
0:33:13.700 --> 0:33:14.700
其实我们也试过

903
0:33:14.700 --> 0:33:16.400
那同学会议也没啥问题

904
0:33:16.400 --> 0:33:20.300
我们跟霍聚他们家北美那边的连接也完全没问题

905
0:33:20.300 --> 0:33:21.600
对的

906
0:33:21.600 --> 0:33:26.200
但是国内就会出现非常多的一些有意思的问题

907
0:33:26.200 --> 0:33:27.400
我跟大家分享一下

908
0:33:27.400 --> 0:33:27.800
对

909
0:33:27.800 --> 0:33:30.100
第一个就是用惯了听讯会议以后

910
0:33:30.100 --> 0:33:30.700
对

911
0:33:30.700 --> 0:33:34.100
有的老师再去用zoom这些东西会觉得不方便

912
0:33:34.100 --> 0:33:35.800
或者是他觉得不习惯

913
0:33:35.800 --> 0:33:36.600
这是第一个

914
0:33:36.600 --> 0:33:37.500
第二个

915
0:33:37.500 --> 0:33:38.700
我不知道大家知不知道

916
0:33:38.700 --> 0:33:43.500
zoom实际上是对个人用户是有非常多的一些限制的

917
0:33:43.500 --> 0:33:45.900
比方说虚拟背景

918
0:33:45.900 --> 0:33:46.400
OK

919
0:33:46.400 --> 0:33:50.700
你的个人用户在zoom里面是不能够自己去添加图片

920
0:33:50.700 --> 0:33:52.400
去设置虚拟背景的

921
0:33:52.400 --> 0:33:53.700
听讯会议其实是可以的

922
0:33:53.700 --> 0:33:54.200
对不对

923
0:33:54.200 --> 0:33:55.200
嗯

924
0:33:55.200 --> 0:33:55.700
好

925
0:33:55.700 --> 0:33:59.700
学会其实是他购买的账号

926
0:33:59.700 --> 0:34:00.000
对

927
0:34:00.000 --> 0:34:03.300
他实际上是和他的会员系统打通了

928
0:34:03.300 --> 0:34:08.200
就是你可以用你的会员系统的账号去登录

929
0:34:08.200 --> 0:34:10.900
zoom它有一个SSO的一个登录方式

930
0:34:10.900 --> 0:34:11.200
对

931
0:34:11.200 --> 0:34:13.900
就是你只要是计算机学会的会员

932
0:34:13.900 --> 0:34:14.700
你去登录

933
0:34:14.700 --> 0:34:15.200
这样的话

934
0:34:15.200 --> 0:34:20.200
你就可以享受这种企业zoom的服务

935
0:34:20.200 --> 0:34:22.700
可以去更换这些图片

936
0:34:22.700 --> 0:34:23.700
但是你要知道

937
0:34:23.700 --> 0:34:26.300
这个登录过程其实还是挺麻烦的

938
0:34:26.300 --> 0:34:31.300
就造成了一部分的学者干脆他就放弃了这个录制

939
0:34:31.300 --> 0:34:32.700
等他说那我就不玩了

940
0:34:32.700 --> 0:34:35.000
那你们自己去录制吧

941
0:34:35.000 --> 0:34:35.900
对

942
0:34:35.900 --> 0:34:38.000
就造成了很多论坛

943
0:34:38.000 --> 0:34:39.600
就开始有一些

944
0:34:39.600 --> 0:34:40.800
就缺一些人

945
0:34:40.800 --> 0:34:41.100
对

946
0:34:41.100 --> 0:34:42.000
这是第一个

947
0:34:42.000 --> 0:34:42.300
对

948
0:34:42.300 --> 0:34:43.200
他有的就不录了

949
0:34:43.200 --> 0:34:48.300
那他说我为什么一定要用zoom去录制呢

950
0:34:48.300 --> 0:34:48.600
对吧

951
0:34:48.600 --> 0:34:51.000
为什么一定要按这个流程去做呢

952
0:34:51.000 --> 0:34:51.200
对吧

953
0:34:51.200 --> 0:34:54.100
他就不太高兴去做这样的一些事情

954
0:34:54.100 --> 0:34:55.200
或者他也嫌麻烦

955
0:34:55.200 --> 0:34:56.000
他也没有时间

956
0:34:56.000 --> 0:34:57.600
他就直接放弃演讲了吗

957
0:34:57.600 --> 0:34:59.800
就整个会不参加了

958
0:34:59.800 --> 0:35:00.100
对

959
0:35:00.100 --> 0:35:01.900
他就放弃这个论坛了

960
0:35:01.900 --> 0:35:02.900
他就

961
0:35:02.900 --> 0:35:03.500
对

962
0:35:03.500 --> 0:35:04.200
这是第一种

963
0:35:04.200 --> 0:35:05.000
大佬毕竟是大佬

964
0:35:05.000 --> 0:35:06.500
是

965
0:35:06.500 --> 0:35:06.800
对

966
0:35:06.800 --> 0:35:07.300
这是第一种

967
0:35:07.300 --> 0:35:11.900
第二种就是很多的论坛一般都会有panel

968
0:35:11.900 --> 0:35:12.700
是不是

969
0:35:12.700 --> 0:35:13.500
嗯

970
0:35:13.500 --> 0:35:14.900
panel的一个问题是什么呢

971
0:35:14.900 --> 0:35:19.600
是需要大家同时在线一起去讨论某几个话题

972
0:35:19.600 --> 0:35:21.800
那现在也会出现一个问题

973
0:35:21.800 --> 0:35:24.500
凑不齐

974
0:35:24.500 --> 0:35:27.700
就是你把那四五个老师

975
0:35:27.700 --> 0:35:29.100
都是比较厉害的

976
0:35:29.100 --> 0:35:31.200
凑集起来其实挺难的

977
0:35:31.200 --> 0:35:32.900
那这个怎么办呢

978
0:35:32.900 --> 0:35:34.600
放弃就不搞panel了

979
0:35:34.600 --> 0:35:38.000
就大家你约时间去录制完就好了

980
0:35:38.000 --> 0:35:42.100
然后会务组会把大家录制的东西拼起来

981
0:35:42.100 --> 0:35:42.600
对

982
0:35:42.600 --> 0:35:43.600
这是第二种

983
0:35:43.600 --> 0:35:46.000
也是一种降级的做法

984
0:35:46.000 --> 0:35:46.400
对

985
0:35:46.400 --> 0:35:47.400
那录上去以后

986
0:35:47.400 --> 0:35:49.700
其实座委会还是挺有意见的

987
0:35:49.700 --> 0:35:50.900
特别有意见

988
0:35:50.900 --> 0:35:51.100
对

989
0:35:51.100 --> 0:35:53.900
就是要么说你们有的老师没有按规范

990
0:35:53.900 --> 0:35:58.500
要么就是说你们的论坛和当初提交的申请又不一样

991
0:35:58.500 --> 0:35:59.600
不完整

992
0:35:59.600 --> 0:36:00.000
对吧

993
0:36:00.000 --> 0:36:03.500
这是一个挺大的一个东西

994
0:36:03.500 --> 0:36:03.800
对

995
0:36:03.800 --> 0:36:05.500
那剩下的就是

996
0:36:05.500 --> 0:36:05.700
对

997
0:36:05.700 --> 0:36:08.300
包括我昨天是刚录完的

998
0:36:08.300 --> 0:36:10.800
今天还有一大批正在录

999
0:36:10.800 --> 0:36:11.100
对

1000
0:36:11.100 --> 0:36:13.600
录的过程当中也是非常多的一些问题

1001
0:36:13.600 --> 0:36:13.900
对

1002
0:36:13.900 --> 0:36:18.100
有的甚至要录好几次才能够录完

1003
0:36:18.100 --> 0:36:18.500
对

1004
0:36:18.500 --> 0:36:21.700
因为有过录制这种在线会议的时候

1005
0:36:21.700 --> 0:36:25.000
特别是有这种顺序的演讲

1006
0:36:25.000 --> 0:36:28.900
在连panel的这个环节的时候

1007
0:36:28.900 --> 0:36:29.100
对

1008
0:36:29.100 --> 0:36:32.500
其实要对整个流程的控制

1009
0:36:32.500 --> 0:36:35.500
还有那个主持人的要求其实还挺高的

1010
0:36:35.500 --> 0:36:35.800
对

1011
0:36:35.800 --> 0:36:36.500
因为学会

1012
0:36:36.500 --> 0:36:39.600
他其实不太能够提供你这些非常专门的服务

1013
0:36:39.600 --> 0:36:41.800
他顶多提供你工具

1014
0:36:41.800 --> 0:36:44.700
还有帮你录视频的人

1015
0:36:44.700 --> 0:36:46.200
那其他的这些串场

1016
0:36:46.200 --> 0:36:49.300
这些东西都得老师们自己去做

1017
0:36:49.300 --> 0:36:49.600
对

1018
0:36:49.600 --> 0:36:51.800
那这个一下子就鸡飞狗跳

1019
0:36:51.800 --> 0:36:57.300
而且他们的那个录像室还是有限的

1020
0:36:57.300 --> 0:36:59.300
就提前得去约时间

1021
0:36:59.300 --> 0:36:59.500
对

1022
0:36:59.500 --> 0:37:02.400
因为他那个账号应该是付费购买的

1023
0:37:02.400 --> 0:37:04.100
应该没有买那么多

1024
0:37:04.100 --> 0:37:04.400
对

1025
0:37:04.400 --> 0:37:08.700
就是大家先在一个T恤文档里面去做登记

1026
0:37:08.700 --> 0:37:09.100
对

1027
0:37:09.100 --> 0:37:09.900
拍时间

1028
0:37:09.900 --> 0:37:10.200
对

1029
0:37:10.200 --> 0:37:10.800
拍好了以后

1030
0:37:10.800 --> 0:37:12.800
比如说给你4个小时

1031
0:37:12.800 --> 0:37:13.500
你就去录

1032
0:37:13.500 --> 0:37:15.000
但是你会发现

1033
0:37:15.000 --> 0:37:16.200
录著录着没录完

1034
0:37:16.200 --> 0:37:17.900
没办法下一场到了

1035
0:37:17.900 --> 0:37:19.500
那就得先退出去了

1036
0:37:19.500 --> 0:37:19.700
对

1037
0:37:19.700 --> 0:37:21.300
另外一波人又来了

1038
0:37:21.300 --> 0:37:21.700
对

1039
0:37:21.700 --> 0:37:23.700
然后又搞得深更半夜

1040
0:37:23.700 --> 0:37:24.100
对

1041
0:37:24.100 --> 0:37:26.000
反正就是感觉这几天

1042
0:37:26.000 --> 0:37:29.200
就是大家都在忙活这个忙活那个

1043
0:37:29.200 --> 0:37:29.400
对

1044
0:37:29.400 --> 0:37:31.600
到时候大家等过一个礼拜以后

1045
0:37:31.600 --> 0:37:33.800
大家看看效果怎么样

1046
0:37:33.800 --> 0:37:34.400
对

1047
0:37:34.400 --> 0:37:37.100
这是内容生产端的

1048
0:37:37.100 --> 0:37:37.300
对

1049
0:37:37.300 --> 0:37:38.700
内容生产端的还有一端

1050
0:37:38.700 --> 0:37:39.800
我觉得也挺有意思的

1051
0:37:39.800 --> 0:37:41.000
大家可以听一下

1052
0:37:41.000 --> 0:37:43.100
就是那个消费端

1053
0:37:43.100 --> 0:37:43.300
对

1054
0:37:43.300 --> 0:37:46.900
就是不是现在大家录100多个那个节目

1055
0:37:46.900 --> 0:37:47.400
对

1056
0:37:47.400 --> 0:37:47.900
录完了以后

1057
0:37:47.900 --> 0:37:50.500
那就会在大会那天去播出

1058
0:37:50.500 --> 0:37:50.800
对

1059
0:37:50.800 --> 0:37:52.100
那播出的时候

1060
0:37:52.100 --> 0:37:55.000
现在由于是在线了

1061
0:37:55.000 --> 0:37:56.200
而不是线下

1062
0:37:56.200 --> 0:37:56.600
对

1063
0:37:56.600 --> 0:37:58.600
以前线下的时候是怎么弄的

1064
0:37:58.600 --> 0:37:59.900
这其实是一个好买卖

1065
0:37:59.900 --> 0:38:01.600
其实就是会议

1066
0:38:01.600 --> 0:38:04.200
他其实是要收取会议费的

1067
0:38:04.200 --> 0:38:05.200
有储值费

1068
0:38:05.200 --> 0:38:05.400
对

1069
0:38:05.400 --> 0:38:10.300
储值费就是相当于是包括你整个会议期间的一些吃饭的

1070
0:38:10.300 --> 0:38:12.000
送一些小礼品

1071
0:38:12.000 --> 0:38:12.800
对

1072
0:38:12.800 --> 0:38:14.500
现在因为是在线的了

1073
0:38:14.500 --> 0:38:14.800
对

1074
0:38:14.800 --> 0:38:17.200
但是他还是要收一些会议费

1075
0:38:17.200 --> 0:38:17.400
对

1076
0:38:17.400 --> 0:38:20.800
那这个其实就需要给观众一些权益

1077
0:38:20.800 --> 0:38:21.000
对

1078
0:38:21.000 --> 0:38:22.300
那今年我觉得挺有意思

1079
0:38:22.300 --> 0:38:23.400
他搞了个什么权益

1080
0:38:23.400 --> 0:38:25.600
就是付费用户

1081
0:38:25.600 --> 0:38:32.400
你可以选三个群去和讲者们去做沟通

1082
0:38:32.400 --> 0:38:32.800
对

1083
0:38:32.800 --> 0:38:36.000
就是我们每个论坛都会去建一个群

1084
0:38:36.000 --> 0:38:40.000
这个工作人员会把我们这个群在播放的时候

1085
0:38:40.000 --> 0:38:40.300
对

1086
0:38:40.300 --> 0:38:42.200
会打到视频里面去

1087
0:38:42.200 --> 0:38:42.700
对

1088
0:38:42.700 --> 0:38:44.600
付费用户他有这个权利

1089
0:38:44.600 --> 0:38:50.600
你可以去进群和我们的观众去和我们的讲者去做一些交互

1090
0:38:50.600 --> 0:38:51.000
对

1091
0:38:51.000 --> 0:38:54.400
这个就有点像我们以前的那种微信群的这种营销

1092
0:38:54.400 --> 0:38:56.200
这样的一些玩法

1093
0:38:56.200 --> 0:38:56.800
对

1094
0:38:56.800 --> 0:39:00.800
这是我们学界的一种做法

1095
0:39:00.800 --> 0:39:01.800
对

1096
0:39:01.800 --> 0:39:02.600
就卖群了

1097
0:39:02.600 --> 0:39:04.400
就用这种方式

1098
0:39:04.400 --> 0:39:04.800
对

1099
0:39:04.800 --> 0:39:06.100
不知道最后效果怎么样

1100
0:39:06.100 --> 0:39:10.400
是不是真的有一堆的人之后能够来和大家去交互

1101
0:39:10.400 --> 0:39:12.600
按会水平不知道怎么样

1102
0:39:12.600 --> 0:39:14.800
商业的投稿还真的有

1103
0:39:14.800 --> 0:39:17.000
对

1104
0:39:17.000 --> 0:39:18.400
今年特别明显

1105
0:39:18.400 --> 0:39:18.600
对

1106
0:39:18.600 --> 0:39:23.200
因为今年年底现在全部都是在线办了

1107
0:39:23.200 --> 0:39:23.400
对

1108
0:39:23.400 --> 0:39:26.000
以前多多少少还有点挣扎

1109
0:39:26.000 --> 0:39:28.200
有的也办了也就办了

1110
0:39:28.200 --> 0:39:28.400
对

1111
0:39:28.400 --> 0:39:33.800
但今年的好戏会实际上是从9月份10月份就开始了

1112
0:39:33.800 --> 0:39:36.600
9月份10月份的会其实都往往在往后推

1113
0:39:36.600 --> 0:39:39.200
有的甚至还不只推了一次

1114
0:39:39.200 --> 0:39:41.700
结果大家现在基本上全部都放弃了

1115
0:39:41.700 --> 0:39:43.800
全部都直接改成在线了

1116
0:39:43.800 --> 0:39:46.800
就造成在线的现在这样一个结果

1117
0:39:46.800 --> 0:39:51.400
你看我现在我们前面不是有过推迟录制的节目的原因吗

1118
0:39:51.400 --> 0:39:55.400
就是现在每个周末其实都在去要幺去录制

1119
0:39:55.400 --> 0:39:57.600
要幺就是在线在做报告

1120
0:39:57.600 --> 0:39:59.000
就是类似这样的一些情况

1121
0:39:59.000 --> 0:40:06.600
所以是不是这个主流学会这个领域

1122
0:40:06.600 --> 0:40:11.800
他们今年以前就前两年其实因为抗议的情况还可以

1123
0:40:11.800 --> 0:40:15.400
所以大部分其实没有大规模的搞在线会议

1124
0:40:15.400 --> 0:40:17.300
对的你说的很对

1125
0:40:17.300 --> 0:40:17.900
是的

1126
0:40:17.900 --> 0:40:20.500
所以今年是第一次大规模的都在在线

1127
0:40:20.500 --> 0:40:24.800
对的非常集中的大规模的在在线

1128
0:40:24.800 --> 0:40:25.300
是的

1129
0:40:25.300 --> 0:40:28.600
这个有点措手不及

1130
0:40:28.600 --> 0:40:31.500
我觉得也一定程度上可以理解

1131
0:40:31.500 --> 0:40:36.400
然后再加上可能又有几个这种猪队友的不当决策

1132
0:40:36.400 --> 0:40:40.600
加剧了这种混乱程度

1133
0:40:40.600 --> 0:40:41.800
是的

1134
0:40:41.800 --> 0:40:43.400
而且我现在有个体会

1135
0:40:43.400 --> 0:40:47.500
其实又是你要在在线去办一个好的论坛

1136
0:40:47.500 --> 0:40:50.600
其实还是蛮需要一些进行的设计的

1137
0:40:50.600 --> 0:40:51.800
你的串伞怎么样

1138
0:40:51.800 --> 0:40:53.100
你的发政书

1139
0:40:53.100 --> 0:40:58.000
你的一些流出和观众的一些交互的一些空间等等

1140
0:40:58.000 --> 0:41:02.700
对这些东西其实你就让这几个老师自己去做

1141
0:41:02.700 --> 0:41:06.600
我觉得完全没有这些概念的很多

1142
0:41:06.600 --> 0:41:10.200
这个事这就属于叫互联网运营了

1143
0:41:10.200 --> 0:41:14.900
这个东西我觉得老庄应该很熟悉

1144
0:41:14.900 --> 0:41:15.900
其实这么说吧

1145
0:41:15.900 --> 0:41:18.700
我可以举另外的例子

1146
0:41:18.700 --> 0:41:22.200
就是咱们开元社其实也办了开元年会

1147
0:41:22.200 --> 0:41:23.300
就是在今年

1148
0:41:23.300 --> 0:41:24.500
完全不一样的感觉

1149
0:41:24.500 --> 0:41:25.900
对

1150
0:41:25.900 --> 0:41:29.000
然后其实最内核的要点就是

1151
0:41:29.000 --> 0:41:32.400
我们非常重视餐会体验

1152
0:41:32.400 --> 0:41:34.500
而且所谓的餐会体验

1153
0:41:34.500 --> 0:41:36.800
所谓餐会体验其实我们会分人群

1154
0:41:36.800 --> 0:41:39.800
比如说你是演讲人

1155
0:41:39.800 --> 0:41:41.800
你演讲的餐会体验

1156
0:41:41.800 --> 0:41:43.200
你是出品人

1157
0:41:43.200 --> 0:41:45.000
你的出品的餐会体验

1158
0:41:45.000 --> 0:41:46.600
然后你是志愿者

1159
0:41:46.600 --> 0:41:49.000
或者你是普通的观众

1160
0:41:49.000 --> 0:41:50.000
不同的人群

1161
0:41:50.000 --> 0:41:53.400
我们其实要想清楚他会怎么来

1162
0:41:53.400 --> 0:41:55.500
然后看到什么东西

1163
0:41:55.500 --> 0:41:57.100
然后会做什么行为

1164
0:41:57.100 --> 0:41:59.000
有哪些事情他可以做

1165
0:41:59.000 --> 0:42:03.000
以及最后他会留下什么印象

1166
0:42:03.000 --> 0:42:06.700
然后他走的时候会带走什么东西

1167
0:42:06.700 --> 0:42:08.300
这些都是需要设计的

1168
0:42:08.300 --> 0:42:09.800
这个在互联网思维里面

1169
0:42:09.800 --> 0:42:13.800
就是最简单的就是用户旅程

1170
0:42:13.800 --> 0:42:16.000
最常见的一个思维模型

1171
0:42:16.000 --> 0:42:18.000
就是你设计他的整个旅程

1172
0:42:18.000 --> 0:42:21.500
他会有什么样的感受

1173
0:42:21.500 --> 0:42:24.800
这是一个我觉得是非常需要考虑的事情

1174
0:42:24.800 --> 0:42:27.800
但是我觉得很多会其实不这样想

1175
0:42:27.800 --> 0:42:31.100
除非是像QCon这样的商业大会

1176
0:42:31.100 --> 0:42:32.900
我觉得他们肯定会想

1177
0:42:32.900 --> 0:42:35.400
因为他们是要靠这个挣钱的

1178
0:42:35.400 --> 0:42:37.200
他们肯定会想这些事情

1179
0:42:37.200 --> 0:42:39.800
但是一般的这种

1180
0:42:39.800 --> 0:42:41.400
不过这个叫啥

1181
0:42:41.400 --> 0:42:42.800
CCF不也收钱吗

1182
0:42:42.800 --> 0:42:46.000
但是也不能把它称之为商业大会对吧

1183
0:42:46.000 --> 0:42:47.800
收的还不少

1184
0:42:47.800 --> 0:42:50.400
我觉得它真是商业大会

1185
0:42:50.400 --> 0:42:51.800
如果它真是商业大会的话

1186
0:42:51.800 --> 0:42:52.300
它就必须考虑

1187
0:42:52.300 --> 0:42:54.900
只不过这个商业

1188
0:42:54.900 --> 0:42:57.500
我这么些年在互联网行业搞下来

1189
0:42:57.500 --> 0:42:59.500
我觉得互联网的商业逻辑里面

1190
0:42:59.500 --> 0:43:02.300
有些东西是真的是进步的

1191
0:43:02.300 --> 0:43:04.500
代表了人类未来的方向

1192
0:43:04.500 --> 0:43:07.300
最重要的几个就是以用户为本

1193
0:43:07.300 --> 0:43:09.900
就高度重视用户体验

1194
0:43:09.900 --> 0:43:13.600
然后想办法通过大数据来改善用户体验

1195
0:43:13.600 --> 0:43:16.700
就这套思路是互联网一直发展以来

1196
0:43:16.700 --> 0:43:19.600
就我们都会觉得是比较顺的一套思路

1197
0:43:19.600 --> 0:43:22.400
但是我接触过的一些传统行业

1198
0:43:22.400 --> 0:43:25.600
真的这方面它是不是这样去想的

1199
0:43:25.600 --> 0:43:30.200
传统行业往往是我有独特的资源

1200
0:43:30.200 --> 0:43:33.700
或者我有先发的产品制造

1201
0:43:33.700 --> 0:43:35.900
流水线的积累

1202
0:43:35.900 --> 0:43:40.100
或者我有上下游供应渠道的积累

1203
0:43:40.100 --> 0:43:43.500
这些东西是新来者很难挑战的

1204
0:43:43.500 --> 0:43:46.200
我就靠这个来赚钱

1205
0:43:46.200 --> 0:43:49.000
我觉得学会是比较像这个的

1206
0:43:49.000 --> 0:43:50.200
它有独有的资源

1207
0:43:50.200 --> 0:43:52.500
它是中国的国字号牌子

1208
0:43:52.500 --> 0:43:54.400
没有人能够去

1209
0:43:54.400 --> 0:43:55.300
对吧

1210
0:43:55.300 --> 0:43:57.200
中国只能有一个学会

1211
0:43:57.200 --> 0:44:01.200
我不可能有一个民间组织来挑战我

1212
0:44:01.200 --> 0:44:03.000
至少他们是这么想

1213
0:44:03.000 --> 0:44:05.600
所以他要把这个东西转化成可以赚的钱

1214
0:44:05.600 --> 0:44:06.300
怎么办呢

1215
0:44:06.300 --> 0:44:10.500
我通过这个牌子来框一些优秀的大牛

1216
0:44:10.500 --> 0:44:12.900
一些很响亮的名字

1217
0:44:12.900 --> 0:44:14.600
然后把这些名字

1218
0:44:14.600 --> 0:44:17.100
以前就是用这些名字来跟开展会一样

1219
0:44:17.100 --> 0:44:23.100
或者其实这就跟那个线下演出是类似的

1220
0:44:23.100 --> 0:44:24.700
现在变成在线了怎么办呢

1221
0:44:24.700 --> 0:44:27.300
那就卖这个微信群的入场券

1222
0:44:27.300 --> 0:44:28.700
卖群门票

1223
0:44:28.700 --> 0:44:32.300
所以这个思路我觉得对他们来讲是非常自然而然的

1224
0:44:32.300 --> 0:44:33.400
那么在这种情况下

1225
0:44:33.400 --> 0:44:34.600
他需要用户体验吗

1226
0:44:34.600 --> 0:44:35.400
他不需要

1227
0:44:35.400 --> 0:44:36.600
他第一需要那个牌子

1228
0:44:36.600 --> 0:44:41.500
第二需要那个牌子聚集起来的一些名字

1229
0:44:41.500 --> 0:44:46.400
所以我觉得这个是就底层思维逻辑上的差别

1230
0:44:46.400 --> 0:44:47.300
对对对

1231
0:44:47.300 --> 0:44:49.100
你如果很关注用户体验

1232
0:44:49.100 --> 0:44:53.600
你就一定会把这个精力花在去仿真

1233
0:44:53.600 --> 0:44:55.400
去预想

1234
0:44:55.400 --> 0:44:56.700
就像刚才老庄说的

1235
0:44:56.700 --> 0:44:58.500
每个出品人他做哪几件事情

1236
0:44:58.500 --> 0:45:00.500
他做的时候能不能做得顺

1237
0:45:00.500 --> 0:45:02.500
他请来的这个演讲嘉宾

1238
0:45:02.500 --> 0:45:05.100
是不是能够很方便的准备他的演讲

1239
0:45:05.100 --> 0:45:07.100
不论是预录制还是直播演讲

1240
0:45:07.100 --> 0:45:09.400
他怎么才能够比较方便

1241
0:45:09.400 --> 0:45:13.300
而不至于给他带来太大的麻烦

1242
0:45:13.300 --> 0:45:16.100
然后收听的观众门槛越低越好

1243
0:45:16.100 --> 0:45:17.600
至于这次是不是要付钱

1244
0:45:17.600 --> 0:45:18.800
这个可以考虑

1245
0:45:18.800 --> 0:45:19.500
是不是关键

1246
0:45:19.500 --> 0:45:20.800
这个都不是最重要的

1247
0:45:20.800 --> 0:45:22.100
这个就完全会不一样

1248
0:45:22.100 --> 0:45:24.700
这个思路

1249
0:45:24.700 --> 0:45:25.200
对对对

1250
0:45:25.200 --> 0:45:26.000
完全不一样

1251
0:45:26.000 --> 0:45:28.400
是的

1252
0:45:28.400 --> 0:45:29.800
另外再说一个点

1253
0:45:29.800 --> 0:45:32.800
也算是开元社办会的经验

1254
0:45:32.800 --> 0:45:36.600
其实我们19年是办的线下会

1255
0:45:36.600 --> 0:45:39.100
2020年就是分会场

1256
0:45:39.100 --> 0:45:41.700
就是五个城市分会场

1257
0:45:41.700 --> 0:45:45.400
然后在这个去年

1258
0:45:45.400 --> 0:45:48.800
是办的是八个城市分会场

1259
0:45:48.800 --> 0:45:51.300
不对是七

1260
0:45:51.300 --> 0:45:52.500
去年是五个

1261
0:45:52.500 --> 0:45:54.300
今年是九个

1262
0:45:54.300 --> 0:45:56.200
九个城市分会场

1263
0:45:56.200 --> 0:45:59.300
而且我们就是开放城市报名

1264
0:45:59.300 --> 0:46:01.600
就是任何一个城市都可以申请

1265
0:46:01.600 --> 0:46:05.100
办这个中国开元年会的线下城市分会场

1266
0:46:05.100 --> 0:46:07.600
然后我们就是多多益善

1267
0:46:07.600 --> 0:46:09.200
其实申请了12个城市

1268
0:46:09.200 --> 0:46:11.500
最后有9个城市办成了

1269
0:46:11.500 --> 0:46:13.700
其实这本质上就是一种分布式的

1270
0:46:13.700 --> 0:46:17.700
或者叫分散风险吧

1271
0:46:17.700 --> 0:46:19.700
它会带来一个很大的好处

1272
0:46:19.700 --> 0:46:22.500
就是每个城市的当地的开元的人

1273
0:46:22.500 --> 0:46:24.000
有机会聚在一起

1274
0:46:24.000 --> 0:46:25.700
他们都挺开心的

1275
0:46:25.700 --> 0:46:30.000
每个城市我们都聚起来了

1276
0:46:30.000 --> 0:46:34.300
相比起来它比全在线要好得多

1277
0:46:34.300 --> 0:46:36.400
分散风险

1278
0:46:36.400 --> 0:46:39.500
当然最后在线这个会也开得挺好

1279
0:46:39.500 --> 0:46:41.800
但是如果万一在线这个遇到点挫折

1280
0:46:41.800 --> 0:46:44.100
也不会影响大家太大的体验

1281
0:46:44.100 --> 0:46:47.100
因为毕竟还有线下分会场可以聚

1282
0:46:47.100 --> 0:46:50.300
对的我觉得挺好的是的

1283
0:46:50.300 --> 0:46:52.000
是年末除了年会

1284
0:46:52.000 --> 0:46:53.300
还有一些颁奖的

1285
0:46:53.300 --> 0:46:57.100
也是每年有很多鸡毛的

1286
0:46:57.100 --> 0:47:00.300
颁奖这个事情说实话我们也搞对吧

1287
0:47:00.300 --> 0:47:02.700
但是所以就同行之间

1288
0:47:02.700 --> 0:47:04.100
这个不好多说

1289
0:47:04.100 --> 0:47:07.600
所以我们可以不均匀的讨论

1290
0:47:07.600 --> 0:47:10.300
匿名讨论

1291
0:47:10.300 --> 0:47:11.300
其实这么说吧

1292
0:47:11.300 --> 0:47:14.600
就是说开元社也颁奖

1293
0:47:14.600 --> 0:47:17.600
有两个奖是开元社重度参与的

1294
0:47:17.600 --> 0:47:20.400
一个是咱们开元社自己给自己人颁奖的

1295
0:47:20.400 --> 0:47:24.500
其实就是用来表彰每年开元社

1296
0:47:24.500 --> 0:47:26.800
贡献最大的一些志愿者

1297
0:47:26.800 --> 0:47:29.000
我们会有什么开元之星

1298
0:47:29.000 --> 0:47:31.000
什么Coscom之星

1299
0:47:31.000 --> 0:47:33.400
就是为了中国开元年会

1300
0:47:33.400 --> 0:47:36.800
出力很多的那些朋友或者说是志愿者

1301
0:47:36.800 --> 0:47:38.300
这是自己评奖

1302
0:47:38.300 --> 0:47:41.000
另外还有一个奖比较有意思的是

1303
0:47:41.000 --> 0:47:45.900
我们叫做开元先锋33人

1304
0:47:45.900 --> 0:47:50.100
这是开元社和司否一起办的一个会

1305
0:47:50.100 --> 0:47:53.300
但是这个评奖我们就直接就

1306
0:47:53.300 --> 0:47:55.200
一开始我们就宣称

1307
0:47:55.200 --> 0:47:59.100
这不是一个有明确标准的

1308
0:47:59.100 --> 0:48:01.700
比如说我们根据什么评分规则

1309
0:48:01.700 --> 0:48:04.300
根据什么东西评出来的奖

1310
0:48:04.300 --> 0:48:05.200
不是的

1311
0:48:05.200 --> 0:48:06.800
我们一上来就说

1312
0:48:06.800 --> 0:48:10.900
这非常像是一种米其林的美食推荐

1313
0:48:10.900 --> 0:48:13.800
就像舌尖上的中国一样

1314
0:48:13.800 --> 0:48:16.300
对就是我就摆明了就我们这些人

1315
0:48:16.300 --> 0:48:19.200
我们这些人我们觉得自己就是圈内人

1316
0:48:19.200 --> 0:48:21.400
大家也认我们都是圈内人

1317
0:48:21.400 --> 0:48:24.700
我们就给圈内人做一个评选

1318
0:48:24.700 --> 0:48:25.600
选出什么呢

1319
0:48:25.600 --> 0:48:28.900
不是说选出这些最优秀的开元人

1320
0:48:28.900 --> 0:48:30.200
我们不讲最优秀

1321
0:48:30.200 --> 0:48:31.700
我们讲的是

1322
0:48:31.700 --> 0:48:34.900
这些人在中国的开元领域

1323
0:48:34.900 --> 0:48:36.200
你非常推荐

1324
0:48:36.200 --> 0:48:38.200
我们非常推荐你去关注他们

1325
0:48:38.200 --> 0:48:40.400
无论是他们做的开元项目

1326
0:48:40.400 --> 0:48:41.900
他们写的书

1327
0:48:41.900 --> 0:48:44.200
他们参与的各种活动

1328
0:48:44.200 --> 0:48:45.600
他们发表的演讲

1329
0:48:45.600 --> 0:48:47.500
或者是他们做了什么什么事情

1330
0:48:47.500 --> 0:48:50.100
我们认为这些人做的东西

1331
0:48:50.100 --> 0:48:52.000
非常有价值或者非常有趣

1332
0:48:52.000 --> 0:48:53.000
值得你去关注

1333
0:48:53.000 --> 0:48:55.800
所以是一个叫做舌尖上的

1334
0:48:55.800 --> 0:48:58.000
开元人的一种推荐

1335
0:48:58.000 --> 0:48:59.700
其实就跟我们见书差不多

1336
0:48:59.700 --> 0:49:00.800
对就是见书

1337
0:49:00.800 --> 0:49:01.800
是的

1338
0:49:01.800 --> 0:49:03.300
而且摆明了我们就推荐

1339
0:49:03.300 --> 0:49:05.500
就全部都是自己认识的朋友

1340
0:49:05.500 --> 0:49:07.700
就是你不认识的你也不好推荐

1341
0:49:07.700 --> 0:49:09.000
你怎么知道他到底怎么样

1342
0:49:09.000 --> 0:49:10.400
对就干这个事情

1343
0:49:10.400 --> 0:49:12.800
所以这个搞出来以后

1344
0:49:12.800 --> 0:49:15.100
其实在业内就是说

1345
0:49:15.100 --> 0:49:17.000
口碑还挺好

1346
0:49:17.000 --> 0:49:18.600
因为选出来的人

1347
0:49:18.600 --> 0:49:20.500
大家都非常的认可

1348
0:49:20.500 --> 0:49:22.100
说这当然是大牛

1349
0:49:22.100 --> 0:49:23.500
这个绝对

1350
0:49:23.500 --> 0:49:25.100
然后后面我们现在办

1351
0:49:25.100 --> 0:49:27.500
今年是办到第三届了

1352
0:49:27.500 --> 0:49:30.100
前面的两届就是我们自己选

1353
0:49:30.100 --> 0:49:31.300
到了第三届

1354
0:49:31.300 --> 0:49:34.100
我们就欢迎第一届第二届的

1355
0:49:34.100 --> 0:49:37.500
前面66个人去推选他们认为的

1356
0:49:37.500 --> 0:49:39.500
心尖上的开元人

1357
0:49:39.500 --> 0:49:41.000
然后再推荐下去

1358
0:49:41.000 --> 0:49:43.100
所以每年会这样办

1359
0:49:43.100 --> 0:49:46.500
其实公信力反而会出来

1360
0:49:46.500 --> 0:49:48.400
对就是

1361
0:49:48.400 --> 0:49:50.800
首先我觉得这种奖

1362
0:49:50.800 --> 0:49:52.500
因为首先他没有

1363
0:49:52.500 --> 0:49:55.300
说来听点就是也没有特别大的商业价值

1364
0:49:55.300 --> 0:49:55.800
对

1365
0:49:55.800 --> 0:49:58.800
就是至少不是鼓吹他的商业价值

1366
0:49:58.800 --> 0:50:03.100
然后就是一个叫做个人挑选

1367
0:50:03.100 --> 0:50:04.500
这种反而就是

1368
0:50:04.500 --> 0:50:06.300
如果我们大家价值观比较一致

1369
0:50:06.300 --> 0:50:08.000
那自然就会趋同

1370
0:50:08.000 --> 0:50:09.600
大家就会比较喜欢

1371
0:50:09.600 --> 0:50:12.000
这样反而我觉得也就麻烦会少一些

1372
0:50:12.000 --> 0:50:13.100
但是有一些就不是

1373
0:50:13.100 --> 0:50:14.400
有一些他的

1374
0:50:14.400 --> 0:50:17.000
他从设立奖项的时候开始

1375
0:50:17.000 --> 0:50:19.500
就是有很强的商业导向的

1376
0:50:19.500 --> 0:50:23.300
那这种就相对会争议会多一些

1377
0:50:23.300 --> 0:50:26.500
比如说有一个号称开元的评奖

1378
0:50:26.500 --> 0:50:30.000
然后评出来里面好多项目都不是开元的

1379
0:50:30.000 --> 0:50:31.500
这是怎么产生的

1380
0:50:31.500 --> 0:50:34.800
我想想看我看一下这个名字叫啥

1381
0:50:34.800 --> 0:50:35.400
稍等

1382
0:50:37.800 --> 0:50:38.600
对

1383
0:50:38.600 --> 0:50:43.400
叫做年度优秀开元技术团队

1384
0:50:43.400 --> 0:50:45.600
啥叫开元技术团队

1385
0:50:45.600 --> 0:50:48.800
然后里面有好多团队不是技术团队

1386
0:50:48.800 --> 0:50:52.300
还有好多团队不是开元团队

1387
0:50:52.300 --> 0:50:57.500
有些就是比如说像是那种开发者社区的

1388
0:50:57.500 --> 0:50:58.700
运营团队

1389
0:51:00.000 --> 0:51:01.000
他也获奖了

1390
0:51:03.200 --> 0:51:05.000
这其实怎么说

1391
0:51:05.000 --> 0:51:06.100
我就觉得这个

1392
0:51:07.600 --> 0:51:08.800
名不正就言不顺

1393
0:51:08.800 --> 0:51:14.000
你这样搞就其实是一个挺

1394
0:51:14.000 --> 0:51:15.600
这种就自娱自乐了

1395
0:51:15.600 --> 0:51:16.600
对

1396
0:51:16.600 --> 0:51:19.000
大家都不我们也自娱自乐

1397
0:51:19.000 --> 0:51:19.500
说实话

1398
0:51:19.500 --> 0:51:22.900
我们做那个什么新间上的什么开元先锋33人

1399
0:51:22.900 --> 0:51:24.300
就我们也是自娱自乐

1400
0:51:24.300 --> 0:51:25.900
但是我们摆明了就是说

1401
0:51:25.900 --> 0:51:27.900
我们选出来的就是这些开元人

1402
0:51:27.900 --> 0:51:29.700
就做开元的这些朋友们

1403
0:51:29.700 --> 0:51:31.400
这个反而还好

1404
0:51:31.400 --> 0:51:37.300
但是所谓的年度优秀技术团队

1405
0:51:37.300 --> 0:51:41.700
然后选出来多少个几十个三四十个

1406
0:51:41.700 --> 0:51:43.800
那不如分成几个不一样的奖了

1407
0:51:43.800 --> 0:51:44.300
对

1408
0:51:44.300 --> 0:51:48.000
比如说开元社区运营开元项目

1409
0:51:48.000 --> 0:51:48.500
对

1410
0:51:48.500 --> 0:51:49.000
对

1411
0:51:49.000 --> 0:51:50.400
你开元不到这

1412
0:51:50.400 --> 0:51:51.100
对

1413
0:51:51.100 --> 0:51:52.200
这没问题

1414
0:51:52.200 --> 0:51:56.200
然后奖项设计上的问题

1415
0:51:56.200 --> 0:51:58.100
我接触过一些开元

1416
0:51:58.100 --> 0:52:03.100
还有技术领域的一些社区的组织者

1417
0:52:03.100 --> 0:52:05.700
就我觉得他们可能在技术

1418
0:52:05.700 --> 0:52:07.300
或者在开元理念方面

1419
0:52:07.300 --> 0:52:08.500
都有自己的独到之处

1420
0:52:08.500 --> 0:52:10.800
或者说是有独特贡献

1421
0:52:10.800 --> 0:52:15.400
但是其实他们不太懂互联网运营

1422
0:52:15.400 --> 0:52:17.000
就是那个运营思路

1423
0:52:17.000 --> 0:52:19.700
这本身也是个本事

1424
0:52:19.700 --> 0:52:22.700
就是产品设计技术实现运营

1425
0:52:22.700 --> 0:52:26.100
其实这几个是不同的领域交叉领域

1426
0:52:26.100 --> 0:52:27.500
就是它有关联

1427
0:52:27.500 --> 0:52:31.400
但是又有很各自很独特的一些能力在里面

1428
0:52:31.400 --> 0:52:35.600
有这种综合能力的人相对少一些

1429
0:52:35.600 --> 0:52:38.200
就假设一个人他技术上比较有经验

1430
0:52:38.200 --> 0:52:42.200
然后同时也做过产品的比较深入的工作的话

1431
0:52:42.200 --> 0:52:44.300
那么他就比较容易理解用户

1432
0:52:44.300 --> 0:52:45.500
那理解用户之后

1433
0:52:45.500 --> 0:52:46.400
在运营的过程当中

1434
0:52:46.400 --> 0:52:48.700
有些判断就会相对靠谱一些

1435
0:52:48.700 --> 0:52:52.000
如果他不是很深入的去理解用户的话

1436
0:52:52.000 --> 0:52:53.700
那可能运营的时候就很多东西

1437
0:52:53.700 --> 0:52:57.300
他就甚至他就没有运营这个概念

1438
0:52:57.300 --> 0:52:59.900
就他不会站在那个外部的角度来看

1439
0:52:59.900 --> 0:53:01.400
我设置了一个奖项

1440
0:53:01.400 --> 0:53:02.500
我发布了这个奖项

1441
0:53:02.500 --> 0:53:05.500
其实这个本质上也是个产品

1442
0:53:05.500 --> 0:53:07.100
那它的目标是啥呢?

1443
0:53:07.100 --> 0:53:08.500
我发的产品的目标是啥?

1444
0:53:08.500 --> 0:53:10.400
如果只是为了赚赞助商的钱

1445
0:53:10.400 --> 0:53:11.100
那当然没问题

1446
0:53:11.100 --> 0:53:12.100
怎么干都可以

1447
0:53:12.100 --> 0:53:14.100
如果你同时还希望提升自己的口碑

1448
0:53:14.100 --> 0:53:16.900
那你就需要考虑观者的体验

1449
0:53:16.900 --> 0:53:19.900
所以这里面最后还是会变成一个产品问题了

1450
0:53:19.900 --> 0:53:22.900
我个人认为这一两年有一个风气

1451
0:53:22.900 --> 0:53:25.500
就是以前把互联网捧杀

1452
0:53:25.500 --> 0:53:28.200
最近一两年又开始去棒杀了

1453
0:53:28.200 --> 0:53:29.700
就有这个趋势

1454
0:53:29.700 --> 0:53:31.000
就说互联网太虚了

1455
0:53:31.000 --> 0:53:32.600
没有实体的东西

1456
0:53:32.600 --> 0:53:34.200
还是造芯片比较牛逼

1457
0:53:34.200 --> 0:53:36.500
其实这个我觉得是不一样的事

1458
0:53:36.500 --> 0:53:39.200
它是各有各的价值和长处的

1459
0:53:39.200 --> 0:53:41.300
而互联网的这个里面最有价值的部分

1460
0:53:41.300 --> 0:53:43.000
其实就是我刚才说的

1461
0:53:43.000 --> 0:53:46.300
面向海量用户的用户思维和运营思维

1462
0:53:46.300 --> 0:53:47.700
这个是很独特的

1463
0:53:47.700 --> 0:53:50.700
而且这个东西如果能和传统的制造业结合起来

1464
0:53:50.700 --> 0:53:52.700
肯定是有大的优势的

1465
0:53:52.700 --> 0:53:53.800
比如说新概念车

1466
0:53:53.800 --> 0:53:55.700
就是一个很典型的例子

1467
0:53:55.700 --> 0:53:58.700
这个以后有时间我们再细聊吧

1468
0:53:58.700 --> 0:54:00.200
好最后一个话题

1469
0:54:00.200 --> 0:54:01.700
我看到一篇很有趣的文章

1470
0:54:01.700 --> 0:54:05.700
讲这个编程语言的新贵

1471
0:54:05.700 --> 0:54:06.700
这个Rust

1472
0:54:06.700 --> 0:54:09.000
他自己公司的亲身体验

1473
0:54:09.000 --> 0:54:10.200
社区也很看好

1474
0:54:10.200 --> 0:54:11.900
舆论包括投资

1475
0:54:11.900 --> 0:54:14.200
包括很多大企业都很看好的这个Rust

1476
0:54:14.200 --> 0:54:15.700
这个编程语言

1477
0:54:15.700 --> 0:54:18.100
结果在他们公司成了一个巨坑

1478
0:54:18.100 --> 0:54:21.900
就他认为是他们现在面临困境的根源

1479
0:54:21.900 --> 0:54:23.900
他还特意这个文章开始的时候

1480
0:54:23.900 --> 0:54:25.700
写了一段专门的说明

1481
0:54:25.700 --> 0:54:27.700
说不希望这篇文章成为

1482
0:54:27.700 --> 0:54:32.200
关于Rust语言本身的优劣的一个讨论

1483
0:54:32.200 --> 0:54:33.700
他其实讲的一个东西

1484
0:54:33.700 --> 0:54:35.700
最后很有道理的点在哪里呢

1485
0:54:35.700 --> 0:54:38.200
就是每一个技术它好与不好

1486
0:54:38.200 --> 0:54:40.200
其实是相对的

1487
0:54:40.200 --> 0:54:42.700
而且跟它的射众

1488
0:54:42.700 --> 0:54:45.200
跟使用它的人有很大的关联

1489
0:54:45.200 --> 0:54:47.700
就是它适不适合你的团队

1490
0:54:47.700 --> 0:54:49.700
所以这个就关系到

1491
0:54:49.700 --> 0:54:52.200
我们上一次聊软件工程

1492
0:54:52.200 --> 0:54:54.200
有一些意犹未尽的话题

1493
0:54:54.200 --> 0:54:56.200
其实跟这个就有很大的关系

1494
0:54:56.200 --> 0:54:58.200
所以我们最后来聊一聊

1495
0:54:58.200 --> 0:55:03.700
这个相当于是我们上次聊软件工程的一个下半场

1496
0:55:03.700 --> 0:55:06.700
首先我觉得

1497
0:55:06.700 --> 0:55:08.200
第一个感想

1498
0:55:08.200 --> 0:55:11.700
就这种文章媒体最喜欢

1499
0:55:11.700 --> 0:55:14.700
因为第一热门语言

1500
0:55:14.700 --> 0:55:18.200
第二这个所谓的这个

1501
0:55:18.200 --> 0:55:20.200
工程故事或者说是叫做

1502
0:55:20.200 --> 0:55:23.700
在业内直接出现的一些实际案例

1503
0:55:23.700 --> 0:55:26.200
无论是什么有人三裤跑路啊

1504
0:55:26.200 --> 0:55:31.200
有人把自己公司里面的什么东西泄露出来啊

1505
0:55:31.200 --> 0:55:34.200
或者是报这个什么什么黑幕啊

1506
0:55:34.200 --> 0:55:35.700
这些大家都喜闻乐见

1507
0:55:35.700 --> 0:55:39.200
其实还有一类文章也挺喜闻乐见的

1508
0:55:39.200 --> 0:55:41.700
就是所谓的翻新

1509
0:55:41.700 --> 0:55:44.200
就是我们公司花了三个月

1510
0:55:44.200 --> 0:55:46.200
或者说花了半年

1511
0:55:46.200 --> 0:55:49.200
把这个比如说go换成了rust

1512
0:55:49.200 --> 0:55:50.700
或者反过来也行

1513
0:55:50.700 --> 0:55:52.700
为什么我们抛弃了rust

1514
0:55:52.700 --> 0:55:54.700
选择了这个e.lang

1515
0:55:54.700 --> 0:55:56.700
就是类似于这样的

1516
0:55:56.700 --> 0:55:57.700
这类文章很多

1517
0:55:57.700 --> 0:55:59.700
很多而且很多人都喜欢

1518
0:55:59.700 --> 0:56:00.700
都会去看

1519
0:56:00.700 --> 0:56:01.700
然后呢

1520
0:56:01.700 --> 0:56:03.700
通常这些文章

1521
0:56:03.700 --> 0:56:06.700
我看到最后看到的并不是技术

1522
0:56:06.700 --> 0:56:08.700
而是技术决策

1523
0:56:10.700 --> 0:56:12.700
技术和技术决策有区别

1524
0:56:12.700 --> 0:56:13.700
就是说

1525
0:56:13.700 --> 0:56:16.700
我用一个A技术或者用一个B技术

1526
0:56:16.700 --> 0:56:19.700
它本质上是一个决策的事情

1527
0:56:19.700 --> 0:56:23.700
不是说这个我当然应该要用A

1528
0:56:23.700 --> 0:56:25.700
或者当然应该要用B

1529
0:56:25.700 --> 0:56:28.700
因为没有别的更好的选择了

1530
0:56:28.700 --> 0:56:31.700
通常在我们现在这个时代的技术领域

1531
0:56:31.700 --> 0:56:33.700
不会有这么简单的答案

1532
0:56:34.700 --> 0:56:36.700
有很多都可以

1533
0:56:37.700 --> 0:56:38.700
但是呢

1534
0:56:38.700 --> 0:56:40.700
有很多团队就会

1535
0:56:42.700 --> 0:56:44.700
或者有些还不是团队

1536
0:56:44.700 --> 0:56:46.700
还不是整个公司有这样的冲动

1537
0:56:46.700 --> 0:56:48.700
就是某某技术主管

1538
0:56:48.700 --> 0:56:50.700
就会有这种技术冲动

1539
0:56:50.700 --> 0:56:51.700
这种技术冲动

1540
0:56:51.700 --> 0:56:53.700
甚至我会认为叫做

1541
0:56:54.700 --> 0:56:57.700
简历驱动式的技术决策

1542
0:56:58.700 --> 0:57:00.700
因为他将来出去以后

1543
0:57:00.700 --> 0:57:02.700
他的简历会好看呢

1544
0:57:02.700 --> 0:57:04.700
因为他用过了最新的技术

1545
0:57:04.700 --> 0:57:05.700
最牛的技术

1546
0:57:05.700 --> 0:57:07.700
或者说最前沿的技术

1547
0:57:07.700 --> 0:57:09.700
于是他的简历就会好看

1548
0:57:10.700 --> 0:57:12.700
所以很多技术人员会有这种冲动

1549
0:57:12.700 --> 0:57:14.700
用一些非常新的

1550
0:57:14.700 --> 0:57:16.700
甚至是未经验证的技术

1551
0:57:16.700 --> 0:57:18.700
或者仅仅就是出于个人偏好

1552
0:57:18.700 --> 0:57:19.700
我就喜欢

1553
0:57:19.700 --> 0:57:20.700
我就要用

1554
0:57:21.700 --> 0:57:23.700
这个是一个很常见的问题

1555
0:57:23.700 --> 0:57:26.700
但是技术媒体都很喜欢这种文章

1556
0:57:27.700 --> 0:57:28.700
结论不重要

1557
0:57:28.700 --> 0:57:30.700
就是说最后谁是谁非不重要

1558
0:57:31.700 --> 0:57:33.700
而重要的是这种文章带来的流量

1559
0:57:33.700 --> 0:57:34.700
或者说带来的这种

1560
0:57:34.700 --> 0:57:35.700
捉摸嘛

1561
0:57:37.700 --> 0:57:39.700
这是我的第一感觉

1562
0:57:40.700 --> 0:57:41.700
对说到这里

1563
0:57:41.700 --> 0:57:42.700
那其实像我们

1564
0:57:42.700 --> 0:57:46.700
我们同学们其实在追求新事物

1565
0:57:46.700 --> 0:57:48.700
还是挺快的

1566
0:57:48.700 --> 0:57:51.700
对其实刚才不是和上个话题

1567
0:57:51.700 --> 0:57:52.700
其实也是有点关系的

1568
0:57:52.700 --> 0:57:53.700
虽然他不是语言

1569
0:57:53.700 --> 0:57:55.700
就是在新工具的使用上面

1570
0:57:56.700 --> 0:58:00.700
现在其实同学们在这种协作聊天

1571
0:58:00.700 --> 0:58:03.700
包括记笔记这些工具上面

1572
0:58:03.700 --> 0:58:04.700
对那比较厉害的

1573
0:58:04.700 --> 0:58:07.700
甚至也是去写一些

1574
0:58:07.700 --> 0:58:10.700
直接用代码去写个小工具

1575
0:58:10.700 --> 0:58:11.700
对像我们这边

1576
0:58:11.700 --> 0:58:13.700
其实就有同学们

1577
0:58:13.700 --> 0:58:15.700
对就是特别烦那种重复性劳动

1578
0:58:15.700 --> 0:58:16.700
只要一有重复性劳动

1579
0:58:16.700 --> 0:58:18.700
他就自动化一下

1580
0:58:18.700 --> 0:58:19.700
然后去批量

1581
0:58:19.700 --> 0:58:20.700
这是好事情

1582
0:58:20.700 --> 0:58:22.700
这是非常好的

1583
0:58:22.700 --> 0:58:23.700
对这是好

1584
0:58:23.700 --> 0:58:27.700
对然后也是去用一些新的语言

1585
0:58:27.700 --> 0:58:28.700
然后边用边骂

1586
0:58:30.700 --> 0:58:33.700
对就是各种各种bug

1587
0:58:34.700 --> 0:58:35.700
当然这个也挺好的

1588
0:58:35.700 --> 0:58:36.700
而且他在用的过程当中

1589
0:58:36.700 --> 0:58:38.700
甚至还会给社区里面去

1590
0:58:38.700 --> 0:58:43.700
去提一些bug去提去修

1591
0:58:43.700 --> 0:58:45.700
对我觉得还是挺有意思的

1592
0:58:46.700 --> 0:58:50.700
对因为当然老师是一个比较落后的

1593
0:58:50.700 --> 0:58:52.700
就是包括像我们

1594
0:58:52.700 --> 0:58:54.700
其实我们一方面

1595
0:58:54.700 --> 0:58:55.700
也是希望把一些新技术

1596
0:58:55.700 --> 0:58:56.700
放在我们课堂里面

1597
0:58:56.700 --> 0:59:00.700
对但是确实是有些力不从心

1598
0:59:00.700 --> 0:59:03.700
对可能我刚才说的有点

1599
0:59:03.700 --> 0:59:05.700
让王老师误解了

1600
0:59:05.700 --> 0:59:06.700
就应该这么说

1601
0:59:06.700 --> 0:59:09.700
如果你是个人或者你在学校里

1602
0:59:09.700 --> 0:59:10.700
你做的任何选择

1603
0:59:10.700 --> 0:59:12.700
几乎不可能给公司带来损失

1604
0:59:12.700 --> 0:59:14.700
你当然用新的东西玩

1605
0:59:14.700 --> 0:59:15.700
我自己也在玩很多新东西

1606
0:59:15.700 --> 0:59:16.700
包括李俊我相信

1607
0:59:16.700 --> 0:59:18.700
也在不断的玩各种新东西

1608
0:59:18.700 --> 0:59:19.700
这是业余爱好

1609
0:59:20.700 --> 0:59:22.700
但是如果你去跟公司拍胸脯

1610
0:59:22.700 --> 0:59:24.700
说你看我用这个新技术肯定好

1611
0:59:24.700 --> 0:59:26.700
但其实你没有把握

1612
0:59:27.700 --> 0:59:28.700
这个时候其实你就把整个公司

1613
0:59:28.700 --> 0:59:31.700
拖下水来陪你做技术冒险

1614
0:59:31.700 --> 0:59:32.700
这个是不行的

1615
0:59:32.700 --> 0:59:35.700
这是两种概念

1616
0:59:35.700 --> 0:59:40.700
就是说一种是个人的技术的游乐场

1617
0:59:41.700 --> 0:59:43.700
就是说为什么叫playground

1618
0:59:43.700 --> 0:59:44.700
就是因为这可以玩

1619
0:59:44.700 --> 0:59:46.700
这多好玩一种新技术

1620
0:59:46.700 --> 0:59:47.700
我玩出新花样来

1621
0:59:47.700 --> 0:59:48.700
这个是挺好的

1622
0:59:49.700 --> 0:59:51.700
但是公司不是你的游乐场

1623
0:59:54.700 --> 0:59:55.700
是的

1624
0:59:56.700 --> 1:00:00.700
比如我自己的一些happy project

1625
1:00:00.700 --> 1:00:02.700
就自己玩的一些项目

1626
1:00:03.700 --> 1:00:05.700
我每次做这些玩的项目的时候

1627
1:00:05.700 --> 1:00:07.700
我都会选一个我没用过的东西来玩

1628
1:00:08.700 --> 1:00:11.700
因为我已经离开编码第一线很久了

1629
1:00:11.700 --> 1:00:13.700
假设是一个每天工作

1630
1:00:13.700 --> 1:00:14.700
还写代码的一个人的话

1631
1:00:15.700 --> 1:00:16.700
他更是这样了

1632
1:00:16.700 --> 1:00:18.700
就是每天工作都在写家

1633
1:00:18.700 --> 1:00:19.700
比如说我玩的时候

1634
1:00:19.700 --> 1:00:21.700
我一定不会再用我最熟悉的东西

1635
1:00:21.700 --> 1:00:22.700
去玩一个项目

1636
1:00:22.700 --> 1:00:24.700
我一定玩一个我从来没玩过的

1637
1:00:24.700 --> 1:00:25.700
好好体会一下

1638
1:00:25.700 --> 1:00:26.700
体会过程当中

1639
1:00:26.700 --> 1:00:31.700
肯定是爱恨情仇什么都有酸甜苦辣

1640
1:00:31.700 --> 1:00:33.700
但是刚才老庄聊的一个点很有意思

1641
1:00:33.700 --> 1:00:35.700
就是关于技术决策

1642
1:00:35.700 --> 1:00:37.700
或者叫做选行

1643
1:00:37.700 --> 1:00:38.700
或者叫技术路线

1644
1:00:38.700 --> 1:00:41.700
好久以前我专门分享过一个话题

1645
1:00:41.700 --> 1:00:45.700
叫什么技术管理人的自我修养

1646
1:00:45.700 --> 1:00:48.700
就是针对业界的一些误解

1647
1:00:48.700 --> 1:00:50.700
做了一些澄清

1648
1:00:50.700 --> 1:00:53.700
比如说业界有很多CTO

1649
1:00:53.700 --> 1:00:55.700
也有很多叫技术副总

1650
1:00:55.700 --> 1:00:57.700
那么实际上这个差别是啥

1651
1:00:57.700 --> 1:00:58.700
或者说一个CTO

1652
1:00:58.700 --> 1:01:01.700
他的主要的工作是什么

1653
1:01:03.700 --> 1:01:05.700
很多公司是不加区分的

1654
1:01:05.700 --> 1:01:06.700
但是实际上

1655
1:01:06.700 --> 1:01:08.700
我认为一个公司的技术负责人

1656
1:01:08.700 --> 1:01:10.700
他至少有几方面的事情要做

1657
1:01:10.700 --> 1:01:13.700
第一个是技术团队的培养和提升

1658
1:01:13.700 --> 1:01:15.700
一个是关键的技术决策

1659
1:01:15.700 --> 1:01:17.700
就刚才老庄说这种

1660
1:01:17.700 --> 1:01:18.700
包括路线的决策

1661
1:01:18.700 --> 1:01:21.700
第三个可能是这个工程性的

1662
1:01:21.700 --> 1:01:24.700
就是确保工程项目的成功

1663
1:01:24.700 --> 1:01:27.700
这是技术团队的老大

1664
1:01:27.700 --> 1:01:29.700
他都要去管的事情

1665
1:01:29.700 --> 1:01:31.700
那如果这公司足够大的话

1666
1:01:31.700 --> 1:01:33.700
这几个职能就会拆分

1667
1:01:33.700 --> 1:01:35.700
管项目

1668
1:01:35.700 --> 1:01:36.700
管技术团队的

1669
1:01:36.700 --> 1:01:39.700
很可能就会给一个这个副总

1670
1:01:39.700 --> 1:01:41.700
比如说一个engineering

1671
1:01:41.700 --> 1:01:42.700
专门管工程的副总

1672
1:01:42.700 --> 1:01:44.700
然后技术路线方面的东西

1673
1:01:44.700 --> 1:01:45.700
会专门有一个CTO

1674
1:01:45.700 --> 1:01:47.700
或者一个比如说手续架构师

1675
1:01:47.700 --> 1:01:49.700
或者一个甚至一个技术委员会

1676
1:01:49.700 --> 1:01:52.700
来去完成这个技术选行

1677
1:01:52.700 --> 1:01:54.700
和技术路线的问题

1678
1:01:54.700 --> 1:01:56.700
在相对大一点的公司

1679
1:01:56.700 --> 1:01:57.700
假设要变更技术路线

1680
1:01:57.700 --> 1:01:59.700
其实是个非常大的事情

1681
1:01:59.700 --> 1:02:03.700
如果有人独断专行的去做这个判断

1682
1:02:03.700 --> 1:02:05.700
而且带入了个人喜悟的话

1683
1:02:05.700 --> 1:02:07.700
对公司来讲往往就是灾难性的

1684
1:02:07.700 --> 1:02:10.700
关于这个工程上的选行

1685
1:02:10.700 --> 1:02:12.700
有很多很多的要素

1686
1:02:12.700 --> 1:02:13.700
其中很重要的一个

1687
1:02:13.700 --> 1:02:16.700
其实是跟团队的适配性

1688
1:02:16.700 --> 1:02:17.700
就是它适不适合这个团队

1689
1:02:17.700 --> 1:02:19.700
我看那篇Rust的文章

1690
1:02:19.700 --> 1:02:20.700
顺便说一句

1691
1:02:20.700 --> 1:02:22.700
就这个文章在InfoQ

1692
1:02:22.700 --> 1:02:24.700
中国这边转过来的时候

1693
1:02:24.700 --> 1:02:26.700
也是这个有意识的

1694
1:02:26.700 --> 1:02:28.700
做了标题档

1695
1:02:28.700 --> 1:02:30.700
这篇文章英文的原文的标题

1696
1:02:30.700 --> 1:02:33.700
就叫A Cautionary Story

1697
1:02:33.700 --> 1:02:35.700
还是叫A Cautionary Tale

1698
1:02:35.700 --> 1:02:39.700
就是一个有警示意义的故事

1699
1:02:39.700 --> 1:02:42.700
就很正常的一个标题

1700
1:02:42.700 --> 1:02:45.700
就是这个故事是我亲身经历的

1701
1:02:45.700 --> 1:02:46.700
然后它可能对大家

1702
1:02:46.700 --> 1:02:47.700
有一些警示意义

1703
1:02:47.700 --> 1:02:49.700
就这么一篇文章

1704
1:02:49.700 --> 1:02:51.700
然后内容也讲得相对很客观

1705
1:02:51.700 --> 1:02:53.700
结果这个翻译成中文之后

1706
1:02:53.700 --> 1:02:55.700
名字就变成了

1707
1:02:55.700 --> 1:02:57.700
什么当Rust成为巨坑

1708
1:02:57.700 --> 1:02:59.700
那就是典型的这个

1709
1:02:59.700 --> 1:03:01.700
就是标题档

1710
1:03:01.700 --> 1:03:03.700
那这篇文章里面

1711
1:03:03.700 --> 1:03:05.700
它讲到的内容其实

1712
1:03:05.700 --> 1:03:06.700
我觉得几乎全都是

1713
1:03:06.700 --> 1:03:08.700
跟人有关的问题

1714
1:03:08.700 --> 1:03:10.700
跟Rust本身的关联不大

1715
1:03:10.700 --> 1:03:13.700
你在了解这个技术的前提下

1716
1:03:13.700 --> 1:03:16.700
怎么判断它适不适合你

1717
1:03:16.700 --> 1:03:18.700
比如他们的经历就很简单

1718
1:03:18.700 --> 1:03:20.700
就是创始人很熟悉Rust

1719
1:03:20.700 --> 1:03:21.700
而且喜欢这门语言

1720
1:03:21.700 --> 1:03:22.700
所以他们就用了

1721
1:03:22.700 --> 1:03:24.700
而且初期人很少

1722
1:03:24.700 --> 1:03:26.700
创始团队对这个语言的驾驭

1723
1:03:26.700 --> 1:03:27.700
也没有大问题

1724
1:03:27.700 --> 1:03:29.700
所以也没什么大问题

1725
1:03:29.700 --> 1:03:30.700
到后来团队大起来了

1726
1:03:30.700 --> 1:03:31.700
变成十几个人

1727
1:03:31.700 --> 1:03:32.700
二十个人的时候

1728
1:03:32.700 --> 1:03:33.700
一堆问题又出现了

1729
1:03:33.700 --> 1:03:36.700
比如说找到同样熟悉Rust的

1730
1:03:36.700 --> 1:03:38.700
人就变得很困难

1731
1:03:38.700 --> 1:03:40.700
然后Rust的标准库

1732
1:03:40.700 --> 1:03:43.700
还在一个成熟的过程当中

1733
1:03:43.700 --> 1:03:45.700
有一些已经很成熟了

1734
1:03:45.700 --> 1:03:46.700
有一些还不够成熟

1735
1:03:46.700 --> 1:03:48.700
用的人不够多

1736
1:03:48.700 --> 1:03:50.700
文档不够细

1737
1:03:50.700 --> 1:03:52.700
遇到问题不知道怎么解决

1738
1:03:52.700 --> 1:03:53.700
这个都不是很多人

1739
1:03:53.700 --> 1:03:54.700
十几二十个人的时候

1740
1:03:54.700 --> 1:03:56.700
就碰到了这些问题

1741
1:03:56.700 --> 1:03:57.700
还有他也提到了

1742
1:03:57.700 --> 1:03:59.700
这个作者他也提到了一个点

1743
1:03:59.700 --> 1:04:01.700
他说他理解Rust的

1744
1:04:01.700 --> 1:04:03.700
一个设计哲学是

1745
1:04:03.700 --> 1:04:05.700
代码的安全可靠

1746
1:04:05.700 --> 1:04:08.700
比生产力更重要

1747
1:04:08.700 --> 1:04:09.700
这个确实是Rust的

1748
1:04:09.700 --> 1:04:11.700
设计理念之一

1749
1:04:11.700 --> 1:04:13.700
也就是说Rust根本就不适合

1750
1:04:13.700 --> 1:04:16.700
那种对生产效率

1751
1:04:16.700 --> 1:04:18.700
对这个速度

1752
1:04:18.700 --> 1:04:22.700
特别特别看重的初创企业

1753
1:04:22.700 --> 1:04:23.700
他可能是一个

1754
1:04:23.700 --> 1:04:25.700
已经相当稳定的团队

1755
1:04:25.700 --> 1:04:27.700
这个团队产品已经非常稳定了

1756
1:04:27.700 --> 1:04:29.700
不追求快速迭代了

1757
1:04:29.700 --> 1:04:31.700
但是对这个产品本身的可靠性

1758
1:04:31.700 --> 1:04:33.700
稳定性有极高的要求

1759
1:04:33.700 --> 1:04:35.700
比如说操作系统

1760
1:04:35.700 --> 1:04:37.700
那这种团队说难听点

1761
1:04:37.700 --> 1:04:39.700
闲着没事干怎么办呢

1762
1:04:39.700 --> 1:04:40.700
原来用C的

1763
1:04:40.700 --> 1:04:41.700
现在用Rust重写

1764
1:04:41.700 --> 1:04:43.700
可靠性提升了

1765
1:04:43.700 --> 1:04:44.700
功能不需要变

1766
1:04:44.700 --> 1:04:46.700
而且迭代的时间

1767
1:04:46.700 --> 1:04:47.700
也没有特别高的

1768
1:04:47.700 --> 1:04:49.700
这个速度上的要求

1769
1:04:49.700 --> 1:04:50.700
当然他就很合适

1770
1:04:50.700 --> 1:04:52.700
但对初创企业来讲

1771
1:04:52.700 --> 1:04:53.700
迭代快速

1772
1:04:53.700 --> 1:04:55.700
上功能要快

1773
1:04:55.700 --> 1:04:57.700
出问题修改要快

1774
1:04:57.700 --> 1:05:00.700
那这个很明显就不适合这种语言

1775
1:05:00.700 --> 1:05:02.700
所以这个就回到我们上一期

1776
1:05:02.700 --> 1:05:04.700
聊的关于软件工程的一些问题

1777
1:05:04.700 --> 1:05:06.700
软件工程本质上

1778
1:05:06.700 --> 1:05:07.700
它不是一个科学

1779
1:05:07.700 --> 1:05:09.700
它是一个工程实践性的东西

1780
1:05:09.700 --> 1:05:12.700
那就跟人具体的每一个人

1781
1:05:12.700 --> 1:05:14.700
有非常大的关联

1782
1:05:14.700 --> 1:05:16.700
我经历过的事情

1783
1:05:16.700 --> 1:05:18.700
还有我认识的一些

1784
1:05:18.700 --> 1:05:20.700
比较年轻的创业者

1785
1:05:20.700 --> 1:05:22.700
好几个人都碰到这个问题

1786
1:05:22.700 --> 1:05:24.700
就是他跟他的

1787
1:05:24.700 --> 1:05:26.700
比如说他是偏产品的

1788
1:05:26.700 --> 1:05:27.700
他的partner创业搭档

1789
1:05:27.700 --> 1:05:29.700
是偏技术的

1790
1:05:29.700 --> 1:05:30.700
然后在开始创业的时候

1791
1:05:30.700 --> 1:05:32.700
这个技术的创业者

1792
1:05:32.700 --> 1:05:33.700
他的这个搭档

1793
1:05:33.700 --> 1:05:36.700
出于自己的这个喜好

1794
1:05:36.700 --> 1:05:38.700
选了一个平台

1795
1:05:38.700 --> 1:05:40.700
开始就没什么问题

1796
1:05:40.700 --> 1:05:41.700
当用户人数上来的时候

1797
1:05:41.700 --> 1:05:43.700
当开发团队变大的时候

1798
1:05:43.700 --> 1:05:46.700
这个明显这个技术占据有问题了

1799
1:05:46.700 --> 1:05:47.700
那么要更换他

1800
1:05:47.700 --> 1:05:49.700
本身就有挑战

1801
1:05:49.700 --> 1:05:51.700
如果技术创始人

1802
1:05:51.700 --> 1:05:52.700
还不是很乐意的话

1803
1:05:52.700 --> 1:05:54.700
这个挑战就更大

1804
1:05:54.700 --> 1:05:56.700
往往苦恼的就是他另外一边

1805
1:05:56.700 --> 1:05:57.700
比如负责产品运营的

1806
1:05:57.700 --> 1:05:59.700
这一边的这个partner

1807
1:05:59.700 --> 1:06:01.700
而这种例子还挺多的

1808
1:06:01.700 --> 1:06:04.700
其实上次有一个点没聊到

1809
1:06:04.700 --> 1:06:05.700
就是所谓的

1810
1:06:05.700 --> 1:06:07.700
我认为软件工程

1811
1:06:07.700 --> 1:06:09.700
其实要进入一个新的

1812
1:06:09.700 --> 1:06:12.700
新一代软件工程

1813
1:06:12.700 --> 1:06:15.700
就是之前其实李俊在那个

1814
1:06:15.700 --> 1:06:16.700
上一期讲到

1815
1:06:16.700 --> 1:06:18.700
软件工程的一个发展历程

1816
1:06:18.700 --> 1:06:20.700
我们大家简单的重温了一遍

1817
1:06:20.700 --> 1:06:21.700
但是之前的软件工程

1818
1:06:21.700 --> 1:06:23.700
无论是瀑布的软件工程

1819
1:06:23.700 --> 1:06:25.700
还是敏捷软件工程

1820
1:06:25.700 --> 1:06:27.700
还是现在比如说

1821
1:06:27.700 --> 1:06:29.700
一直会比较强调DevOps

1822
1:06:29.700 --> 1:06:31.700
或者是DevSecOps

1823
1:06:31.700 --> 1:06:33.700
但是我们之前的

1824
1:06:33.700 --> 1:06:36.700
软件工程的很多的假设

1825
1:06:36.700 --> 1:06:40.700
都是所谓的自成体系

1826
1:06:40.700 --> 1:06:42.700
或者说有个所谓的假设

1827
1:06:42.700 --> 1:06:43.700
就是说我们相信

1828
1:06:43.700 --> 1:06:44.700
我们假设有个公司

1829
1:06:44.700 --> 1:06:46.700
招了50个人100个人

1830
1:06:46.700 --> 1:06:47.700
完了以后

1831
1:06:47.700 --> 1:06:49.700
这些人成为一个技术团队

1832
1:06:49.700 --> 1:06:50.700
然后他们就在公司里面

1833
1:06:50.700 --> 1:06:52.700
根支根支写代码

1834
1:06:52.700 --> 1:06:53.700
写出来的代码

1835
1:06:53.700 --> 1:06:54.700
当然就是我的软件

1836
1:06:54.700 --> 1:06:56.700
这是传统思维

1837
1:06:56.700 --> 1:06:58.700
但现代其实是

1838
1:06:58.700 --> 1:06:59.700
这50个人100个人

1839
1:06:59.700 --> 1:07:01.700
写出来的一个软件里面

1840
1:07:01.700 --> 1:07:03.700
可能有70%的代码

1841
1:07:03.700 --> 1:07:04.700
不是你的

1842
1:07:04.700 --> 1:07:06.700
对在这件事情

1843
1:07:06.700 --> 1:07:08.700
老板原来没想过

1844
1:07:08.700 --> 1:07:10.700
老板觉得既然都是

1845
1:07:10.700 --> 1:07:11.700
我招来的人

1846
1:07:11.700 --> 1:07:12.700
写出来代码当然都是我的

1847
1:07:12.700 --> 1:07:13.700
没想到他们现在网上

1848
1:07:13.700 --> 1:07:15.700
就抓了一堆回来

1849
1:07:15.700 --> 1:07:17.700
用了一个开源的框架

1850
1:07:17.700 --> 1:07:18.700
然后就找了一堆

1851
1:07:18.700 --> 1:07:19.700
开源的组件

1852
1:07:19.700 --> 1:07:20.700
然后左一边拼一下

1853
1:07:20.700 --> 1:07:21.700
右边拼一下

1854
1:07:21.700 --> 1:07:23.700
然后这边改改那边改改

1855
1:07:23.700 --> 1:07:24.700
最后搞出来一个软件

1856
1:07:24.700 --> 1:07:26.700
说算是我们公司的

1857
1:07:27.700 --> 1:07:29.700
然后这个老板就觉得

1858
1:07:29.700 --> 1:07:31.700
对这就是我们公司的资产了

1859
1:07:31.700 --> 1:07:33.700
还深怕代码泄漏什么的

1860
1:07:33.700 --> 1:07:35.700
其实好多东西都不是他的

1861
1:07:35.700 --> 1:07:37.700
但是他们没想过这件事情

1862
1:07:37.700 --> 1:07:38.700
但这个的话

1863
1:07:38.700 --> 1:07:40.700
其实在从软件工程来说

1864
1:07:40.700 --> 1:07:42.700
我之前就一直提一个说法

1865
1:07:42.700 --> 1:07:43.700
就是我们要思考

1866
1:07:43.700 --> 1:07:45.700
叫做开放性软件工程

1867
1:07:45.700 --> 1:07:46.700
因为你现在做的

1868
1:07:46.700 --> 1:07:48.700
不是一个封闭的软件

1869
1:07:48.700 --> 1:07:51.700
你也不是以封闭的方式

1870
1:07:51.700 --> 1:07:52.700
在做软件

1871
1:07:52.700 --> 1:07:54.700
所以你必须要以开放的

1872
1:07:54.700 --> 1:07:57.700
这种思维模式

1873
1:07:57.700 --> 1:08:00.700
去思考软件这件事情

1874
1:08:00.700 --> 1:08:01.700
比如说首先

1875
1:08:01.700 --> 1:08:04.700
要非常非常重视选行

1876
1:08:06.700 --> 1:08:08.700
你到底在选什么

1877
1:08:08.700 --> 1:08:09.700
选了这个东西

1878
1:08:09.700 --> 1:08:11.700
会给你带来多大的好处

1879
1:08:11.700 --> 1:08:13.700
和多大的坏处

1880
1:08:13.700 --> 1:08:15.700
还不光是说在技术上

1881
1:08:15.700 --> 1:08:17.700
你要考虑选行

1882
1:08:17.700 --> 1:08:19.700
甚至还包括这个代码安全

1883
1:08:19.700 --> 1:08:21.700
安全漏洞多不多

1884
1:08:21.700 --> 1:08:23.700
或者是他的法务

1885
1:08:23.700 --> 1:08:25.700
他是什么license

1886
1:08:25.700 --> 1:08:27.700
他背后的这个是

1887
1:08:27.700 --> 1:08:29.700
一家公司控制的开源

1888
1:08:29.700 --> 1:08:31.700
还是一个社区主导的开源

1889
1:08:31.700 --> 1:08:33.700
你都需要关心

1890
1:08:33.700 --> 1:08:34.700
对

1891
1:08:34.700 --> 1:08:37.700
所以现在要做技术的决策

1892
1:08:37.700 --> 1:08:39.700
或者说做选行的决策

1893
1:08:39.700 --> 1:08:41.700
其实比原来难很多

1894
1:08:41.700 --> 1:08:42.700
嗯

1895
1:08:42.700 --> 1:08:43.700
再举个例子

1896
1:08:43.700 --> 1:08:46.700
比如说你还得考虑生命周期

1897
1:08:46.700 --> 1:08:47.700
对

1898
1:08:47.700 --> 1:08:49.700
就是你用的这个软件

1899
1:08:49.700 --> 1:08:51.700
你要去关心这个开源软件

1900
1:08:51.700 --> 1:08:54.700
在社区里是什么版本

1901
1:08:54.700 --> 1:08:55.700
如果你用的是1.0版

1902
1:08:55.700 --> 1:08:58.700
那人家社区早就已经进化到5.0了

1903
1:08:58.700 --> 1:09:00.700
你怎么还敢用1.0呢

1904
1:09:00.700 --> 1:09:01.700
对

1905
1:09:01.700 --> 1:09:02.700
就他什么时候end of life

1906
1:09:02.700 --> 1:09:03.700
你也要想这事

1907
1:09:03.700 --> 1:09:04.700
对

1908
1:09:04.700 --> 1:09:05.700
都得管

1909
1:09:05.700 --> 1:09:06.700
因为你不是一个关起门来

1910
1:09:06.700 --> 1:09:07.700
自己写的东西了

1911
1:09:07.700 --> 1:09:10.700
你要考虑的是一个开放性的体系

1912
1:09:10.700 --> 1:09:12.700
然后在一个开放性系统

1913
1:09:12.700 --> 1:09:16.700
你如何去保证他的稳定健康

1914
1:09:16.700 --> 1:09:17.700
嗯

1915
1:09:17.700 --> 1:09:19.700
这是一个非常复杂的系统工程

1916
1:09:19.700 --> 1:09:20.700
而这个事情

1917
1:09:20.700 --> 1:09:22.700
在传统的软件工程里面

1918
1:09:22.700 --> 1:09:24.700
没有被认真的

1919
1:09:24.700 --> 1:09:26.700
或者说没有被透彻的去思考过

1920
1:09:26.700 --> 1:09:28.700
对

1921
1:09:28.700 --> 1:09:29.700
是的

1922
1:09:29.700 --> 1:09:32.700
而这个问题现在变得越来越至关重要

1923
1:09:32.700 --> 1:09:34.700
我可以给大家简单的念一下

1924
1:09:34.700 --> 1:09:36.700
我曾经组织过这么一个

1925
1:09:36.700 --> 1:09:40.700
就是做技术选行的一个指南

1926
1:09:40.700 --> 1:09:42.700
就是首先这个技术选行

1927
1:09:42.700 --> 1:09:44.700
我我们会分成几档

1928
1:09:44.700 --> 1:09:46.700
内核框架和编程语言

1929
1:09:46.700 --> 1:09:47.700
这是一档

1930
1:09:47.700 --> 1:09:48.700
就这种东西

1931
1:09:48.700 --> 1:09:49.700
你一旦用了很长时间

1932
1:09:49.700 --> 1:09:51.700
你就没办法改了

1933
1:09:51.700 --> 1:09:52.700
那这个要特别谨慎的

1934
1:09:52.700 --> 1:09:54.700
要选非常成熟的

1935
1:09:54.700 --> 1:09:57.700
有持续迭代可能的这样的一些东西

1936
1:09:57.700 --> 1:09:58.700
第二个呢

1937
1:09:58.700 --> 1:10:00.700
叫做一般性工具

1938
1:10:00.700 --> 1:10:01.700
那一般工具我们考察的时候

1939
1:10:01.700 --> 1:10:03.700
就会考察它的成熟度啊

1940
1:10:03.700 --> 1:10:04.700
社区的活跃度啊

1941
1:10:04.700 --> 1:10:05.700
可替代性啊

1942
1:10:05.700 --> 1:10:07.700
就是它有没有可替代的备份

1943
1:10:07.700 --> 1:10:08.700
就假如它出问题了

1944
1:10:08.700 --> 1:10:10.700
我是不是可以很容易的切换到别的

1945
1:10:10.700 --> 1:10:13.700
类似功能的这个

1946
1:10:13.700 --> 1:10:14.700
实现上面去

1947
1:10:14.700 --> 1:10:17.700
第三个叫关键的工具

1948
1:10:17.700 --> 1:10:18.700
就是我这个产品

1949
1:10:18.700 --> 1:10:20.700
有一项很重要的卖点型的功能

1950
1:10:20.700 --> 1:10:22.700
这个功能依赖于一个其他的东西

1951
1:10:22.700 --> 1:10:23.700
才能够实现

1952
1:10:23.700 --> 1:10:25.700
那么那个东西是不是可靠稳定

1953
1:10:25.700 --> 1:10:28.700
或者那些是不是我们要去自研

1954
1:10:28.700 --> 1:10:30.700
这个首先是你有一个

1955
1:10:30.700 --> 1:10:33.700
非常非常细致的一个分类

1956
1:10:33.700 --> 1:10:35.700
就是你的选型本身什么性质的

1957
1:10:35.700 --> 1:10:38.700
它后续的那个逻辑就会不太一样

1958
1:10:38.700 --> 1:10:40.700
好当你确定这个之后

1959
1:10:40.700 --> 1:10:43.700
还有一些很重要的指针

1960
1:10:43.700 --> 1:10:44.700
比如我刚才已经提到的

1961
1:10:44.700 --> 1:10:46.700
它的技术成熟度

1962
1:10:46.700 --> 1:10:48.700
程度有很多的表现啊

1963
1:10:48.700 --> 1:10:51.700
它的代码的这个版本

1964
1:10:51.700 --> 1:10:52.700
它代码的质量

1965
1:10:52.700 --> 1:10:54.700
然后它社区的活跃度

1966
1:10:54.700 --> 1:10:56.700
包括开发的活跃度

1967
1:10:56.700 --> 1:10:58.700
和支持上面的活跃度

1968
1:10:58.700 --> 1:10:59.700
还有文档的质量

1969
1:10:59.700 --> 1:11:01.700
文档的数量

1970
1:11:01.700 --> 1:11:04.700
然后还有它的服务承诺

1971
1:11:04.700 --> 1:11:06.700
哪怕是开源的

1972
1:11:06.700 --> 1:11:07.700
就是没有过商业支持的

1973
1:11:07.700 --> 1:11:09.700
它也会有相应的服务承诺

1974
1:11:09.700 --> 1:11:13.700
其实你是可以去分类的

1975
1:11:13.700 --> 1:11:15.700
就所有的这些都要去纳入考虑

1976
1:11:15.700 --> 1:11:17.700
然后根据你不同的这个类型

1977
1:11:17.700 --> 1:11:20.700
它可能里面就会有不同的权重

1978
1:11:20.700 --> 1:11:23.700
这些我认为都是相对客观的标准

1979
1:11:23.700 --> 1:11:24.700
还要跟其他一些

1980
1:11:24.700 --> 1:11:26.700
不那么客观的标准相结合

1981
1:11:26.700 --> 1:11:30.700
比如说在我们这个团队里面

1982
1:11:30.700 --> 1:11:32.700
它的可接受度

1983
1:11:32.700 --> 1:11:35.700
大家喜不喜欢这样的一个实现

1984
1:11:35.700 --> 1:11:38.700
大家有多少人已经有相应基础

1985
1:11:38.700 --> 1:11:39.700
如果没有基础的

1986
1:11:39.700 --> 1:11:41.700
能不能比较快的上手

1987
1:11:41.700 --> 1:11:42.700
那就涉及到

1988
1:11:42.700 --> 1:11:44.700
比如说我这里有没有一个

1989
1:11:44.700 --> 1:11:46.700
强力的我们叫driver

1990
1:11:46.700 --> 1:11:48.700
就是我要推一个新的技术

1991
1:11:48.700 --> 1:11:51.700
或者我要做一个新的选情的时候

1992
1:11:51.700 --> 1:11:55.700
候选的这几个技术或者是产品

1993
1:11:55.700 --> 1:11:57.700
有没有足够强力的driver

1994
1:11:57.700 --> 1:11:58.700
假设我选了这个

1995
1:11:58.700 --> 1:12:00.700
你这几个人作为driver

1996
1:12:00.700 --> 1:12:03.700
你就要去push整个团队去接受它

1997
1:12:03.700 --> 1:12:04.700
那就包括培训

1998
1:12:04.700 --> 1:12:08.700
包括你们带头去做好框架和例子

1999
1:12:08.700 --> 1:12:12.700
或者提供这个问答的这种支持

2000
1:12:12.700 --> 1:12:14.700
小伙伴遇到问题找你

2001
1:12:14.700 --> 1:12:15.700
你得能够解决

2002
1:12:15.700 --> 1:12:18.700
所有这一些全部要放进去

2003
1:12:18.700 --> 1:12:21.700
你最后才会做出一个相对风险低一点的

2004
1:12:21.700 --> 1:12:24.700
这样的一个决策

2005
1:12:24.700 --> 1:12:26.700
这种决策甚至不仅仅是技术

2006
1:12:26.700 --> 1:12:28.700
包括一些流程上的东西也是这样

2007
1:12:28.700 --> 1:12:31.700
现在很多技术都是跟流程相关的

2008
1:12:31.700 --> 1:12:32.700
比如git

2009
1:12:32.700 --> 1:12:34.700
我采用哪一种原代码

2010
1:12:34.700 --> 1:12:36.700
或者版本管理的流程

2011
1:12:36.700 --> 1:12:37.700
这种东西也都会纳入考虑

2012
1:12:37.700 --> 1:12:39.700
但是比较遗憾的是

2013
1:12:39.700 --> 1:12:41.700
现在大部分的技术团队

2014
1:12:41.700 --> 1:12:42.700
在做这类决策的时候

2015
1:12:42.700 --> 1:12:44.700
是相对来讲比较随意的

2016
1:12:44.700 --> 1:12:46.700
我们看到很多这样的例子

2017
1:12:46.700 --> 1:12:47.700
不仅中国的

2018
1:12:47.700 --> 1:12:48.700
国外的也很多

2019
1:12:48.700 --> 1:12:51.700
他经验上面可能不支持他做这种

2020
1:12:51.700 --> 1:12:53.700
比较严谨的这种过程

2021
1:12:53.700 --> 1:12:55.700
大公司会好一点

2022
1:12:55.700 --> 1:12:57.700
但大公司会陷入另外一些问题

2023
1:12:57.700 --> 1:12:59.700
比如偏保守

2024
1:12:59.700 --> 1:13:02.700
比如新技术不敢动

2025
1:13:02.700 --> 1:13:04.700
或者流程太过复杂

2026
1:13:04.700 --> 1:13:06.700
对 就是会走到另一个极端上去

2027
1:13:09.700 --> 1:13:11.700
所以其实我还挺好奇

2028
1:13:11.700 --> 1:13:14.700
王老师你们在学校里面

2029
1:13:14.700 --> 1:13:15.700
在讲软件工程的时候

2030
1:13:15.700 --> 1:13:18.700
有没有把开源纳入到

2031
1:13:18.700 --> 1:13:21.700
软件工程的一个考虑的范畴

2032
1:13:21.700 --> 1:13:23.700
或者这种叫开放式的软件工程

2033
1:13:23.700 --> 1:13:24.700
对

2034
1:13:24.700 --> 1:13:26.700
我是这么觉得的

2035
1:13:26.700 --> 1:13:30.700
至少我没太看到

2036
1:13:30.700 --> 1:13:32.700
如果把开源这件事情纳入进去

2037
1:13:32.700 --> 1:13:35.700
是以一个更加宏大的视野去思考的

2038
1:13:35.700 --> 1:13:36.700
这个我是没看到的

2039
1:13:36.700 --> 1:13:38.700
但是有什么呢

2040
1:13:38.700 --> 1:13:41.700
它确实也有开源的一些要素

2041
1:13:41.700 --> 1:13:43.700
对 因为现在开源挺热闹

2042
1:13:43.700 --> 1:13:47.700
开源也在和各个课程去做结合

2043
1:13:47.700 --> 1:13:49.700
软工其实也是一个

2044
1:13:49.700 --> 1:13:53.700
但是它去讲软工的这种开源的时候

2045
1:13:53.700 --> 1:13:55.700
其实更多的还只是说

2046
1:13:55.700 --> 1:13:58.700
就是想利用GitHub GT

2047
1:13:58.700 --> 1:14:00.700
去做这种单码拓广和开发

2048
1:14:00.700 --> 1:14:02.700
还并没有去思考

2049
1:14:02.700 --> 1:14:04.700
我的现在的软件构建

2050
1:14:04.700 --> 1:14:07.700
实际上是要在一个开放式的

2051
1:14:07.700 --> 1:14:08.700
一个大环境里面

2052
1:14:08.700 --> 1:14:10.700
并且有这么多的一些依赖

2053
1:14:10.700 --> 1:14:13.700
和这么多的一些安全风险的一些问题

2054
1:14:13.700 --> 1:14:14.700
这些其实并没有讲

2055
1:14:14.700 --> 1:14:16.700
而且我也观察到

2056
1:14:16.700 --> 1:14:18.700
我们学校的软件工程

2057
1:14:18.700 --> 1:14:21.700
它确实是那么的偏

2058
1:14:21.700 --> 1:14:23.700
单码和工程这方面

2059
1:14:23.700 --> 1:14:25.700
不太去偏人和管理的方面

2060
1:14:25.700 --> 1:14:27.700
包括一些风险

2061
1:14:27.700 --> 1:14:30.700
这块其实讲的基本上也挺少的

2062
1:14:30.700 --> 1:14:33.700
这是我觉得现在和

2063
1:14:33.700 --> 1:14:34.700
企业工业界里面

2064
1:14:34.700 --> 1:14:37.700
其实有一个还挺大的一个鸿沟

2065
1:14:37.700 --> 1:14:43.700
其实我觉得老庄提的开放的软件工程

2066
1:14:43.700 --> 1:14:44.700
这个概念

2067
1:14:44.700 --> 1:14:47.700
如果落实到学校里的教育问题上

2068
1:14:47.700 --> 1:14:52.700
没有必要太过于宏大的论述

2069
1:14:52.700 --> 1:14:55.700
它完全可以从一些相对比较细的事情

2070
1:14:55.700 --> 1:14:56.700
上面去开展

2071
1:14:56.700 --> 1:14:59.700
比如学生他尤其二年级三年级

2072
1:14:59.700 --> 1:15:01.700
他要做一些具体的项目

2073
1:15:01.700 --> 1:15:05.700
来作为他的一门课程的考核的

2074
1:15:05.700 --> 1:15:07.700
甚至有一些很夸张的

2075
1:15:07.700 --> 1:15:09.700
之前不是引起过争议的

2076
1:15:09.700 --> 1:15:11.700
清华的某系的

2077
1:15:11.700 --> 1:15:13.700
要求写一个在线教育平台

2078
1:15:13.700 --> 1:15:15.700
你们记得这事吗

2079
1:15:15.700 --> 1:15:16.700
对

2080
1:15:16.700 --> 1:15:18.700
这个是远在我们节目开张之前

2081
1:15:18.700 --> 1:15:20.700
所以一直没有轮到去吐槽这事

2082
1:15:20.700 --> 1:15:23.700
但这个事其实挺有意思的

2083
1:15:23.700 --> 1:15:26.700
让一个二三年级的学生

2084
1:15:26.700 --> 1:15:27.700
作为课程设计

2085
1:15:27.700 --> 1:15:28.700
去写一个在线教育平台

2086
1:15:28.700 --> 1:15:30.700
这是不是一个很荒谬的事情

2087
1:15:30.700 --> 1:15:31.700
从某种意义上来讲

2088
1:15:31.700 --> 1:15:33.700
其实是完全可以做到的

2089
1:15:33.700 --> 1:15:35.700
如果他很善于

2090
1:15:35.700 --> 1:15:38.700
从开源的领域去攫取养分

2091
1:15:38.700 --> 1:15:41.700
很善于选型和做一些捏合组合的话

2092
1:15:41.700 --> 1:15:43.700
其实是可以搭出一个

2093
1:15:43.700 --> 1:15:46.700
像模像样的框架出来的

2094
1:15:46.700 --> 1:15:48.700
因为在线教育里面

2095
1:15:48.700 --> 1:15:49.700
几乎所有的模块

2096
1:15:49.700 --> 1:15:52.700
都有相当不错的开源实现

2097
1:15:52.700 --> 1:15:54.700
你做成一个真正市场产品

2098
1:15:54.700 --> 1:15:55.700
这不可能

2099
1:15:55.700 --> 1:15:56.700
差太远了

2100
1:15:56.700 --> 1:15:57.700
但是搭起一个

2101
1:15:57.700 --> 1:15:59.700
作为课程设计的框子出来

2102
1:15:59.700 --> 1:16:00.700
让他像模像样的

2103
1:16:00.700 --> 1:16:02.700
可以发布课程

2104
1:16:02.700 --> 1:16:04.700
然后去注册课程

2105
1:16:04.700 --> 1:16:06.700
然后去在在线课

2106
1:16:06.700 --> 1:16:07.700
是完全可以做到的

2107
1:16:07.700 --> 1:16:09.700
但是这个课程设计里面

2108
1:16:09.700 --> 1:16:10.700
最关键的部分

2109
1:16:10.700 --> 1:16:13.700
不是那门课程要考核的

2110
1:16:13.700 --> 1:16:14.700
那门课程是啥

2111
1:16:14.700 --> 1:16:15.700
是一门C++的编程课程

2112
1:16:15.700 --> 1:16:17.700
你们记得这个案例吗

2113
1:16:17.700 --> 1:16:18.700
我知道 是的

2114
1:16:18.700 --> 1:16:21.700
它是C++编程这么一门课程

2115
1:16:21.700 --> 1:16:23.700
然后考核了这么一个课题

2116
1:16:23.700 --> 1:16:25.700
这个就极其荒谬了

2117
1:16:25.700 --> 1:16:27.700
因为C++编程这个课程

2118
1:16:27.700 --> 1:16:28.700
绝对不是考核

2119
1:16:28.700 --> 1:16:30.700
我刚才说那些东西

2120
1:16:30.700 --> 1:16:31.700
是吧

2121
1:16:31.700 --> 1:16:32.700
C++考核的是

2122
1:16:32.700 --> 1:16:35.700
C语言加上面向对象那些东西

2123
1:16:35.700 --> 1:16:36.700
以及对C++领域的

2124
1:16:36.700 --> 1:16:37.700
比如标准库啊

2125
1:16:37.700 --> 1:16:38.700
这东西的掌握

2126
1:16:38.700 --> 1:16:40.700
那它得围绕这个设计

2127
1:16:40.700 --> 1:16:42.700
我说这个意思就是

2128
1:16:42.700 --> 1:16:44.700
学校里面去教一门课的时候

2129
1:16:44.700 --> 1:16:45.700
它不在于说

2130
1:16:45.700 --> 1:16:47.700
给它一个多么高大上的名字

2131
1:16:47.700 --> 1:16:49.700
而在于说你这个课程的实践过程

2132
1:16:49.700 --> 1:16:51.700
是不是真的面向

2133
1:16:51.700 --> 1:16:53.700
未来行业里的实践的那种

2134
1:16:53.700 --> 1:16:55.700
具体真实的那种场景

2135
1:16:55.700 --> 1:16:57.700
比如说我们随便

2136
1:16:57.700 --> 1:16:59.700
做一个课程课题

2137
1:16:59.700 --> 1:17:01.700
一开始的时候我们就要强调

2138
1:17:01.700 --> 1:17:03.700
你这个课题你要完成它

2139
1:17:03.700 --> 1:17:05.700
有多少事情

2140
1:17:05.700 --> 1:17:06.700
是要你自己写代码的

2141
1:17:06.700 --> 1:17:07.700
有多少事情

2142
1:17:07.700 --> 1:17:11.700
是你要选一个优秀的第三方实践

2143
1:17:11.700 --> 1:17:13.700
这本身就是我们现在

2144
1:17:13.700 --> 1:17:15.700
我不知道表委跟王老师

2145
1:17:15.700 --> 1:17:17.700
如果我们现在自己要做一个项目

2146
1:17:17.700 --> 1:17:19.700
做一个小工具给自己用

2147
1:17:19.700 --> 1:17:20.700
其实思维就是这样的

2148
1:17:20.700 --> 1:17:21.700
就这个工具

2149
1:17:21.700 --> 1:17:22.700
有没有现成的工具

2150
1:17:22.700 --> 1:17:23.700
有现成的工具我就用

2151
1:17:23.700 --> 1:17:24.700
是吧

2152
1:17:24.700 --> 1:17:25.700
然后发现没有

2153
1:17:25.700 --> 1:17:26.700
但是有接近的

2154
1:17:26.700 --> 1:17:28.700
这个接近的差什么呢

2155
1:17:28.700 --> 1:17:29.700
差的部分

2156
1:17:29.700 --> 1:17:30.700
找了半天没找到

2157
1:17:30.700 --> 1:17:31.700
得我自己去做

2158
1:17:31.700 --> 1:17:32.700
那我就OK

2159
1:17:32.700 --> 1:17:34.700
我在现成的实践的基础之上

2160
1:17:34.700 --> 1:17:35.700
去加进我要的东西

2161
1:17:35.700 --> 1:17:38.700
这就成了我最后的一个成果了

2162
1:17:38.700 --> 1:17:41.700
所以其实所谓开放性的软件工程

2163
1:17:41.700 --> 1:17:43.700
就是拿来主义

2164
1:17:43.700 --> 1:17:46.700
和这种结构化的捏合

2165
1:17:46.700 --> 1:17:48.700
就是你首先要有一个很好的架构

2166
1:17:48.700 --> 1:17:50.700
可以拿来并且很好的去捏合

2167
1:17:50.700 --> 1:17:52.700
这个思维过程

2168
1:17:52.700 --> 1:17:53.700
怎么教给学生呢

2169
1:17:53.700 --> 1:17:55.700
这才是我觉得比较有价值的一个点

2170
1:17:55.700 --> 1:17:57.700
就这是很实用的

2171
1:17:57.700 --> 1:17:59.700
他未来一定会反复一辈子

2172
1:17:59.700 --> 1:18:01.700
不停的用到这样的一个逻辑

2173
1:18:01.700 --> 1:18:02.700
那就会回到刚才我们说的

2174
1:18:02.700 --> 1:18:04.700
我去选择一个

2175
1:18:04.700 --> 1:18:05.700
我要做一个东西

2176
1:18:05.700 --> 1:18:06.700
这个东西到底有没有

2177
1:18:06.700 --> 1:18:08.700
有的话我为什么不用这个现成的

2178
1:18:08.700 --> 1:18:09.700
好

2179
1:18:09.700 --> 1:18:10.700
如果这个现成的我不能用它

2180
1:18:10.700 --> 1:18:11.700
我必须自己做

2181
1:18:11.700 --> 1:18:12.700
那我做的时候

2182
1:18:12.700 --> 1:18:13.700
哪一东西是我可以借鉴

2183
1:18:13.700 --> 1:18:16.700
或者直接拿来用的组件

2184
1:18:16.700 --> 1:18:18.700
这些组件我怎么选择

2185
1:18:18.700 --> 1:18:21.700
比如最简单的这个前端框架

2186
1:18:21.700 --> 1:18:23.700
Vue跟这个React

2187
1:18:23.700 --> 1:18:24.700
或者其他乱七八糟

2188
1:18:24.700 --> 1:18:25.700
还有一堆其他的

2189
1:18:25.700 --> 1:18:26.700
我到底怎么选

2190
1:18:26.700 --> 1:18:27.700
我选的时候

2191
1:18:27.700 --> 1:18:28.700
主要考量的标准是什么

2192
1:18:28.700 --> 1:18:30.700
假设我们能引导学生去

2193
1:18:30.700 --> 1:18:32.700
按这个逻辑去思考问题

2194
1:18:32.700 --> 1:18:34.700
其实我觉得就已经很接近

2195
1:18:34.700 --> 1:18:36.700
未来的行业实践了

2196
1:18:36.700 --> 1:18:39.700
我有一个很重要的想法

2197
1:18:39.700 --> 1:18:41.700
我刚才突然想到的

2198
1:18:41.700 --> 1:18:43.700
就是学校的教育不是这样的

2199
1:18:43.700 --> 1:18:44.700
李俊

2200
1:18:44.700 --> 1:18:46.700
学校的教育其实非常的

2201
1:18:46.700 --> 1:18:49.700
强调自己独立完成

2202
1:18:49.700 --> 1:18:51.700
所谓的独立完成

2203
1:18:51.700 --> 1:18:53.700
甚至老师会去看

2204
1:18:53.700 --> 1:18:55.700
说这个学生教的作业

2205
1:18:55.700 --> 1:18:57.700
是不是从网上的哪个软件

2206
1:18:57.700 --> 1:18:59.700
搞过来抄一抄改一改

2207
1:18:59.700 --> 1:19:01.700
然后就变成自己的东西

2208
1:19:01.700 --> 1:19:04.700
而且拿分他不会高

2209
1:19:04.700 --> 1:19:06.700
因为他不是自己

2210
1:19:06.700 --> 1:19:08.700
从头到底做完的

2211
1:19:08.700 --> 1:19:09.700
就不管是什么作业

2212
1:19:09.700 --> 1:19:11.700
那么其实如果真的要改变

2213
1:19:11.700 --> 1:19:12.700
其实真的要改变的

2214
1:19:12.700 --> 1:19:14.700
教育的评判标准是

2215
1:19:14.700 --> 1:19:17.700
我们应该鼓励更加聪明的抄袭

2216
1:19:17.700 --> 1:19:20.700
或者说更加聪明的重复利用

2217
1:19:20.700 --> 1:19:21.700
而这件事情

2218
1:19:21.700 --> 1:19:23.700
在学校的计算机教育里面

2219
1:19:23.700 --> 1:19:25.700
其实之前是不太

2220
1:19:25.700 --> 1:19:27.700
往这个方向去引导的

2221
1:19:27.700 --> 1:19:29.700
我觉得是两个问题

2222
1:19:29.700 --> 1:19:31.700
第一就是你到底要考核的是什么

2223
1:19:31.700 --> 1:19:33.700
这个你得有明确的

2224
1:19:33.700 --> 1:19:35.700
比如说我现在要考核的

2225
1:19:35.700 --> 1:19:37.700
就是某个特定算法的实现

2226
1:19:37.700 --> 1:19:38.700
那你当然不能抄

2227
1:19:38.700 --> 1:19:39.700
你得给我自个做

2228
1:19:39.700 --> 1:19:43.700
而且我很可能会把这个题目改一改

2229
1:19:43.700 --> 1:19:45.700
我把题目改的

2230
1:19:45.700 --> 1:19:47.700
你现在世界上就没有完全一样的

2231
1:19:47.700 --> 1:19:50.700
你必须得自己去思考

2232
1:19:50.700 --> 1:19:51.700
可以借鉴别人的一些东西

2233
1:19:51.700 --> 1:19:52.700
但你必须自己去思考

2234
1:19:52.700 --> 1:19:54.700
你才能完成这个命题

2235
1:19:54.700 --> 1:19:55.700
这个是我出题目的时候

2236
1:19:55.700 --> 1:19:56.700
就要去考虑的事情

2237
1:19:56.700 --> 1:19:58.700
但是我们刚才假设说

2238
1:19:58.700 --> 1:20:01.700
是软件工程方面的课程

2239
1:20:01.700 --> 1:20:02.700
那很明显

2240
1:20:02.700 --> 1:20:03.700
你是不是自己实现

2241
1:20:03.700 --> 1:20:05.700
或者自己实现的比重有多大

2242
1:20:05.700 --> 1:20:06.700
不是关键

2243
1:20:06.700 --> 1:20:08.700
反而是你刚才说的

2244
1:20:08.700 --> 1:20:09.700
如何正确的

2245
1:20:09.700 --> 1:20:11.700
有生产力的

2246
1:20:11.700 --> 1:20:13.700
聪明的去抄

2247
1:20:13.700 --> 1:20:16.700
反而变成是很重要的一个环节

2248
1:20:16.700 --> 1:20:17.700
所以我觉得

2249
1:20:17.700 --> 1:20:19.700
你到底要考什么

2250
1:20:19.700 --> 1:20:23.700
你这门课程最终是希望学生们具备什么能力

2251
1:20:23.700 --> 1:20:26.700
这个得一开始就想得很明白

2252
1:20:26.700 --> 1:20:27.700
有一些基础课程

2253
1:20:27.700 --> 1:20:31.700
它就是训练这个学生的思维的

2254
1:20:31.700 --> 1:20:32.700
比如像之前

2255
1:20:32.700 --> 1:20:35.700
我跟王老师我们合作那个课程

2256
1:20:35.700 --> 1:20:37.700
那就是入门嘛

2257
1:20:37.700 --> 1:20:38.700
一张白纸

2258
1:20:38.700 --> 1:20:40.700
怎么学会编程思维

2259
1:20:40.700 --> 1:20:43.700
那那个里面设计的两个题目

2260
1:20:43.700 --> 1:20:45.700
都是业界已经有的

2261
1:20:45.700 --> 1:20:46.700
但是我把它改的

2262
1:20:46.700 --> 1:20:51.700
你必须得自己跟着我的思路一点点去走

2263
1:20:51.700 --> 1:20:53.700
我不仅要看你最后的答案

2264
1:20:53.700 --> 1:20:55.700
我要看你的过程

2265
1:20:55.700 --> 1:20:57.700
所以这种就变成他没法抄

2266
1:20:57.700 --> 1:20:58.700
他必须跟着我的思路

2267
1:20:58.700 --> 1:21:00.700
一步一步的去完成这个课题

2268
1:21:00.700 --> 1:21:02.700
这种我觉得是要精心设计的

2269
1:21:02.700 --> 1:21:03.700
那如果说到了工程领域

2270
1:21:03.700 --> 1:21:07.700
我现在要培养的不是他理解编程逻辑了

2271
1:21:07.700 --> 1:21:10.700
而是怎么工程性的完成一个产品

2272
1:21:10.700 --> 1:21:11.700
那这个时候

2273
1:21:11.700 --> 1:21:15.700
哪怕80%的东西都是使用的第三方开源库

2274
1:21:15.700 --> 1:21:16.700
完全OK

2275
1:21:16.700 --> 1:21:18.700
那我主要考核的是他会不会选

2276
1:21:18.700 --> 1:21:20.700
会不会捏合

2277
1:21:20.700 --> 1:21:22.700
考察点就变成这些东西了

2278
1:21:22.700 --> 1:21:24.700
所以这个我觉得是挺复杂的问题

2279
1:21:24.700 --> 1:21:26.700
但逻辑上我觉得没错

2280
1:21:26.700 --> 1:21:28.700
因为现在就是我们刚才讲的

2281
1:21:28.700 --> 1:21:31.700
软件工程现在已经进入了新的阶段

2282
1:21:31.700 --> 1:21:33.700
这个阶段就是跨越了一个里程碑

2283
1:21:33.700 --> 1:21:37.700
就是基本上市面上的软件

2284
1:21:37.700 --> 1:21:40.700
里面使用第三方开源代码的比重

2285
1:21:40.700 --> 1:21:42.700
都超过一半了

2286
1:21:42.700 --> 1:21:43.700
极少有例外

2287
1:21:43.700 --> 1:21:44.700
是吧

2288
1:21:44.700 --> 1:21:45.700
这个里面有很多统计数据

2289
1:21:45.700 --> 1:21:48.700
我相信可能更有说服力

2290
1:21:48.700 --> 1:21:49.700
那这种情况下

2291
1:21:49.700 --> 1:21:50.700
自己写的部分

2292
1:21:50.700 --> 1:21:54.700
就是攻坚的内核的那些功能和算法

2293
1:21:54.700 --> 1:21:55.700
其他的大量的

2294
1:21:55.700 --> 1:21:57.700
其实都是捏合其他东西进来

2295
1:21:57.700 --> 1:21:59.700
那这本身就是很大的能力

2296
1:21:59.700 --> 1:22:00.700
你这个捏错了

2297
1:22:00.700 --> 1:22:01.700
你选错了

2298
1:22:01.700 --> 1:22:03.700
你本身就很糟糕

2299
1:22:03.700 --> 1:22:05.700
对的其实就是要设置

2300
1:22:05.700 --> 1:22:07.700
专门针对这一类能力

2301
1:22:07.700 --> 1:22:09.700
培养与考核的课程

2302
1:22:09.700 --> 1:22:12.700
而不是传统的那些课程上面

2303
1:22:12.700 --> 1:22:14.700
去做这样的一些事

2304
1:22:14.700 --> 1:22:16.700
是的

2305
1:22:16.700 --> 1:22:17.700
科汉两位还有什么

2306
1:22:17.700 --> 1:22:19.700
其他的要补充的吗

2307
1:22:19.700 --> 1:22:21.700
我就期待王老师后续

2308
1:22:21.700 --> 1:22:23.700
在课程设计上面

2309
1:22:23.700 --> 1:22:25.700
我们可以一起来琢磨琢磨

2310
1:22:25.700 --> 1:22:27.700
我觉得这是一个非常

2311
1:22:27.700 --> 1:22:29.700
可以玩的深入的领域

2312
1:22:29.700 --> 1:22:30.700
好的

2313
1:22:30.700 --> 1:22:32.700
我们现在学校可以做那个了

2314
1:22:32.700 --> 1:22:34.700
可以做微专业了

2315
1:22:34.700 --> 1:22:37.700
大概五到六门课

2316
1:22:37.700 --> 1:22:38.700
10个学分

2317
1:22:38.700 --> 1:22:41.700
对我觉得也许可以在这上面去

2318
1:22:41.700 --> 1:22:43.700
这是个有意思的方向

2319
1:22:43.700 --> 1:22:46.700
对因为它可以做新的课程体系

2320
1:22:46.700 --> 1:22:47.700
对考核

2321
1:22:47.700 --> 1:22:49.700
这个我们后面抽空

2322
1:22:49.700 --> 1:22:50.700
比如说下次

2323
1:22:50.700 --> 1:22:52.700
我们也可以专门聊聊这件事情

2324
1:22:52.700 --> 1:22:53.700
好

2325
1:22:55.700 --> 1:22:57.700
挺好的启发

2326
1:22:57.700 --> 1:23:00.700
好那我们今天就先到这吧

2327
1:23:00.700 --> 1:23:01.700
好

2328
1:23:01.700 --> 1:23:02.700
好嘞

2329
1:23:02.700 --> 1:23:03.700
谢谢拜拜

2330
1:23:03.700 --> 1:23:12.700
拜拜

