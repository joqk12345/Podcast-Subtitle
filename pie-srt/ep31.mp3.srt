0
0:00:00.000 --> 0:00:02.640
各位朋友大家好

1
0:00:02.640 --> 0:00:05.240
欢迎来到后互联网时代的乱谈

2
0:00:05.240 --> 0:00:07.240
今天在周末的下午

3
0:00:07.240 --> 0:00:10.160
我赵立跟我们几个朋友

4
0:00:10.160 --> 0:00:11.400
这个老庄

5
0:00:11.400 --> 0:00:12.600
大家好

6
0:00:12.600 --> 0:00:13.640
王老师

7
0:00:13.640 --> 0:00:14.640
大家好

8
0:00:14.640 --> 0:00:16.040
我们来聊天

9
0:00:16.040 --> 0:00:20.440
最近的这个事还挺多的

10
0:00:20.440 --> 0:00:23.360
今天我们重点可能会聊几个话题

11
0:00:23.360 --> 0:00:25.600
也首先一个呢

12
0:00:25.600 --> 0:00:27.520
是最近大家也比较关注的

13
0:00:27.520 --> 0:00:29.160
也有很多人在问起来的

14
0:00:29.160 --> 0:00:32.840
就是关于这个国际形势的变化

15
0:00:32.840 --> 0:00:35.600
就是这个俄罗斯跟乌克兰这边的

16
0:00:35.600 --> 0:00:37.400
这个事呢

17
0:00:37.400 --> 0:00:41.640
其实它跟我们这个节目的关联没有那么大

18
0:00:41.640 --> 0:00:44.000
因为它科技上的东西不多

19
0:00:44.000 --> 0:00:46.840
但是它对于未来的走势影响还是挺大的

20
0:00:46.840 --> 0:00:49.880
而且很可能会影响我们每一个人

21
0:00:49.880 --> 0:00:51.640
这个话题也很大

22
0:00:51.640 --> 0:00:54.840
今天没有时间这个很详细的展开

23
0:00:54.840 --> 0:00:56.480
我就简单说一说

24
0:00:56.480 --> 0:01:00.280
我最近的一些观察和判断

25
0:01:00.280 --> 0:01:02.280
其实这个问题

26
0:01:02.280 --> 0:01:04.440
它的一个特点就是

27
0:01:04.440 --> 0:01:06.680
信息很多很杂

28
0:01:06.680 --> 0:01:09.760
而且信息的质量两有不齐

29
0:01:09.760 --> 0:01:12.640
就是有非常多的假信息

30
0:01:12.640 --> 0:01:15.960
但是观察这样的问题也有一些方法

31
0:01:15.960 --> 0:01:17.080
时间关系

32
0:01:17.080 --> 0:01:20.120
我今天就不去详细讲东西了

33
0:01:20.120 --> 0:01:22.600
只讲我看到的一些结论

34
0:01:22.600 --> 0:01:24.640
就是我分析出来的一些结论

35
0:01:24.640 --> 0:01:26.880
首先就是

36
0:01:26.880 --> 0:01:30.000
目前可以说正式的进入了

37
0:01:30.000 --> 0:01:33.480
这个俄乌的战争的第二阶段了

38
0:01:33.480 --> 0:01:35.560
就是俄罗斯宣布动员这件事情

39
0:01:35.560 --> 0:01:37.000
这件事情有一个时间线

40
0:01:37.000 --> 0:01:38.520
简单给大家理一下

41
0:01:38.520 --> 0:01:42.720
就首先是这个乌克兰发起了一次

42
0:01:42.720 --> 0:01:45.560
比较大规模的这个反击

43
0:01:45.560 --> 0:01:47.520
那这个反击的效果呢

44
0:01:47.520 --> 0:01:51.400
首先是在南部在赫尔松这边去

45
0:01:51.400 --> 0:01:52.720
造了一些事

46
0:01:52.720 --> 0:01:55.280
但实际上真正的力量投入在北边

47
0:01:55.280 --> 0:01:56.360
就是哈尔科夫

48
0:01:56.360 --> 0:02:00.080
然后把哈尔科夫原来俄国占领的一些据点

49
0:02:00.080 --> 0:02:01.880
就拿回来了

50
0:02:01.880 --> 0:02:04.960
但实际上之前在大概9月初

51
0:02:04.960 --> 0:02:07.200
就看到有一些这个

52
0:02:07.200 --> 0:02:11.120
开源情报的这个信息源

53
0:02:11.120 --> 0:02:14.440
就说大概在9月的7号8号左右

54
0:02:14.440 --> 0:02:17.000
就是开始反攻之前

55
0:02:17.000 --> 0:02:19.960
其实俄国占领哈尔科夫的很多军队

56
0:02:19.960 --> 0:02:21.320
已经退回去了

57
0:02:21.320 --> 0:02:23.320
退回去的原因现在不确定

58
0:02:23.320 --> 0:02:25.000
但是大家可能猜测

59
0:02:25.000 --> 0:02:28.560
这是时间线的第一个阶段

60
0:02:28.560 --> 0:02:31.000
就是俄国退了一些人回去

61
0:02:31.000 --> 0:02:33.840
然后乌克兰趁势占领了北部的

62
0:02:33.840 --> 0:02:36.320
这个一些湿地

63
0:02:36.320 --> 0:02:40.240
这是第一个关键的时间点

64
0:02:40.240 --> 0:02:42.320
那么这个时间发生之后呢

65
0:02:42.320 --> 0:02:46.080
俄罗斯其实没有采取很立刻的一些行动

66
0:02:46.080 --> 0:02:48.480
然后第二个时间点就是这个月月中

67
0:02:48.480 --> 0:02:49.920
15号左右

68
0:02:49.920 --> 0:02:53.720
在这个中亚举办的这个上合组织峰会

69
0:02:53.720 --> 0:02:55.240
这个峰会上

70
0:02:55.240 --> 0:02:58.120
普京见了几个重头的

71
0:02:58.120 --> 0:03:00.200
这个国家的领袖

72
0:03:00.200 --> 0:03:02.360
东方两个大国的这个领袖

73
0:03:02.360 --> 0:03:04.440
跟他都有单独的会见

74
0:03:04.440 --> 0:03:06.960
然后这两次会见里面

75
0:03:06.960 --> 0:03:12.400
事后所公开的信息很接近很相似

76
0:03:12.400 --> 0:03:14.120
大家讲了很类似的话

77
0:03:14.120 --> 0:03:14.640
什么话呢

78
0:03:14.640 --> 0:03:19.400
就是说我们对局势非常的关注

79
0:03:19.400 --> 0:03:20.800
关注什么呢

80
0:03:20.800 --> 0:03:23.080
这个没有非常详细的展开

81
0:03:23.080 --> 0:03:24.920
但是各种方面的分析

82
0:03:24.920 --> 0:03:28.680
我们可以猜测就大概聊的是

83
0:03:28.680 --> 0:03:30.240
现在到底怎么样了

84
0:03:30.240 --> 0:03:32.760
怎么还没有搞定

85
0:03:32.760 --> 0:03:34.960
这样拖下去真的好吗

86
0:03:34.960 --> 0:03:37.640
大概是这么样的一些问题

87
0:03:37.640 --> 0:03:39.600
所以普京也做了相应的回应

88
0:03:39.600 --> 0:03:42.160
这是第二个很重要的节点

89
0:03:42.160 --> 0:03:43.880
然后第三个就是刚刚发生的

90
0:03:43.880 --> 0:03:45.360
20号左右的这个事情

91
0:03:45.360 --> 0:03:49.600
就是俄罗斯全国做了一个叫部分动员

92
0:03:49.600 --> 0:03:51.200
它首先是全国范围内的动员

93
0:03:51.200 --> 0:03:53.000
但是它只动员一部分

94
0:03:53.000 --> 0:03:54.080
为什么只动员一部分

95
0:03:54.080 --> 0:03:55.480
也有很多原因

96
0:03:55.480 --> 0:03:58.200
就是跟这个战争的性质有很大关系

97
0:03:58.200 --> 0:04:01.560
它不是一个没有瑕疵的正义战争

98
0:04:01.560 --> 0:04:03.160
它是有很多问题的

99
0:04:03.160 --> 0:04:08.400
所以它在国内要争取这个完全的民众的支持

100
0:04:08.400 --> 0:04:09.160
其实也不容易

101
0:04:09.160 --> 0:04:10.800
所以一直都有所保留

102
0:04:10.800 --> 0:04:11.280
好

103
0:04:11.280 --> 0:04:13.960
那现在俄罗斯到底想干嘛

104
0:04:13.960 --> 0:04:16.600
非常tricky

105
0:04:16.600 --> 0:04:19.360
我现在看到的

106
0:04:19.360 --> 0:04:23.400
他们实际上采取的这个行动是三板斧

107
0:04:23.400 --> 0:04:24.320
哪三板斧呢

108
0:04:24.320 --> 0:04:28.520
第一个是征兵

109
0:04:28.520 --> 0:04:30.760
最少征30万

110
0:04:30.760 --> 0:04:32.360
最多征多少呢

111
0:04:32.360 --> 0:04:35.160
公布出来的这个征兵的这个法令

112
0:04:35.160 --> 0:04:38.520
里面的这个征兵的数量是涂黑的

113
0:04:38.520 --> 0:04:39.840
是涂掉的

114
0:04:39.840 --> 0:04:40.720
涂掉的原因

115
0:04:40.720 --> 0:04:42.960
这个克里姆林宫的发言人也说了

116
0:04:42.960 --> 0:04:46.040
他说这个涉及到这个军事机密

117
0:04:46.040 --> 0:04:48.480
所以这个具体的数量是不能公开的

118
0:04:48.480 --> 0:04:51.040
但是他们国防部长说了最少30万

119
0:04:51.040 --> 0:04:51.800
那最多多少呢

120
0:04:51.800 --> 0:04:52.480
没有人知道

121
0:04:52.480 --> 0:04:55.440
这个可能会是不怕吓着你们

122
0:04:55.440 --> 0:04:56.760
所以就不公布

123
0:04:56.760 --> 0:05:00.360
我觉得这个上限是可能非常高的

124
0:05:00.360 --> 0:05:03.080
可能是比如说100万这样的一个数量

125
0:05:03.080 --> 0:05:05.280
这个俄罗斯是这样的

126
0:05:05.280 --> 0:05:08.960
俄罗斯它的所谓的这个预备兵役制

127
0:05:08.960 --> 0:05:12.960
它的就是所谓它的预备兵役这个群体

128
0:05:12.960 --> 0:05:15.840
正式的群体大概两三百万

129
0:05:15.840 --> 0:05:19.440
然后他们如果按照他们国内的动员法

130
0:05:19.440 --> 0:05:20.480
去征召的话

131
0:05:20.480 --> 0:05:23.800
上限大概是2500万

132
0:05:23.800 --> 0:05:26.200
所以他这一次预留的这个空间

133
0:05:26.200 --> 0:05:30.000
就以后如果再进一步的这个增加动员的话

134
0:05:30.000 --> 0:05:31.960
就不用再申请法令了

135
0:05:31.960 --> 0:05:34.760
所以这个上限可能还比较高

136
0:05:34.760 --> 0:05:37.120
所以征兵的目的是什么呢

137
0:05:37.120 --> 0:05:37.960
是防守

138
0:05:37.960 --> 0:05:41.640
就是守住现在的最关键的几个地区

139
0:05:41.640 --> 0:05:42.480
哪几个地区呢

140
0:05:42.480 --> 0:05:44.760
顿巴斯的两个共和国

141
0:05:44.760 --> 0:05:48.800
然后还有就是这个赫尔松和那个

142
0:05:48.800 --> 0:05:50.480
扎布罗的核电站

143
0:05:50.480 --> 0:05:54.320
这四个地方是他们现在的相当于底线

144
0:05:54.320 --> 0:05:55.920
这四个地方准备攻头

145
0:05:55.920 --> 0:05:58.320
那所以必须要征兵去把它守住

146
0:05:58.320 --> 0:05:59.400
但是不是守得住呢

147
0:05:59.400 --> 0:06:00.400
这个很大的问题

148
0:06:00.400 --> 0:06:06.000
今天刚刚看到的这个一些开源情报的这个信息源

149
0:06:06.000 --> 0:06:09.200
就已经在已经发现了一些动向

150
0:06:09.200 --> 0:06:10.880
就是认为

151
0:06:10.880 --> 0:06:16.680
乌克兰正在准备一次在今明两天就开始的一个大的战役

152
0:06:16.680 --> 0:06:20.400
向这个卢安斯克进攻

153
0:06:20.400 --> 0:06:23.400
卢安斯克这个肯定是俄罗斯不能输的

154
0:06:23.400 --> 0:06:25.120
因为这个是最开始的时候

155
0:06:25.120 --> 0:06:27.760
就说这是我要去

156
0:06:27.760 --> 0:06:29.920
这个拿下的两个共和国

157
0:06:29.920 --> 0:06:31.680
这个顿巴斯的两个共和国

158
0:06:31.680 --> 0:06:35.120
那么这个是很重要的一个节点

159
0:06:35.120 --> 0:06:37.240
到底怎么样不知道我们继续看

160
0:06:37.240 --> 0:06:40.560
这个如果说被乌克兰收回去了的话

161
0:06:40.560 --> 0:06:43.520
那这个可能对俄罗斯的打击会非常大

162
0:06:43.520 --> 0:06:45.960
所以要现在的兵源

163
0:06:45.960 --> 0:06:48.440
现在的这个部队要要他们要想办法顶住

164
0:06:48.440 --> 0:06:52.200
然后后续有30万的部队进来就可以去防守这四个地方

165
0:06:52.200 --> 0:06:54.920
这是三板第一个主要的部分

166
0:06:54.920 --> 0:06:57.600
第二个部分就是这四个地方进行攻头

167
0:06:57.600 --> 0:07:01.240
这个攻头不是简单的说独立这样的攻头

168
0:07:01.240 --> 0:07:04.560
而是独立和加入俄罗斯联邦

169
0:07:04.560 --> 0:07:05.760
那这个迈了一大步

170
0:07:05.760 --> 0:07:08.760
这是之前一直都没有去做的事情

171
0:07:08.760 --> 0:07:13.440
这个也很难说能产生什么效果

172
0:07:13.440 --> 0:07:14.880
因为西方都不认

173
0:07:14.880 --> 0:07:16.200
甚至中国也不会认

174
0:07:16.200 --> 0:07:18.960
这个是很确定的

175
0:07:18.960 --> 0:07:23.000
那么如果确定了他加入俄罗斯的话

176
0:07:23.000 --> 0:07:24.920
那么他就变成俄罗斯的领土了

177
0:07:24.920 --> 0:07:30.600
那么俄罗斯就可以声称自己不是在对外作战

178
0:07:30.600 --> 0:07:33.480
而是在打一场国土防卫战

179
0:07:33.480 --> 0:07:34.760
那么接着第三板斧

180
0:07:34.760 --> 0:07:37.800
第三板斧就是说我现在开始防卫我自己的国土

181
0:07:37.800 --> 0:07:41.120
那如果有人敢来进犯的话

182
0:07:41.120 --> 0:07:44.440
我们可以采取任何手段进行阻止

183
0:07:44.440 --> 0:07:45.480
这是他们公开讲的

184
0:07:45.480 --> 0:07:51.480
那么这个被西方广泛的解释为有可能动用战术核武器

185
0:07:51.480 --> 0:07:54.960
所以现在的三板斧就是第一增兵先守住

186
0:07:54.960 --> 0:07:57.200
第二攻头加入俄罗斯

187
0:07:57.200 --> 0:08:01.080
第三把这个战争的性质转变为一场

188
0:08:01.080 --> 0:08:04.760
俄罗斯的内部的国土防御战

189
0:08:04.760 --> 0:08:06.480
这是他们的算盘了

190
0:08:06.480 --> 0:08:08.400
但能不能做到这个就很难讲

191
0:08:08.400 --> 0:08:10.200
这个接下来要继续观察

192
0:08:10.200 --> 0:08:15.040
但是总的来说就是对我们影响有限

193
0:08:15.040 --> 0:08:19.320
有很多人说帮我们扛住一些压力

194
0:08:19.320 --> 0:08:20.040
其实谈不上

195
0:08:20.040 --> 0:08:21.840
我们的压力照样还在那里

196
0:08:21.840 --> 0:08:26.760
或者说我们趁这个机会跟俄罗斯谈一些条件

197
0:08:26.760 --> 0:08:28.000
这个更加是愚蠢

198
0:08:28.000 --> 0:08:31.040
这个是绝对不可能的事情

199
0:08:31.040 --> 0:08:33.440
总之就是现在我们还是该干嘛干嘛

200
0:08:33.440 --> 0:08:35.320
这事关注就好了

201
0:08:35.320 --> 0:08:40.640
现在不论是我们还是像美国或者西方

202
0:08:40.640 --> 0:08:43.760
其实现在存在着一个合作的契机

203
0:08:43.760 --> 0:08:46.840
就是防止核战争

204
0:08:46.840 --> 0:08:49.400
美国的几大报包括像纽约时报

205
0:08:49.400 --> 0:08:53.040
已经写了一个专门的专栏文章

206
0:08:53.040 --> 0:09:00.360
说拜登现在的主要的工作就是要防止打出核战争来

207
0:09:00.360 --> 0:09:04.480
所以这个一下子变成了一个主轴了

208
0:09:04.480 --> 0:09:06.960
如果说在这件事情之前

209
0:09:06.960 --> 0:09:09.680
世界上打核战争的概率是零的话

210
0:09:09.680 --> 0:09:14.800
那现在可能这个概率变成了比如说万分之一

211
0:09:14.800 --> 0:09:16.240
这个是一个质变

212
0:09:16.240 --> 0:09:20.000
所以大家得去关心的

213
0:09:20.000 --> 0:09:23.920
大概就是这么一个状态

214
0:09:23.920 --> 0:09:26.960
那大家反正现在还在进展当中

215
0:09:26.960 --> 0:09:28.040
关于这件事情

216
0:09:28.040 --> 0:09:29.760
我觉得比较有价值的点是

217
0:09:29.760 --> 0:09:32.720
怎么从那些纷繁的假的信息里面

218
0:09:32.720 --> 0:09:38.000
去看出一些真正真实的和有价值的一些信息

219
0:09:38.000 --> 0:09:41.040
这个回头有机会我们再说吧

220
0:09:41.040 --> 0:09:43.680
OK 老周安跟王老师

221
0:09:43.680 --> 0:09:46.440
你们有什么要说的吗?关于这个事情

222
0:09:46.440 --> 0:09:49.520
我就在想他们这个增兵的事情

223
0:09:49.520 --> 0:09:53.440
增了兵以后就是送到前线去吗?

224
0:09:53.440 --> 0:09:57.200
还是说只是吓唬人做个样子?

225
0:09:57.200 --> 0:10:00.760
我个人认为是肯定要上前线的

226
0:10:00.760 --> 0:10:02.000
原因是两点

227
0:10:02.000 --> 0:10:05.600
第一点真的缺人

228
0:10:05.600 --> 0:10:10.520
这个乌克兰是一个面积非常大的一片国土

229
0:10:10.520 --> 0:10:12.320
60多万平方公里

230
0:10:12.320 --> 0:10:15.560
中国的话只有四个最大的省比它大一点

231
0:10:15.560 --> 0:10:16.600
青海是60多万

232
0:10:16.600 --> 0:10:18.400
就它比青海小一点点

233
0:10:18.400 --> 0:10:21.840
像广东这种大家印象中还比较大的省

234
0:10:21.840 --> 0:10:24.560
其实才十几万平方公里

235
0:10:24.560 --> 0:10:28.680
像台湾这种那更就是一个小林投

236
0:10:28.680 --> 0:10:30.440
所以它特别大

237
0:10:30.440 --> 0:10:34.400
然后俄罗斯和乌克兰在这巨大的领土上面

238
0:10:34.400 --> 0:10:36.920
各自投入的就几十万兵力

239
0:10:36.920 --> 0:10:38.200
根本站都站不住

240
0:10:38.200 --> 0:10:41.200
就相当于就是说你最多只能站几个据点

241
0:10:41.200 --> 0:10:42.400
你这几个据点一撤退

242
0:10:42.400 --> 0:10:45.160
大片的领土就是空着的

243
0:10:45.160 --> 0:10:48.840
好 那这个事对于那些不重要的地带也就算了

244
0:10:48.840 --> 0:10:51.160
但是现在正在攻头的那四个地方

245
0:10:51.160 --> 0:10:52.160
你要守住吧

246
0:10:52.160 --> 0:10:53.600
如果这些地方被打掉的话

247
0:10:53.600 --> 0:10:55.720
人家凭什么攻头支持你

248
0:10:55.720 --> 0:10:58.160
所以两边都会去争夺这个东西

249
0:10:58.160 --> 0:11:00.680
而现在就是兵力是绝对是非常非常缺的

250
0:11:00.680 --> 0:11:02.040
这是肯定的 这是第一

251
0:11:02.040 --> 0:11:05.000
第二 他们现在这一轮征兵也讲得很清楚

252
0:11:05.000 --> 0:11:10.400
说主要征那些有战斗经验的

253
0:11:10.400 --> 0:11:12.040
实际上是退役的军人

254
0:11:12.040 --> 0:11:14.120
这个是主要的部分

255
0:11:14.120 --> 0:11:19.560
或者是已经训练过的一些预备兵

256
0:11:19.560 --> 0:11:22.960
那这些也虽然俄罗斯人口不算多

257
0:11:22.960 --> 0:11:25.360
然后也有各种各样其他的问题

258
0:11:25.360 --> 0:11:28.080
但是要征集几十万这样的人

259
0:11:28.080 --> 0:11:29.040
我觉得还是OK的

260
0:11:29.040 --> 0:11:32.240
然后通过比如说几周的军事训练

261
0:11:32.240 --> 0:11:34.360
然后就上去把人换回来

262
0:11:34.360 --> 0:11:36.400
它是有个轮换的概念的

263
0:11:36.400 --> 0:11:37.480
其实有点像什么

264
0:11:37.480 --> 0:11:43.680
有点像80年代我们国家打的这个对越的这个轮战

265
0:11:43.680 --> 0:11:48.160
当然我们那个时候兵源充足

266
0:11:48.160 --> 0:11:49.400
就是随便打

267
0:11:49.400 --> 0:11:51.640
就是10万人上去

268
0:11:51.640 --> 0:11:53.920
打一段时间撤下来再换10万人上去

269
0:11:53.920 --> 0:11:57.280
这个非常的就没什么大挑战

270
0:11:57.280 --> 0:11:58.920
但对俄罗斯来讲确实是有点挑战

271
0:11:58.920 --> 0:12:00.640
所以它这次会去独立做

272
0:12:00.640 --> 0:12:02.600
但是时间上确实是个问题

273
0:12:02.600 --> 0:12:04.440
我不认为它可以立刻

274
0:12:04.440 --> 0:12:07.360
比如说一周之内完成第一批

275
0:12:07.360 --> 0:12:10.800
比如说5万或者10万人的这样的开进

276
0:12:10.800 --> 0:12:12.360
这个挺难的

277
0:12:12.360 --> 0:12:14.320
所以现在其实从现在开始

278
0:12:14.320 --> 0:12:15.920
接下来的两周

279
0:12:15.920 --> 0:12:19.040
我觉得是一个大变量的时代

280
0:12:19.040 --> 0:12:21.880
因为现在乌克兰背后就是美国和北约了

281
0:12:21.880 --> 0:12:27.520
就是整个情报指挥训练武器装备全都是北约的

282
0:12:27.520 --> 0:12:29.560
也就是实际上是在跟这个世界上

283
0:12:29.560 --> 0:12:31.960
第一流的军事力量和情报力量在打

284
0:12:31.960 --> 0:12:37.000
那么他们一定不会放过这个短暂的这个时间窗口了

285
0:12:37.000 --> 0:12:38.040
就是你正在补血吗

286
0:12:38.040 --> 0:12:43.200
我就趁你没有补到的时候一定会干点什么

287
0:12:43.200 --> 0:12:44.680
所以另外一个传闻

288
0:12:44.680 --> 0:12:47.080
我就想找你求证一下

289
0:12:47.080 --> 0:12:50.760
就是我听说什么俄罗斯从什么博物馆里面

290
0:12:50.760 --> 0:12:54.600
拿出来二战时期的老兵器出来打

291
0:12:54.600 --> 0:12:56.960
确实是这样吗

292
0:12:56.960 --> 0:12:59.760
我觉得可能性不大

293
0:12:59.760 --> 0:13:02.720
所以这应该是个假新闻

294
0:13:02.720 --> 0:13:05.280
现在绝对不会从博物馆找二战的

295
0:13:05.280 --> 0:13:06.600
但是为什么呢

296
0:13:06.600 --> 0:13:10.640
会从这个仓库里面把七八十年代

297
0:13:10.640 --> 0:13:12.800
前苏联造的那些东西拿出来用

298
0:13:12.800 --> 0:13:13.360
这是肯定的

299
0:13:13.360 --> 0:13:15.160
而且一直都在用了

300
0:13:15.160 --> 0:13:16.320
其实之前一直都在用了

301
0:13:16.320 --> 0:13:17.680
但是这些东西到底有多少

302
0:13:17.680 --> 0:13:19.360
能用到什么程度

303
0:13:19.360 --> 0:13:20.640
这个也是很大的问题

304
0:13:20.640 --> 0:13:23.000
比如我举个例子

305
0:13:23.000 --> 0:13:25.160
现在俄罗斯最缺的是什么

306
0:13:25.160 --> 0:13:33.160
其实最缺的是可以在战区外发射的高精度的导弹

307
0:13:33.160 --> 0:13:35.000
比如它这个飞机都不用进入战区

308
0:13:35.000 --> 0:13:37.280
在隔着几百公里的地方

309
0:13:37.280 --> 0:13:38.920
扔一个巡航导弹

310
0:13:38.920 --> 0:13:41.440
然后它飞出去自动命中目标高精度的

311
0:13:41.440 --> 0:13:44.400
那么这种东西其实是现在战争里面非常好用的东西

312
0:13:44.400 --> 0:13:46.600
像美国每次打仗一上来

313
0:13:46.600 --> 0:13:48.640
首先就是战斧开路

314
0:13:48.640 --> 0:13:50.080
就这玩意儿

315
0:13:50.080 --> 0:13:51.960
从海上发射的

316
0:13:51.960 --> 0:13:54.920
从这个空中发射的都可以打

317
0:13:54.920 --> 0:13:56.800
但这种东西的数量

318
0:13:56.800 --> 0:13:59.480
就是很多人认为它好像很多

319
0:13:59.480 --> 0:14:04.480
但其实即使美国它也就是长期维持几千枚

320
0:14:04.480 --> 0:14:05.760
打完就补

321
0:14:05.760 --> 0:14:07.080
但它就维持几千枚

322
0:14:07.080 --> 0:14:08.320
没多少的

323
0:14:08.320 --> 0:14:09.440
俄罗斯可能更少

324
0:14:09.440 --> 0:14:11.360
而且现在可能已经打得差不多了

325
0:14:11.360 --> 0:14:13.720
而且它补充起来比美国慢很多

326
0:14:13.720 --> 0:14:15.600
那什么东西容易做呢

327
0:14:15.600 --> 0:14:18.240
就是扔的这个炸弹

328
0:14:18.240 --> 0:14:20.640
就是没有制导的炸弹

329
0:14:20.640 --> 0:14:23.760
但是它可以由飞机来控制它落点

330
0:14:23.760 --> 0:14:28.960
比如当年这个炸了我们南联盟使馆的那个东西

331
0:14:28.960 --> 0:14:30.360
叫J-DOM

332
0:14:30.360 --> 0:14:33.440
就是一种有带制导能力的一个炸弹

333
0:14:33.440 --> 0:14:38.440
但它要求那个轰炸机必须要飞到那个目标上空

334
0:14:38.440 --> 0:14:40.120
这种东西就很多很多

335
0:14:40.120 --> 0:14:41.040
但这种东西呢

336
0:14:41.040 --> 0:14:45.840
以及那个先进的可以飞到战区上空安全投弹的

337
0:14:45.840 --> 0:14:48.000
那就最好是隐身轰炸机

338
0:14:48.000 --> 0:14:51.360
那这种东西俄罗斯又没有

339
0:14:51.360 --> 0:14:52.360
它铁炸弹很多

340
0:14:52.360 --> 0:14:54.160
但它要扔炸弹就冒风险

341
0:14:54.160 --> 0:14:55.720
所以最近你经常看到

342
0:14:55.720 --> 0:14:59.840
乌克兰会把俄罗斯的这个战斗机打下来

343
0:14:59.840 --> 0:15:04.240
就它必须要冒险去战区上空去投弹

344
0:15:04.240 --> 0:15:08.360
所以就是这个武器它跟不上并不是绝对数量

345
0:15:08.360 --> 0:15:11.920
而是那种好用的跟不上

346
0:15:11.920 --> 0:15:13.240
明白了

347
0:15:13.240 --> 0:15:16.920
总觉得俄罗斯对这场战争的准备是严重不充分的

348
0:15:16.920 --> 0:15:21.080
严重不充分非常不足

349
0:15:21.080 --> 0:15:24.080
所以这个很多军迷也在说

350
0:15:24.080 --> 0:15:26.400
就说这个苏联跟俄罗斯真是好

351
0:15:26.400 --> 0:15:30.400
就是给我们多次示范了这个错误路径

352
0:15:30.400 --> 0:15:33.680
防止我们犯同样的错误

353
0:15:33.680 --> 0:15:36.520
如果我们哪一天必须要干点什么的时候

354
0:15:36.520 --> 0:15:39.200
这个必须要做好充分的准备

355
0:15:39.200 --> 0:15:40.720
至少不能像他们这样

356
0:15:40.720 --> 0:15:42.720
对

357
0:15:44.840 --> 0:15:46.480
还是希望能够早点结束

358
0:15:46.480 --> 0:15:49.440
现在已经疫情挺难的

359
0:15:49.440 --> 0:15:54.640
我认为现在普京和俄罗斯的这个首脑部

360
0:15:54.640 --> 0:15:59.480
他们所采取的策略是冲着尽快结束去的

361
0:15:59.480 --> 0:16:01.920
如果我刚才说的他们这个三板斧

362
0:16:01.920 --> 0:16:03.720
达成了战略目标的话

363
0:16:03.720 --> 0:16:05.600
也就是说守住了

364
0:16:05.600 --> 0:16:06.640
然后攻头了

365
0:16:06.640 --> 0:16:11.160
然后军队驻扎在当地开始做国土防卫的这样的长期建设

366
0:16:11.160 --> 0:16:12.200
像屯垦兵团一样

367
0:16:12.200 --> 0:16:13.480
在那里开始住下来了

368
0:16:13.480 --> 0:16:15.640
那这种达成这个目标之后的话

369
0:16:15.640 --> 0:16:18.800
那其实战争就进入了一个相持阶段了

370
0:16:18.800 --> 0:16:24.120
就有点像这个我们志愿军

371
0:16:24.120 --> 0:16:26.200
这个抗美援朝打的一样

372
0:16:26.200 --> 0:16:27.400
打赢阶段之后

373
0:16:27.400 --> 0:16:28.720
我们就在那个地方停下来

374
0:16:28.720 --> 0:16:29.880
然后互相戳两下

375
0:16:29.880 --> 0:16:33.360
只是谈判的这个辅助手段

376
0:16:33.360 --> 0:16:36.040
因为任何战争都是政治的延续

377
0:16:36.040 --> 0:16:40.120
就你最终一定是围绕一个政治目标去做的

378
0:16:40.120 --> 0:16:42.560
当然军事上的目标很单纯

379
0:16:42.560 --> 0:16:45.120
就是最大限度的杀伤对方的有生力量

380
0:16:45.120 --> 0:16:46.760
但这个本身不解决问题

381
0:16:46.760 --> 0:16:49.400
它解决问题是你杀伤对方有生力量之后

382
0:16:49.400 --> 0:16:51.520
帮助你达成政治目标

383
0:16:51.520 --> 0:16:54.720
那政治目标就是我最后要去谈判

384
0:16:54.720 --> 0:16:56.480
那如果按现在这个搞法

385
0:16:56.480 --> 0:16:58.000
就根本没有谈判的基点

386
0:16:58.000 --> 0:16:59.080
不知道你要啥

387
0:16:59.080 --> 0:17:00.000
现在就明确了

388
0:17:00.000 --> 0:17:02.000
就要这四个地方

389
0:17:02.000 --> 0:17:03.400
你谈不谈吧

390
0:17:03.400 --> 0:17:04.520
你不谈我也反正也战了

391
0:17:04.520 --> 0:17:05.160
就这样战了

392
0:17:05.160 --> 0:17:05.520
就这样

393
0:17:05.520 --> 0:17:06.920
就像克里米亚一样

394
0:17:06.920 --> 0:17:08.000
就搁那了

395
0:17:08.000 --> 0:17:10.160
我就照常做事了

396
0:17:10.160 --> 0:17:12.400
你也不敢来动我

397
0:17:12.400 --> 0:17:13.720
那你不谈损失是你

398
0:17:13.720 --> 0:17:14.520
如果你要谈的话

399
0:17:14.520 --> 0:17:16.600
那我们就谈一个条件

400
0:17:16.600 --> 0:17:17.000
对吧

401
0:17:17.000 --> 0:17:17.560
我是战了

402
0:17:17.560 --> 0:17:18.440
但是我回过头来

403
0:17:18.440 --> 0:17:20.280
我给你安全保证

404
0:17:20.280 --> 0:17:21.560
我怎么怎么样

405
0:17:21.560 --> 0:17:22.880
那就变成这种情况

406
0:17:22.880 --> 0:17:23.680
那这个对俄罗斯来讲

407
0:17:23.680 --> 0:17:25.040
我觉得是非常有利的

408
0:17:25.040 --> 0:17:31.480
所以现在对面肯定是要努力的去阻止这个情况发生了

409
0:17:31.480 --> 0:17:34.720
就是要在局势稳定之前

410
0:17:34.720 --> 0:17:36.920
要拿回尽可能多的地方

411
0:17:36.920 --> 0:17:38.760
所以接下来的

412
0:17:38.760 --> 0:17:40.280
我觉得个把两个月

413
0:17:40.280 --> 0:17:44.600
就是入冬之前的这一两个月会非常非常关键

414
0:17:44.600 --> 0:17:45.280
OK

415
0:17:45.280 --> 0:17:47.400
这个事我们就说到这儿

416
0:17:47.400 --> 0:17:52.600
下面一个话题是我们有我们的听友

417
0:17:52.600 --> 0:17:56.280
在这个节目下面留言问的一个问题

418
0:17:56.280 --> 0:17:58.840
就是想比较系统的了解一下

419
0:17:58.840 --> 0:18:02.000
开源许可证到底是怎么样的一个情况

420
0:18:02.000 --> 0:18:03.560
就到底有哪些开源许可证

421
0:18:03.560 --> 0:18:05.960
他们分别的特点是什么

422
0:18:05.960 --> 0:18:07.360
以及对我们有什么影响

423
0:18:07.360 --> 0:18:08.560
类似这样子的

424
0:18:08.560 --> 0:18:11.000
那这方面就这个

425
0:18:11.000 --> 0:18:13.560
其实我们老庄跟王老师都非常非常专业

426
0:18:13.560 --> 0:18:16.040
所以请这个老庄来跟我们讲一讲

427
0:18:17.680 --> 0:18:19.080
其实不能算专业

428
0:18:19.080 --> 0:18:21.920
我自己因为在这个行当里面

429
0:18:21.920 --> 0:18:24.000
接触了很多年的开源

430
0:18:24.000 --> 0:18:27.200
反而觉得这个开源许可证这件事情

431
0:18:27.200 --> 0:18:28.920
不知道从何说起

432
0:18:28.920 --> 0:18:30.640
觉得这么复杂的事情

433
0:18:30.640 --> 0:18:32.560
真的是几十分钟

434
0:18:32.560 --> 0:18:35.680
或者是简单的一个问答就能讲清楚的吗

435
0:18:35.680 --> 0:18:38.200
反而会觉得特别的复杂

436
0:18:38.200 --> 0:18:40.760
我们先试着讲一讲

437
0:18:40.760 --> 0:18:43.120
第一个就是讲什么是许可证

438
0:18:43.120 --> 0:18:44.840
我们先不说开源许可证

439
0:18:44.840 --> 0:18:46.840
讲什么是许可证

440
0:18:46.840 --> 0:18:49.800
就只说软件的

441
0:18:49.800 --> 0:18:50.960
不说其他的

442
0:18:50.960 --> 0:18:52.400
其他的更复杂

443
0:18:52.400 --> 0:18:54.720
软件的许可证其实很早就有

444
0:18:54.720 --> 0:18:56.600
在有开源之前就有

445
0:18:56.600 --> 0:19:01.200
就是比如说我把一个软件卖给你

446
0:19:01.200 --> 0:19:03.320
同时会有一份文档

447
0:19:03.320 --> 0:19:05.560
这个文档有可能是电子版的

448
0:19:05.560 --> 0:19:07.360
有可能是纸质版的

449
0:19:07.360 --> 0:19:09.920
这里面就规定你能拿来干什么

450
0:19:09.920 --> 0:19:11.760
你不能拿来干什么

451
0:19:11.760 --> 0:19:14.280
比如说这个软件

452
0:19:14.280 --> 0:19:18.360
有可能有些许可证它是卖这个席位的

453
0:19:18.360 --> 0:19:20.680
就比如说我的软件

454
0:19:20.680 --> 0:19:24.240
在你的公司里只准100个人用

455
0:19:24.240 --> 0:19:27.320
因为我只卖了100个席位给你

456
0:19:27.320 --> 0:19:29.100
多于100个不准用

457
0:19:29.100 --> 0:19:30.900
虽然你们公司有1000人

458
0:19:30.900 --> 0:19:33.200
虽然这个软件已经在你们这个公司里了

459
0:19:33.200 --> 0:19:37.040
虽然其实这个软件是可以免费拷贝的

460
0:19:37.040 --> 0:19:39.340
无限拷贝的但是就只有100个人用

461
0:19:39.340 --> 0:19:41.920
而且的话有一些复杂的这种

462
0:19:41.920 --> 0:19:43.440
还带激活码的

463
0:19:43.440 --> 0:19:45.740
就是只有100个人能激活

464
0:19:45.740 --> 0:19:48.300
激活完了以后剩下的人就用不了了

465
0:19:48.300 --> 0:19:49.840
这些都是许可证

466
0:19:49.840 --> 0:19:55.980
但是如果不是附带销售原代码的情况下

467
0:19:55.980 --> 0:19:58.540
那么通常你也没法改

468
0:19:58.540 --> 0:20:01.620
但是有一些商业软件也附带原代码

469
0:20:01.620 --> 0:20:05.200
也会说在公司里面你们可以改

470
0:20:05.200 --> 0:20:08.280
但是你改了之后不能再拿去卖

471
0:20:08.280 --> 0:20:10.840
这也是许可证的规范的范围之一

472
0:20:10.840 --> 0:20:12.620
其实全世界范围内

473
0:20:12.620 --> 0:20:14.680
大概几千几万种许可证吧

474
0:20:14.680 --> 0:20:16.200
就是包括开源软件

475
0:20:16.200 --> 0:20:18.260
还有商业软件的都有的话

476
0:20:18.260 --> 0:20:19.800
那是非常非常多的

477
0:20:19.800 --> 0:20:22.100
而且还在不断地源源不断地产生

478
0:20:22.100 --> 0:20:24.660
因为那些商业的许可证

479
0:20:24.660 --> 0:20:28.760
通常都是公司里面的专业的法律人员自己订的

480
0:20:28.760 --> 0:20:30.560
每个公司互相之间有可能参考一下

481
0:20:30.560 --> 0:20:32.340
有可能互相都不知道

482
0:20:32.340 --> 0:20:34.400
就订了各种各样不同的许可证

483
0:20:34.400 --> 0:20:36.440
这是普通的许可证

484
0:20:36.440 --> 0:20:39.520
开源许可证就更麻烦了

485
0:20:39.520 --> 0:20:41.040
就至少你讲一个概念

486
0:20:41.040 --> 0:20:42.840
就是有广义的开源许可证

487
0:20:42.840 --> 0:20:45.400
和狭义的开源许可证

488
0:20:45.400 --> 0:20:46.940
广义的开源许可证

489
0:20:46.940 --> 0:20:48.220
就是你任何在市面上

490
0:20:48.220 --> 0:20:50.620
通常能够看到的各种开源软件

491
0:20:50.620 --> 0:20:53.340
它背后通常会有一个许可证

492
0:20:53.340 --> 0:20:55.640
可以把它简称为开源许可证

493
0:20:55.640 --> 0:20:57.700
而狭义的许可证

494
0:20:57.700 --> 0:21:00.260
其实只针对于

495
0:21:00.260 --> 0:21:03.840
有一个组织叫开源软件促进会

496
0:21:03.840 --> 0:21:05.120
这个开源软件促进会

497
0:21:05.120 --> 0:21:07.160
它还专门有一个邮件列表

498
0:21:07.160 --> 0:21:10.240
这个邮件列表就专门会去审批

499
0:21:10.240 --> 0:21:13.820
说任何一款什么什么license

500
0:21:13.820 --> 0:21:17.920
是不是符合开源软件的定义叫OSD

501
0:21:17.920 --> 0:21:20.480
如果符合的它会有一个列表

502
0:21:20.480 --> 0:21:22.780
就是这个开源软件促进会

503
0:21:22.780 --> 0:21:24.320
会维护这样一个列表

504
0:21:24.320 --> 0:21:27.400
这里面就表明它认可的

505
0:21:27.400 --> 0:21:29.700
这些软件license

506
0:21:29.700 --> 0:21:34.040
被称之为狭义的开源软件license

507
0:21:34.040 --> 0:21:36.360
然后为什么说这件事情很复杂

508
0:21:36.360 --> 0:21:38.660
因为我们还知道有另外一个

509
0:21:38.660 --> 0:21:40.440
著名的在开源软件之前

510
0:21:40.440 --> 0:21:43.000
就诞生了叫自由软件基金会

511
0:21:43.000 --> 0:21:45.060
然后自由软件基金会发明的

512
0:21:45.060 --> 0:21:47.880
最著名的这个license就叫GPL

513
0:21:47.880 --> 0:21:53.260
就是这个GNU Public License

514
0:21:53.260 --> 0:21:59.400
这个license是一个叫做自由软件的license

515
0:21:59.400 --> 0:22:01.440
接下来复杂的部分来了

516
0:22:01.440 --> 0:22:05.020
它们互相之间是不完全兼容的

517
0:22:05.020 --> 0:22:07.080
就是说有很多的license

518
0:22:07.080 --> 0:22:11.680
同时被自由软件基金会和开源促进会认可

519
0:22:11.680 --> 0:22:13.480
所以一款软件

520
0:22:13.480 --> 0:22:15.780
如果比方它用的是GPL的

521
0:22:15.780 --> 0:22:19.120
那么它通常既可以被称之为开源软件

522
0:22:19.120 --> 0:22:22.180
也可以被称之为自由软件

523
0:22:22.180 --> 0:22:24.740
但是就是有一些软件

524
0:22:24.740 --> 0:22:26.800
它只被OSI认可

525
0:22:26.800 --> 0:22:29.100
因为自由软件基金会的Richard Stoneman

526
0:22:29.100 --> 0:22:30.880
认为这个东西不自由

527
0:22:30.880 --> 0:22:32.680
这个不能够算是自由软件

528
0:22:32.680 --> 0:22:33.960
你最多算开源软件

529
0:22:33.960 --> 0:22:35.500
但是也有反过来的

530
0:22:35.500 --> 0:22:37.540
有一些自由软件的license

531
0:22:37.540 --> 0:22:39.080
OSI是不认的

532
0:22:39.080 --> 0:22:42.660
会说这个只是自由软件

533
0:22:42.660 --> 0:22:43.940
不算开源软件

534
0:22:43.940 --> 0:22:45.480
所以这就非常的绕

535
0:22:45.480 --> 0:22:46.500
就是说

536
0:22:46.500 --> 0:22:48.300
你还记得刚才我在说

537
0:22:48.300 --> 0:22:50.860
如何定义广义的开源许可证吗?

538
0:22:50.860 --> 0:22:52.140
我们在说

539
0:22:52.140 --> 0:22:56.220
大多数市面上我们能够看到的开源软件

540
0:22:56.220 --> 0:22:57.760
所用到的license

541
0:22:57.760 --> 0:23:00.580
就可以称之为广义的开源软件的license

542
0:23:00.580 --> 0:23:01.600
但其实不对

543
0:23:01.600 --> 0:23:05.960
因为其实开源软件这个东西

544
0:23:05.960 --> 0:23:08.780
和自由软件这个东西本身是被license定义的

545
0:23:08.780 --> 0:23:10.300
而不是反过来

546
0:23:10.300 --> 0:23:16.440
所以一个更加严格的说法叫做FL

547
0:23:16.440 --> 0:23:18.740
就是Free Slash

548
0:23:18.740 --> 0:23:20.540
然后是Liberate

549
0:23:20.540 --> 0:23:22.580
就是自由斜杠

550
0:23:22.580 --> 0:23:24.120
然后Open Source

551
0:23:24.120 --> 0:23:29.240
Software就是自由开源软件的license

552
0:23:29.240 --> 0:23:33.080
可以被称之为广义的开源license

553
0:23:33.080 --> 0:23:36.160
好 那么我们去看这个

554
0:23:36.160 --> 0:23:39.740
先不说自由软件对于这个license的定义

555
0:23:39.740 --> 0:23:41.540
我们说开源软件的话

556
0:23:41.540 --> 0:23:43.840
他们有一个比较明确的一个

557
0:23:43.840 --> 0:23:45.620
叫做开源软件定义

558
0:23:45.620 --> 0:23:48.180
其中定义了10条

559
0:23:48.180 --> 0:23:50.500
就是说它其实要点就是说

560
0:23:50.500 --> 0:23:51.780
如果有一款license

561
0:23:51.780 --> 0:23:54.340
你符合这10条标准

562
0:23:54.340 --> 0:23:57.140
那么你在当然其实还是需要经过

563
0:23:57.140 --> 0:24:00.220
OSI的邮件列表里面的那一堆大佬的审批

564
0:24:00.220 --> 0:24:01.760
最后它才会被

565
0:24:01.760 --> 0:24:04.320
确认成为开源软件license

566
0:24:04.320 --> 0:24:05.860
这10条包括什么呢?

567
0:24:05.860 --> 0:24:06.620
比如说

568
0:24:06.620 --> 0:24:08.920
获得这个源代码的人

569
0:24:08.920 --> 0:24:12.240
可以自由的把这个源代码再发布出去

570
0:24:12.240 --> 0:24:13.520
而且

571
0:24:13.520 --> 0:24:15.320
一定要有源代码

572
0:24:15.320 --> 0:24:17.120
你不能够说只有可运行文档

573
0:24:17.120 --> 0:24:18.140
没有源代码

574
0:24:18.140 --> 0:24:20.440
还有就是别人可以修改

575
0:24:20.440 --> 0:24:22.480
修改完了以后还可以再分发

576
0:24:22.480 --> 0:24:24.540
而且的话呢

577
0:24:24.540 --> 0:24:27.860
你不得对任何人或者团体

578
0:24:27.860 --> 0:24:29.140
有差别待遇

579
0:24:29.140 --> 0:24:30.680
你不说我不能够

580
0:24:30.680 --> 0:24:32.220
我不给中国人用

581
0:24:32.220 --> 0:24:33.760
或者说我不给美国人用

582
0:24:33.760 --> 0:24:34.520
这个不行

583
0:24:34.520 --> 0:24:35.800
这叫做差别待遇

584
0:24:35.800 --> 0:24:38.100
另外呢是

585
0:24:38.100 --> 0:24:42.200
你不能够对这个软件的使用领域有差别待遇

586
0:24:42.200 --> 0:24:44.240
比如说你不能够限制商业

587
0:24:44.240 --> 0:24:47.060
或者说我就不准你这个软件用于医疗

588
0:24:47.060 --> 0:24:50.140
或者是我不准你这个软件用于武器制造

589
0:24:50.140 --> 0:24:52.180
这个叫做差别待遇

590
0:24:52.180 --> 0:24:53.460
还有就是

591
0:24:53.460 --> 0:24:54.740
其他的一堆吧

592
0:24:54.740 --> 0:24:57.820
包括有一些比如说叫做必须技术中立啊

593
0:24:57.820 --> 0:25:00.120
不得限制其他软件啊

594
0:25:00.120 --> 0:25:01.900
诸如此类的

595
0:25:01.900 --> 0:25:03.180
这个其实是

596
0:25:03.180 --> 0:25:07.800
不得限制其他软件是开源软件和自由软件一个很大的区别

597
0:25:07.800 --> 0:25:09.080
自由软件

598
0:25:09.080 --> 0:25:10.100
通常会说

599
0:25:10.100 --> 0:25:12.400
我是一个干干净净的自由软件

600
0:25:12.400 --> 0:25:16.500
你不能够把我和不自由的软件放在一起去销售

601
0:25:16.500 --> 0:25:18.800
就一张光盘上我们都是干净的

602
0:25:18.800 --> 0:25:21.620
你不能够把干净的和不干净的混在一块放

603
0:25:21.620 --> 0:25:22.900
但是开源软件

604
0:25:22.900 --> 0:25:24.180
没有这个限制

605
0:25:24.180 --> 0:25:27.000
开源软件说我可以跟其他软件放在一起卖

606
0:25:27.000 --> 0:25:28.800
我不在乎

607
0:25:28.800 --> 0:25:32.640
这就是开源软件和自由软件很重要的一个区别

608
0:25:32.640 --> 0:25:35.200
那么我们再回过头来看

609
0:25:35.200 --> 0:25:40.060
其实在社区里还有一个非常重要的license就叫做

610
0:25:40.060 --> 0:25:41.340
CC

611
0:25:41.340 --> 0:25:46.720
就是Creative Commons创作共用的知识共享的一个许可证

612
0:25:46.720 --> 0:25:48.260
这个许可证

613
0:25:48.260 --> 0:25:52.360
通常不会用来对软件进行许可证授权

614
0:25:52.360 --> 0:25:53.880
它通常都是用来

615
0:25:53.880 --> 0:25:58.760
许可那些文学作品啊艺术作品啊

616
0:25:58.760 --> 0:26:00.800
电子文档啊

617
0:26:00.800 --> 0:26:02.340
这种类型的东西

618
0:26:02.340 --> 0:26:05.660
而且的话呢我们去看一下这个许可证其实它还挺

619
0:26:05.660 --> 0:26:07.980
复杂的比如说最简单的

620
0:26:07.980 --> 0:26:12.320
就是你可以随便用随便我不管你只需要有一个CC-by

621
0:26:12.320 --> 0:26:14.120
就是有一个署名

622
0:26:14.120 --> 0:26:16.680
而且的话呢还有稍微复杂一点就是说

623
0:26:16.680 --> 0:26:18.980
如果你在分发在修改之后呢

624
0:26:18.980 --> 0:26:23.080
你要跟我原来相同的方式去授权

625
0:26:23.080 --> 0:26:24.100
你不能够说

626
0:26:24.100 --> 0:26:28.200
你在分发之后换了一个授权协议这个不行

627
0:26:28.200 --> 0:26:30.240
这叫做相同方式共享

628
0:26:30.240 --> 0:26:31.260
还有一种

629
0:26:31.260 --> 0:26:33.820
是叫禁止演绎

630
0:26:33.820 --> 0:26:35.360
就是你只能用

631
0:26:35.360 --> 0:26:36.900
但是你不能改

632
0:26:36.900 --> 0:26:38.180
包括翻译

633
0:26:38.180 --> 0:26:40.220
这都算是演绎的一种

634
0:26:40.220 --> 0:26:40.980
还有

635
0:26:40.980 --> 0:26:42.020
叫做

636
0:26:42.020 --> 0:26:47.140
必须署名而且不允许你用于商业用途

637
0:26:47.140 --> 0:26:48.920
还有最严格的是

638
0:26:48.920 --> 0:26:54.820
你必须署名而且你不能用于商业用途而且你还得继续的以相同方式共享

639
0:26:54.820 --> 0:26:55.580
等等

640
0:26:55.580 --> 0:26:57.380
当然还有禁止演绎

641
0:26:57.380 --> 0:26:59.680
这些其实是一个排列组合

642
0:26:59.680 --> 0:27:03.000
这些排列组合当中的有些条款

643
0:27:03.000 --> 0:27:06.840
其实就已经不再符合开源软件的

644
0:27:06.840 --> 0:27:07.620
那个

645
0:27:07.620 --> 0:27:10.440
非歧视性条款非排他性条款

646
0:27:10.440 --> 0:27:14.520
因为开源软件一定会允许你修改就是一定允许你演绎

647
0:27:14.520 --> 0:27:16.840
而且不会禁止你用于商用

648
0:27:16.840 --> 0:27:18.620
但是CC协议

649
0:27:18.620 --> 0:27:21.700
它就是可以不让你用于商用

650
0:27:21.700 --> 0:27:26.040
所以如果我们写了一本书或者是写了一篇文章

651
0:27:26.040 --> 0:27:28.860
我们加一个这个CC白

652
0:27:28.860 --> 0:27:30.660
然后

653
0:27:30.660 --> 0:27:32.960
NC就是禁止商用

654
0:27:32.960 --> 0:27:35.520
这就代表着你可以拿去翻译

655
0:27:35.520 --> 0:27:37.560
你可以拿去传播

656
0:27:37.560 --> 0:27:40.900
但是你不能拿这个东西去卖钱

657
0:27:40.900 --> 0:27:46.280
这其实我个人觉得CC协议其实是一个考虑的非常周全的

658
0:27:46.280 --> 0:27:50.120
一个菜单化的一种许可证的方法

659
0:27:50.120 --> 0:27:51.400
唯一的问题是

660
0:27:51.400 --> 0:27:53.180
它不是开源软件协议

661
0:27:53.180 --> 0:27:54.460
它不是开源协议

662
0:27:54.460 --> 0:28:00.100
它违背了一些开源的重要的原则

663
0:28:00.100 --> 0:28:02.140
当然它用的也很广泛

664
0:28:02.140 --> 0:28:04.440
这是第一部分

665
0:28:04.440 --> 0:28:06.760
还只是讲基础知识

666
0:28:06.760 --> 0:28:10.840
接下来再讲的是如果我们要选择开源许可证

667
0:28:10.840 --> 0:28:12.380
我们到底怎么选

668
0:28:12.380 --> 0:28:16.740
其实在网上有一个流传的非常广的一个图

669
0:28:16.740 --> 0:28:19.800
最早其实是阮一峰

670
0:28:19.800 --> 0:28:25.440
在2011年就翻译出来的 在他的博客里面翻译的

671
0:28:25.440 --> 0:28:26.720
其实

672
0:28:26.720 --> 0:28:28.260
简单的说吧就是

673
0:28:28.260 --> 0:28:30.560
如果你要对外开源

674
0:28:30.560 --> 0:28:31.580
然后呢

675
0:28:31.580 --> 0:28:33.380
你可以问自己几个问题

676
0:28:33.380 --> 0:28:35.940
问完了问题之后呢

677
0:28:35.940 --> 0:28:39.260
你就可以通常都可以找到一个决定

678
0:28:39.260 --> 0:28:40.800
比如说如果

679
0:28:40.800 --> 0:28:42.840
别人拿到你的源代码之后

680
0:28:42.840 --> 0:28:45.140
是不是可以闭源

681
0:28:45.140 --> 0:28:47.700
那如果说可以闭源的

682
0:28:47.700 --> 0:28:52.820
那么这就是一大类属于宽松型的license

683
0:28:52.820 --> 0:28:55.640
所谓的宽松就是你对别人的要求比较少

684
0:28:55.640 --> 0:28:59.220
别人甚至可以拿去闭源了以后接着卖钱

685
0:28:59.220 --> 0:29:02.540
但是别人如果必须开源的

686
0:29:02.540 --> 0:29:03.580
又分

687
0:29:03.580 --> 0:29:05.880
就是说如果别人开源了之后

688
0:29:05.880 --> 0:29:08.960
就是别人拿了你的东西去修改了以后还接着开源

689
0:29:08.960 --> 0:29:09.720
但是呢

690
0:29:09.720 --> 0:29:13.820
添加的代码是不是可以用他自己的license

691
0:29:13.820 --> 0:29:15.600
如果

692
0:29:15.600 --> 0:29:21.480
必须采用同样的license这就是最严格的一种叫做GPL

693
0:29:21.480 --> 0:29:26.100
也就是我们简单讲一讲GPL就是说

694
0:29:26.100 --> 0:29:26.860
别人

695
0:29:26.860 --> 0:29:32.760
可以拿你的源代码也可以修改也可以分发也可以商用但是

696
0:29:32.760 --> 0:29:38.640
他的代码也必须开源而且他的代码开源了之后也必须用GPL授权

697
0:29:38.640 --> 0:29:41.200
当然还有其他的很多的yes or no

698
0:29:41.200 --> 0:29:45.040
各种各样的选择他一共介绍了六种

699
0:29:45.040 --> 0:29:47.080
LGPL Mozilla

700
0:29:47.080 --> 0:29:50.680
BSD MIT和Apache

701
0:29:50.680 --> 0:29:52.980
在这个图上面

702
0:29:52.980 --> 0:29:54.780
看上去最宽松的

703
0:29:54.780 --> 0:29:58.860
应该是这个BSD的许可证

704
0:29:58.860 --> 0:30:00.400
MIT

705
0:30:00.400 --> 0:30:02.700
MIT是最宽松的

706
0:30:02.700 --> 0:30:04.500
MIT我说错了

707
0:30:04.500 --> 0:30:06.540
就是首先你可以闭源

708
0:30:06.540 --> 0:30:07.820
而且

709
0:30:07.820 --> 0:30:13.980
也不用再放置这个版权说明就每一个修改过的文档也不需要再放置

710
0:30:13.980 --> 0:30:16.540
这个版权说明而且别人

711
0:30:16.540 --> 0:30:21.660
改了你的软件拿去卖钱还可以用你原来的这个名字来促销

712
0:30:21.660 --> 0:30:23.440
这简直

713
0:30:23.440 --> 0:30:25.240
就是那种放弃 简直就是没约束

714
0:30:25.240 --> 0:30:28.060
对但其实呢

715
0:30:28.060 --> 0:30:31.640
还有一种license比这个更没有约束的

716
0:30:31.640 --> 0:30:33.940
是叫做Public domain

717
0:30:33.940 --> 0:30:36.240
Public domain那真不管

718
0:30:36.240 --> 0:30:37.020
对

719
0:30:37.020 --> 0:30:42.140
其中有一个著名的开源软件叫做SQLite

720
0:30:42.140 --> 0:30:45.220
它用的就是Public domain

721
0:30:45.220 --> 0:30:49.060
所以其实它是一个很大的光谱

722
0:30:49.060 --> 0:30:53.160
而这个塑造图它只介绍了六个开源软件

723
0:30:53.160 --> 0:30:55.460
它讲清楚了一些东西

724
0:30:55.460 --> 0:30:56.220
但是呢

725
0:30:56.220 --> 0:30:58.280
还有很多东西其实没讲到

726
0:30:58.280 --> 0:31:02.880
所以这只是算是一个常用许可证的入门的一个地方

727
0:31:02.880 --> 0:31:04.160
另外一个

728
0:31:04.160 --> 0:31:07.740
常用的选择呢其实马云做了一个不错的东西

729
0:31:07.740 --> 0:31:11.320
就是现在你如果在马云上面要创建一个

730
0:31:11.320 --> 0:31:12.980
新的开源软件的话

731
0:31:12.980 --> 0:31:14.660
它有一个许可证选择器

732
0:31:14.660 --> 0:31:15.940
也类似的

733
0:31:15.940 --> 0:31:17.220
它会问你一些问题

734
0:31:17.220 --> 0:31:18.500
最后推荐给你

735
0:31:18.500 --> 0:31:21.300
一个你觉得可以选的一个许可证

736
0:31:21.300 --> 0:31:22.340
开源许可证

737
0:31:22.340 --> 0:31:25.660
而且它的问题会比刚才的那个

738
0:31:25.660 --> 0:31:29.500
六个许可证选择的那个要复杂一点

739
0:31:29.500 --> 0:31:30.260
那么

740
0:31:30.260 --> 0:31:31.800
这样的一种了解

741
0:31:31.800 --> 0:31:34.620
大多数人到这个层面就够了

742
0:31:34.620 --> 0:31:36.420
就差不多就是说

743
0:31:36.420 --> 0:31:37.940
你知道什么最宽松

744
0:31:37.940 --> 0:31:38.980
比如说MIT最宽松

745
0:31:38.980 --> 0:31:41.280
那个GPL最严格

746
0:31:41.280 --> 0:31:44.600
然后呢稍微有一点就是说LGPL呢

747
0:31:44.600 --> 0:31:46.660
它稍微严格一点

748
0:31:46.660 --> 0:31:48.960
但是呢它还可以有什么什么条件

749
0:31:48.960 --> 0:31:52.020
放宽一点你大概知道一个光谱就行

750
0:31:52.020 --> 0:31:52.800
但是

751
0:31:52.800 --> 0:31:55.360
如果你还想更进一步了解的话呢

752
0:31:55.360 --> 0:31:57.660
有一个网站可以推荐的

753
0:31:57.660 --> 0:31:59.960
就叫做TLDR

754
0:31:59.960 --> 0:32:03.300
就是那个Too Long Don't Read

755
0:32:03.300 --> 0:32:05.340
就太长不看的那个缩写

756
0:32:05.340 --> 0:32:08.420
然后TLDRLegal.com

757
0:32:08.420 --> 0:32:09.940
这个网站呢很有意思

758
0:32:09.940 --> 0:32:14.040
它其实是一个专门介绍开源license的一个网站

759
0:32:14.040 --> 0:32:17.620
而这个网站的话呢它其实是

760
0:32:17.620 --> 0:32:18.640
一种

761
0:32:18.640 --> 0:32:20.940
列表的方式

762
0:32:20.940 --> 0:32:24.020
来展现就说如果你用了某某license

763
0:32:24.020 --> 0:32:27.860
那么可以做哪些事以及不能做哪些事

764
0:32:27.860 --> 0:32:32.220
它大概每一个license它都会总结里面的大概

765
0:32:32.220 --> 0:32:34.260
十几项吧

766
0:32:34.260 --> 0:32:39.120
都讲得还比较清楚的有打勾的有打叉的有些它不管的

767
0:32:39.120 --> 0:32:41.160
诸如此类的这样的一个

768
0:32:41.160 --> 0:32:42.700
太长不看的一个

769
0:32:42.700 --> 0:32:45.520
说人话的一个

770
0:32:45.520 --> 0:32:47.060
法律的一个网站

771
0:32:47.060 --> 0:32:52.180
但是还有一个更加值得推荐的就是

772
0:32:52.180 --> 0:32:55.500
我们国内有一个著名的

773
0:32:55.500 --> 0:32:56.780
一个

774
0:32:56.780 --> 0:32:59.340
大教堂与集市的一位议员我们都叫他魏Sir

775
0:32:59.340 --> 0:33:01.140
就是魏剑凡魏老师

776
0:33:01.140 --> 0:33:03.960
其实他写过一系列的解读

777
0:33:03.960 --> 0:33:05.740
开源license的文章

778
0:33:05.740 --> 0:33:06.520
就是

779
0:33:06.520 --> 0:33:12.660
Apache GPL这些license的人话版解读就是跟你说人话而且说的还是

780
0:33:12.660 --> 0:33:13.180
中文

781
0:33:13.180 --> 0:33:16.240
刚才讲的那个太长不看的那个还是英文的

782
0:33:16.240 --> 0:33:19.060
这个是用中文跟你讲的一个

783
0:33:19.060 --> 0:33:21.880
条文但是它为什么很好呢

784
0:33:21.880 --> 0:33:27.520
它是基于对于开源软件的英文版的license的

785
0:33:27.520 --> 0:33:28.540
原文

786
0:33:28.540 --> 0:33:33.920
然后先解读然后再缩略然后再讲清楚里面是什么东西

787
0:33:33.920 --> 0:33:37.500
所以这个解读我觉得还是非常的具有

788
0:33:37.500 --> 0:33:40.320
一方面很权威一方面也很

789
0:33:40.320 --> 0:33:43.400
清晰明了这个很推荐大家去看

790
0:33:43.400 --> 0:33:45.960
但是最后讲一条

791
0:33:45.960 --> 0:33:47.500
所有的这些

792
0:33:47.500 --> 0:33:49.540
license所有的这些

793
0:33:49.540 --> 0:33:53.640
解读所有的这些甚至包括OSI自己的理解

794
0:33:53.640 --> 0:33:55.940
都不作数

795
0:33:55.940 --> 0:34:00.040
一切都是以法院的判决为准

796
0:34:00.040 --> 0:34:02.340
因为真正有这个

797
0:34:02.340 --> 0:34:05.920
法律约束力的不是这些制定条款的人

798
0:34:05.920 --> 0:34:09.000
也不是这些所谓的开源组织开源

799
0:34:09.000 --> 0:34:10.280
真正的是

800
0:34:10.280 --> 0:34:12.840
当地的

801
0:34:12.840 --> 0:34:13.600
法院

802
0:34:13.600 --> 0:34:19.500
而且有些license会规范说如果用了我的license

803
0:34:19.500 --> 0:34:21.280
遇到了纠纷

804
0:34:21.280 --> 0:34:25.640
请在什么什么国家的哪一类法院去打官司

805
0:34:25.640 --> 0:34:28.460
这其实就是指明了一个属地原则

806
0:34:28.460 --> 0:34:29.740
因为最终

807
0:34:29.740 --> 0:34:33.320
对于这些license的解读不是我们这些普通人

808
0:34:33.320 --> 0:34:37.940
甚至不是律师律师也只能够出具他的部分的法律意见

809
0:34:37.940 --> 0:34:39.460
最后还是以判决为主

810
0:34:39.460 --> 0:34:42.540
大概就先介绍到这

811
0:34:42.540 --> 0:34:44.340
我觉得就可能

812
0:34:44.340 --> 0:34:47.400
因为老庄跟王老师都是

813
0:34:47.400 --> 0:34:50.480
开源领域经营很久的这个人了

814
0:34:50.480 --> 0:34:54.320
所以你们多多少少还带着一些这个研究的这个

815
0:34:54.320 --> 0:34:56.360
态度去看这个问题

816
0:34:56.360 --> 0:35:00.460
但实际上我觉得对于大多数人来讲包括我们很多听友来讲

817
0:35:00.460 --> 0:35:04.300
其实不需要去研究那么

818
0:35:04.300 --> 0:35:05.840
复杂的场景

819
0:35:05.840 --> 0:35:09.420
包括像OSI定义那些东西其实都可以不用看

820
0:35:09.420 --> 0:35:12.480
那东西真的屁都不是在我看来

821
0:35:12.480 --> 0:35:13.760
就是那自说自话

822
0:35:13.760 --> 0:35:15.300
没有意义的就是

823
0:35:15.300 --> 0:35:18.380
比如说为什么这个开源软件

824
0:35:18.380 --> 0:35:20.940
它不能有歧视性条款

825
0:35:20.940 --> 0:35:25.040
这个说白了既不是法律也不是逻辑

826
0:35:25.040 --> 0:35:26.580
它是一种信仰

827
0:35:26.580 --> 0:35:28.880
它说白了是信仰驱动的

828
0:35:28.880 --> 0:35:33.240
这种信仰驱动的东西呢说老实话在这个基督教天主教

829
0:35:33.240 --> 0:35:34.260
国家

830
0:35:34.260 --> 0:35:39.640
这个宗教占比较主导性的意识形态的国家我觉得很容易理解

831
0:35:39.640 --> 0:35:43.220
因为他们自古以来就有这样的趋向

832
0:35:43.220 --> 0:35:48.080
包括讲因信称义啊就信仰非常高的一个水平

833
0:35:48.080 --> 0:35:51.920
当然很多人说中国人没信仰其实也不是啊中国人有其他一些信仰

834
0:35:51.920 --> 0:35:55.000
中国人信仰实用主义

835
0:35:55.000 --> 0:35:56.540
包括像

836
0:35:56.540 --> 0:36:02.680
像这个这个我们的很多的搞什么国际关系的搞外交的

837
0:36:02.680 --> 0:36:04.720
他们这个比如说清华的这个

838
0:36:04.720 --> 0:36:06.520
严学通老师他的

839
0:36:06.520 --> 0:36:08.320
内核观点叫

840
0:36:08.320 --> 0:36:10.880
道义现实主义

841
0:36:10.880 --> 0:36:14.960
他说首先我们国家奉行的是现实主义的国际关系和外交

842
0:36:14.960 --> 0:36:16.500
这个这个政策

843
0:36:16.500 --> 0:36:20.340
那有些人就说现实主义是没有道义的就只看国家利益

844
0:36:20.340 --> 0:36:21.620
他其实不是的

845
0:36:21.620 --> 0:36:23.920
国家利益分长远和短暂的

846
0:36:23.920 --> 0:36:26.220
中国是看重比较长远的

847
0:36:26.220 --> 0:36:27.240
现实利益的

848
0:36:27.240 --> 0:36:30.060
那这个现实利益必须以道义为基础

849
0:36:30.060 --> 0:36:32.880
所以他那个专门写了一本书叫道义现实主义

850
0:36:32.880 --> 0:36:34.160
所以其实

851
0:36:34.160 --> 0:36:40.300
我们国家包括很多这些我们受的教育啊包括我们实际在生活当中的经验

852
0:36:40.300 --> 0:36:43.120
就非常现实非常实际

853
0:36:43.120 --> 0:36:43.880
那

854
0:36:43.880 --> 0:36:47.980
从这个现实主义角度出发我们去看这个开源许可证的话

855
0:36:47.980 --> 0:36:50.280
或者我们去看软件许可证的话

856
0:36:50.280 --> 0:36:53.100
其实它会相对简单一些

857
0:36:53.100 --> 0:36:55.400
我说一个我自己的理解

858
0:36:55.400 --> 0:36:58.480
就其实就是你要问自己几个问题

859
0:36:58.480 --> 0:37:00.520
如果我这个软件不开源

860
0:37:00.520 --> 0:37:03.080
卖给你我关注什么

861
0:37:03.080 --> 0:37:06.420
我其实关注的是我能卖多少钱

862
0:37:06.420 --> 0:37:10.260
卖多少钱等于什么等於单价乘上数量

863
0:37:10.260 --> 0:37:13.580
那所以我定一个单价然后跟你

864
0:37:13.580 --> 0:37:15.880
说一个算数量的方法

865
0:37:15.880 --> 0:37:17.680
比如刚才老庄提到的

866
0:37:17.680 --> 0:37:21.520
这个商用软件卖给一个人或者一个公司

867
0:37:21.520 --> 0:37:23.560
那这个商用软件

868
0:37:23.560 --> 0:37:25.620
它其实有各种授权方式

869
0:37:25.620 --> 0:37:27.660
有所谓的proceed

870
0:37:27.660 --> 0:37:28.680
就是

871
0:37:28.680 --> 0:37:32.020
有多少个位置你可以装多少台机器

872
0:37:32.020 --> 0:37:36.880
也可能是current这个使用就是并发使用

873
0:37:36.880 --> 0:37:38.160
它一个服务器

874
0:37:38.160 --> 0:37:42.520
你可以装很多台机器但是我只允许同时10个人用

875
0:37:42.520 --> 0:37:43.800
这种也有

876
0:37:43.800 --> 0:37:48.140
就是还有就是授权到个人user

877
0:37:48.140 --> 0:37:50.200
你比如说我这个proceed

878
0:37:50.200 --> 0:37:53.520
然后可以有1000个人轮流用这10台机器没问题

879
0:37:53.520 --> 0:37:55.580
但如果我是这个

880
0:37:55.580 --> 0:37:58.140
per user那我就限制到具体人了

881
0:37:58.140 --> 0:38:01.460
你就10个人买了只有这10个人能用不管在什么机器上

882
0:38:01.460 --> 0:38:03.760
所以这就很多但实际上

883
0:38:03.760 --> 0:38:06.580
万变不离其宗就是我想卖你多少个

884
0:38:06.580 --> 0:38:07.600
拷贝的问题

885
0:38:07.600 --> 0:38:09.920
这是商用软件其实就是算钱

886
0:38:09.920 --> 0:38:15.540
那作为开源来讲那就会复杂一点因为我开放出来的不仅仅这个软件本身

887
0:38:15.540 --> 0:38:17.340
还有它的制造过程

888
0:38:17.340 --> 0:38:20.920
相当于我不仅把这个东西给你用了我还把怎么造它

889
0:38:20.920 --> 0:38:23.220
完整的方法都告诉你了

890
0:38:23.220 --> 0:38:25.780
所以开源是伴随着更大的一个

891
0:38:25.780 --> 0:38:31.160
权力让渡的那么我可能就会考虑问题更多一些

892
0:38:31.160 --> 0:38:35.520
那这个问题就非常多就是你真的可以做的话几十上百个

893
0:38:35.520 --> 0:38:37.060
要去考虑的要素

894
0:38:37.060 --> 0:38:40.900
那包括像刚才这个老庄提到这个

895
0:38:40.900 --> 0:38:43.460
TLDLegal里面就

896
0:38:43.460 --> 0:38:45.760
他就做了非常多的属性

897
0:38:45.760 --> 0:38:48.060
像菜单一样原材料

898
0:38:48.060 --> 0:38:51.640
你挑10款原材料可以组合出一个license

899
0:38:51.640 --> 0:38:55.480
但实际上我们普通人要去考虑的时候有那么多的

900
0:38:55.480 --> 0:38:58.300
要素吗其实没有啊就相对会少很多

901
0:38:58.300 --> 0:39:03.420
比如刚才这个老庄提到那个选择图因为我们这个节目

902
0:39:03.420 --> 0:39:07.780
语音的就看不到这个图回头我会找来放在我们那个视频里面

903
0:39:07.780 --> 0:39:11.100
他其实考虑的就只有几个要素

904
0:39:11.100 --> 0:39:13.920
实际上只考虑了4个要素

905
0:39:13.920 --> 0:39:16.740
其中有3个我认为是非常非常重要的

906
0:39:16.740 --> 0:39:18.780
有一个没有那么重要就3个半

907
0:39:18.780 --> 0:39:22.620
哪3个半呢这3个非常重要的就是

908
0:39:22.620 --> 0:39:28.260
我开源了你如果使用我这个开源软件的话你能不能把它转闭源

909
0:39:28.260 --> 0:39:32.600
这是一个非常关键的因为如果你可以把它转闭源的话

910
0:39:32.600 --> 0:39:36.960
意味着我白开出来了你做了任何修改我都不知道

911
0:39:36.960 --> 0:39:42.600
除非我真的无所谓否则的话那我可以约束你就是你不许闭源

912
0:39:42.600 --> 0:39:46.180
那么这个选择非常重要可以还是不可以

913
0:39:46.180 --> 0:39:53.360
就分出两大类来第二个是这个你如果做了修改

914
0:39:53.360 --> 0:39:57.700
那么你能不能换许可证

915
0:39:57.700 --> 0:40:03.340
那这个里面呢实际上GPL也就是这个自由软件基金会

916
0:40:03.340 --> 0:40:06.660
FSF他们特别看重这个问题

917
0:40:06.660 --> 0:40:08.960
为什么它是有它的原因的

918
0:40:08.960 --> 0:40:17.660
就是FSF它成立的初衷就是保护对人类最关键的那些软件

919
0:40:17.660 --> 0:40:21.000
永远可以被人类开放使用

920
0:40:21.000 --> 0:40:28.160
它所谓的这种重要的软件其实最重要的是软件的编译器

921
0:40:28.160 --> 0:40:34.300
其次是软件的编辑器和操作系统

922
0:40:34.300 --> 0:40:37.380
就这些软件只要它是开放的

923
0:40:37.380 --> 0:40:40.700
那么就算有公司垄断了一些东西

924
0:40:40.700 --> 0:40:44.800
别人还可以用这些东西造出更好的开放的竞争品

925
0:40:44.800 --> 0:40:48.640
所以他就认为说我这些关键性的软件

926
0:40:48.640 --> 0:40:50.180
我可以把它开源出来

927
0:40:50.180 --> 0:40:53.500
比如像GCC非常非常重要的这个编译器

928
0:40:53.500 --> 0:40:56.060
那我把它开放出来你可以改

929
0:40:56.060 --> 0:41:00.420
但是你用我的这个源代码改出来的东西

930
0:41:00.420 --> 0:41:04.000
你还是必须走我一模一样的授权协议

931
0:41:04.000 --> 0:41:07.840
这个叫做开源授权协议的继承性

932
0:41:07.840 --> 0:41:11.420
这个只有它是非常严格要求的

933
0:41:11.420 --> 0:41:13.220
除它以外其他的协议其实都不要求

934
0:41:13.220 --> 0:41:14.500
都是可以改的

935
0:41:14.500 --> 0:41:16.540
这是第二个非常重要的

936
0:41:16.540 --> 0:41:20.640
就是是不是修改必须继承这个授权协议

937
0:41:20.640 --> 0:41:23.460
最后一个比较重要的就是

938
0:41:23.460 --> 0:41:28.320
你改了我的源代码之后还能不能用我来做广告

939
0:41:28.320 --> 0:41:35.240
那这个呢有一类是就是允许你改了之后

940
0:41:35.240 --> 0:41:36.760
还拿我去做广告的

941
0:41:36.760 --> 0:41:38.040
比如像MIT啊

942
0:41:38.040 --> 0:41:40.600
这个是基本上现在比较宽松的

943
0:41:40.600 --> 0:41:42.660
那像BSD就不允许

944
0:41:42.660 --> 0:41:48.280
BSD就说你直接用我的源代码去推广没问题

945
0:41:48.280 --> 0:41:50.340
你一旦改了就不能再用了

946
0:41:50.340 --> 0:41:53.660
那另外一个附加的条款就是第四个

947
0:41:53.660 --> 0:41:57.000
就是修改过的文档是不是每一个修改过的文档

948
0:41:57.000 --> 0:42:00.580
要放一个这个版权说明

949
0:42:00.580 --> 0:42:04.420
就包括对原作者的这个记录

950
0:42:04.420 --> 0:42:05.440
这东西

951
0:42:05.440 --> 0:42:11.080
所以说白了就是我们在做这个许可证的这个

952
0:42:11.080 --> 0:42:13.900
选择的时候其实就是分两个视角

953
0:42:13.900 --> 0:42:15.940
一个是当我要开源的时候

954
0:42:15.940 --> 0:42:18.240
我选用一个什么样的许可证

955
0:42:18.240 --> 0:42:22.340
第二个是当我使用开源软件的时候

956
0:42:22.340 --> 0:42:26.960
我要读懂这个许可证以免违背它

957
0:42:26.960 --> 0:42:28.500
其实就这两方面

958
0:42:28.500 --> 0:42:31.320
那么了解刚才说的这几个最关键的判断

959
0:42:31.320 --> 0:42:34.640
其实在80%、90%的场合下就已经够用了

960
0:42:34.640 --> 0:42:37.720
比如说你拿到一个GPL的协议的源代码

961
0:42:37.720 --> 0:42:40.280
你就知道如果我用了这个源代码

962
0:42:40.280 --> 0:42:42.840
第一我以后永远都必须开源

963
0:42:42.840 --> 0:42:45.900
我必须在这个上面基础上修改的

964
0:42:45.900 --> 0:42:47.440
做的任何修改必须开源

965
0:42:47.440 --> 0:42:49.480
而且我的开源必须要

966
0:42:49.480 --> 0:42:52.040
继续用GPL的协议

967
0:42:52.040 --> 0:42:53.840
那如果我不希望这样呢

968
0:42:53.840 --> 0:42:55.640
那我就不能用这个软件了

969
0:42:55.640 --> 0:42:58.200
我得去寻找一个跟它功能类似的

970
0:42:58.200 --> 0:43:01.280
但是授权要求没有那么严格的一个软件

971
0:43:01.280 --> 0:43:05.880
比如MPL就Mozilla的这个

972
0:43:05.880 --> 0:43:08.180
那当我们如果我们自己是开源方

973
0:43:08.180 --> 0:43:09.720
那我们要选择软件的时候

974
0:43:09.720 --> 0:43:11.520
那就要想你怕的是什么

975
0:43:11.520 --> 0:43:13.560
你不希望的是什么

976
0:43:13.560 --> 0:43:17.400
比如说你不希望有竞争对手

977
0:43:17.400 --> 0:43:19.440
使用了你的开源的软件

978
0:43:19.440 --> 0:43:23.540
还把它转币员并且拿来卖钱

979
0:43:23.540 --> 0:43:24.320
那怎么办

980
0:43:24.320 --> 0:43:28.680
那你就不能够选那种可以转币员的那些协议

981
0:43:28.680 --> 0:43:30.720
然后包括比如说

982
0:43:30.720 --> 0:43:34.820
如果你担心商业上的竞争对手使用你这个东西

983
0:43:34.820 --> 0:43:39.940
而还利用你的这个软件代码去做市场宣传的话

984
0:43:39.940 --> 0:43:41.980
那你就不能选MIP

985
0:43:41.980 --> 0:43:45.060
你可能要选BSD或者APAC这种

986
0:43:45.060 --> 0:43:47.620
所以就我觉得大部分情况下

987
0:43:47.620 --> 0:43:49.920
其实这个图是一个非常好的入门的图

988
0:43:49.920 --> 0:43:52.740
然后再比如说像刚才老庄提到的

989
0:43:52.740 --> 0:43:56.580
高端的那几个资源

990
0:43:56.580 --> 0:43:58.380
回头我们也会列出来吧

991
0:43:58.380 --> 0:44:01.700
我觉得有兴趣的可以去做一些深入的研究

992
0:44:01.700 --> 0:44:03.240
其实都挺好懂的

993
0:44:03.240 --> 0:44:05.280
有一个网站叫

994
0:44:05.280 --> 0:44:07.340
chooselicense.com

995
0:44:07.340 --> 0:44:10.400
那他也提供了一个step by step的方式

996
0:44:10.400 --> 0:44:13.220
去选你要的这个

997
0:44:13.220 --> 0:44:14.500
一些license

998
0:44:14.500 --> 0:44:17.320
然后我想特别提一下的是这个CCR

999
0:44:17.320 --> 0:44:20.640
Creative Commons啊我认为它是

1000
0:44:20.640 --> 0:44:22.940
它刚出来的时候是

1001
0:44:22.940 --> 0:44:24.480
二零零几年的时候

1002
0:44:24.480 --> 0:44:26.520
那个时候博客刚刚兴起

1003
0:44:26.520 --> 0:44:28.320
然后很多人写博客

1004
0:44:28.320 --> 0:44:31.140
大家会互相去引用大家的博客

1005
0:44:31.140 --> 0:44:35.480
然后就是产生这种各种各样的演绎性的创作

1006
0:44:35.480 --> 0:44:38.300
那么CC这个许可证就应运而生

1007
0:44:38.300 --> 0:44:40.100
这个许可证我认为比

1008
0:44:40.100 --> 0:44:43.420
所有的软件的这个开软件许可证都好的一点

1009
0:44:43.420 --> 0:44:46.240
就在于它确实做得非常的直观

1010
0:44:46.240 --> 0:44:48.040
和非常的容易理解

1011
0:44:48.040 --> 0:44:51.620
就像刚才老庄介绍的它其实就是几个要素

1012
0:44:51.620 --> 0:44:53.160
一个要素是

1013
0:44:53.160 --> 0:44:54.700
是不是要署名

1014
0:44:54.700 --> 0:44:57.500
就是永远带上我原作者的名字

1015
0:44:57.500 --> 0:44:59.300
第二是不是允许商用

1016
0:44:59.300 --> 0:45:01.600
第三是衍生创作

1017
0:45:01.600 --> 0:45:03.660
还有第四个是

1018
0:45:03.660 --> 0:45:07.740
是不是需要继承这个分享协议

1019
0:45:07.740 --> 0:45:08.780
其实就这么几个东西

1020
0:45:08.780 --> 0:45:10.560
然后每个东西你可以选yes or no

1021
0:45:10.560 --> 0:45:12.620
选完之后就出来一个非常

1022
0:45:12.620 --> 0:45:14.660
就是

1023
0:45:14.660 --> 0:45:17.220
就你根据你的选择会生成一个图标

1024
0:45:17.220 --> 0:45:19.280
上面就有这样的几个选项

1025
0:45:19.280 --> 0:45:23.880
大家一看就知道指的是哪几个选择

1026
0:45:23.880 --> 0:45:27.980
其实我觉得软件的这个开软件许可证

1027
0:45:27.980 --> 0:45:30.020
至少局部也可以这么做

1028
0:45:30.020 --> 0:45:32.080
就是我可以先选一个大的模板

1029
0:45:32.080 --> 0:45:32.840
archetype

1030
0:45:32.840 --> 0:45:36.160
我做了对4到5个问题做完选择之后

1031
0:45:36.160 --> 0:45:37.700
它就出来一个

1032
0:45:37.700 --> 0:45:40.260
符合我这个选项的一个archetype

1033
0:45:40.260 --> 0:45:41.540
原型模板

1034
0:45:41.540 --> 0:45:43.340
然后下面可以有一些附加条款

1035
0:45:43.340 --> 0:45:46.400
去解决一些更少用到的一些

1036
0:45:46.400 --> 0:45:47.940
约束

1037
0:45:47.940 --> 0:45:49.480
但主要的部分其实就那几个

1038
0:45:49.480 --> 0:45:50.760
这个事

1039
0:45:50.760 --> 0:45:52.280
我不知道对不对

1040
0:45:52.280 --> 0:45:54.840
等一下也请王老师和

1041
0:45:54.840 --> 0:45:56.640
老庄也点评一下

1042
0:45:56.640 --> 0:45:59.200
我认为80%以上的情况

1043
0:45:59.200 --> 0:46:01.000
就那4、5个问题就够了

1044
0:46:01.000 --> 0:46:03.300
是的

1045
0:46:03.300 --> 0:46:08.920
我补充一下我这边的一些观察到的一些东西

1046
0:46:08.920 --> 0:46:12.260
其实刚才两位老师把许可证这件事情

1047
0:46:12.260 --> 0:46:13.800
说的还挺详细的

1048
0:46:13.800 --> 0:46:15.080
但是即便如此

1049
0:46:15.080 --> 0:46:18.160
其实就像刚才庄老师所提到的

1050
0:46:18.160 --> 0:46:20.200
许可这件事情其实它挺复杂的

1051
0:46:20.200 --> 0:46:23.780
而且现在还在不断的在做一些变化

1052
0:46:23.780 --> 0:46:25.840
和一些新的东西都会出来

1053
0:46:25.840 --> 0:46:28.640
因为我这边是在学校里面

1054
0:46:28.640 --> 0:46:31.720
也会有开包括软件工程

1055
0:46:31.720 --> 0:46:33.520
还有像开源的一些课程

1056
0:46:33.520 --> 0:46:37.100
其实从我们同学们的反馈来看

1057
0:46:37.100 --> 0:46:38.880
其实大部分的同学其实

1058
0:46:38.880 --> 0:46:41.440
对许可证还有法律的这些东西

1059
0:46:41.440 --> 0:46:43.760
其实大家并不是那么感兴趣

1060
0:46:43.760 --> 0:46:48.120
而且挺有意思的一个点是

1061
0:46:48.120 --> 0:46:51.440
其实我们在课上也是请了不同的这种

1062
0:46:51.440 --> 0:46:54.760
角色的人来给大家去讲这些课

1063
0:46:54.760 --> 0:46:59.120
比如说像庄老师也在我们的课上去做了一些分享的

1064
0:46:59.120 --> 0:47:00.400
这是计算机背景的

1065
0:47:00.400 --> 0:47:02.440
像我也是计算机背景的

1066
0:47:02.440 --> 0:47:05.520
我们也请了包括像振华

1067
0:47:05.520 --> 0:47:08.340
还有开放学子基金会的刘威老师

1068
0:47:08.340 --> 0:47:11.160
他们这些法律背景的人

1069
0:47:11.160 --> 0:47:14.240
也来课上去做个分享

1070
0:47:14.240 --> 0:47:16.280
这些不同的背景人

1071
0:47:16.280 --> 0:47:19.860
其实他们分享的这种角色

1072
0:47:19.860 --> 0:47:23.960
其实还是有一定的区别

1073
0:47:23.960 --> 0:47:27.800
但是大部分同学其实还是

1074
0:47:27.800 --> 0:47:30.880
因为毕竟还是一个个体开发者

1075
0:47:30.880 --> 0:47:33.680
还是希望最好是简单

1076
0:47:33.680 --> 0:47:37.020
我其实更多的还是希望能够好好的写代码

1077
0:47:37.020 --> 0:47:41.880
不太希望在特别是这种许可证的方面

1078
0:47:41.880 --> 0:47:43.940
去做过的这些纠缠

1079
0:47:43.940 --> 0:47:47.520
所以说我们给同学们提的是

1080
0:47:47.520 --> 0:47:51.360
第一个就是即便你不喜欢

1081
0:47:51.360 --> 0:47:55.200
你一开始可以选一个相对宽松一点的

1082
0:47:55.200 --> 0:48:00.320
后面再来去如果真的这个软件

1083
0:48:00.320 --> 0:48:02.880
然后或者是你的创作

1084
0:48:02.880 --> 0:48:06.200
内容有更好的一些发展和一些想法的话

1085
0:48:06.200 --> 0:48:08.240
你还可以去做一些更改

1086
0:48:08.240 --> 0:48:09.780
但是我们不太鼓励

1087
0:48:09.780 --> 0:48:14.400
特别是现在开源其实也是越来越受关注

1088
0:48:14.400 --> 0:48:16.440
你把你写的东西放上去以后

1089
0:48:16.440 --> 0:48:17.720
你什么都不去带

1090
0:48:17.720 --> 0:48:19.000
你没有license

1091
0:48:19.000 --> 0:48:21.040
当你没有这件事情的时候

1092
0:48:21.040 --> 0:48:24.120
一方面就是如果你想去宣传

1093
0:48:24.120 --> 0:48:25.400
别人想用你的时候

1094
0:48:25.400 --> 0:48:26.940
其实他就不太敢用

1095
0:48:26.940 --> 0:48:29.500
反而是你如果有一个具体的东西

1096
0:48:29.500 --> 0:48:32.320
他就知道就像刚才李老师所提到的

1097
0:48:32.320 --> 0:48:33.600
如果我去使用的话

1098
0:48:33.600 --> 0:48:36.920
我就知道在什么样的情况下去使用你

1099
0:48:36.920 --> 0:48:38.980
因为这件事情不光是学生

1100
0:48:38.980 --> 0:48:40.520
还有我们周围老师也是

1101
0:48:40.520 --> 0:48:42.560
因为我们现在也有一些老师

1102
0:48:42.560 --> 0:48:45.880
喜欢把自己的教材

1103
0:48:45.880 --> 0:48:48.200
在GitHub上开源出来

1104
0:48:48.200 --> 0:48:49.980
但是他开源的时候

1105
0:48:49.980 --> 0:48:53.320
他其实就不太说我去选一个license

1106
0:48:53.320 --> 0:48:54.840
或者是放上CC

1107
0:48:54.840 --> 0:48:59.200
他说我就是只是想纯粹的把我的内容放上去

1108
0:48:59.200 --> 0:49:02.280
我写得很高兴就挺好的

1109
0:49:02.280 --> 0:49:04.840
我们其实也是给他一些建议

1110
0:49:04.840 --> 0:49:06.380
因为他其实还是

1111
0:49:06.380 --> 0:49:07.920
其实如果大家有

1112
0:49:07.920 --> 0:49:10.220
我们的听众如果记得的话

1113
0:49:10.220 --> 0:49:12.780
我这边其实在8月份

1114
0:49:12.780 --> 0:49:14.560
分享过一本书就是

1115
0:49:14.560 --> 0:49:15.840
《挑战知识产权》

1116
0:49:15.840 --> 0:49:17.120
其实就是

1117
0:49:17.120 --> 0:49:17.900
开源嘛

1118
0:49:17.900 --> 0:49:19.680
他其实就是让步

1119
0:49:19.680 --> 0:49:21.740
我们自己的一些权利

1120
0:49:21.740 --> 0:49:27.120
让我的内容作品能够有更好的这种传播

1121
0:49:27.120 --> 0:49:28.140
老师就是这样的

1122
0:49:28.140 --> 0:49:29.160
如果你希望

1123
0:49:29.160 --> 0:49:30.700
你的

1124
0:49:30.700 --> 0:49:34.020
不管是你写的软件也好还是你的内容也好有更好的传播

1125
0:49:34.020 --> 0:49:34.800
其实你

1126
0:49:34.800 --> 0:49:36.840
带一个这种license明确一点

1127
0:49:36.840 --> 0:49:38.380
其实会更好

1128
0:49:38.380 --> 0:49:40.420
特别是一些严肃的一些场合

1129
0:49:40.420 --> 0:49:42.740
甚至是一些企业界工业界的

1130
0:49:42.740 --> 0:49:43.500
他去用

1131
0:49:43.500 --> 0:49:45.540
他确实觉得你这个好去使用的话

1132
0:49:45.540 --> 0:49:47.080
他其实会更加

1133
0:49:47.080 --> 0:49:49.140
放心大胆的去使用

1134
0:49:49.140 --> 0:49:51.180
这是我的第一个补充

1135
0:49:51.180 --> 0:49:53.480
第二个补充就是我现在也看到的

1136
0:49:53.480 --> 0:49:56.040
其实刚才也是庄老师所提到的就是

1137
0:49:56.040 --> 0:49:59.120
现在之所以license这个东西比较复杂

1138
0:49:59.120 --> 0:50:00.400
一方面是

1139
0:50:00.400 --> 0:50:01.940
它和法律其实有关系的

1140
0:50:01.940 --> 0:50:03.220
第二就是

1141
0:50:03.220 --> 0:50:05.520
其实庄老师也提到就是

1142
0:50:05.520 --> 0:50:07.320
即便我们现在的

1143
0:50:07.320 --> 0:50:08.600
这个license

1144
0:50:08.600 --> 0:50:11.400
有违反的最终其实还是靠

1145
0:50:11.400 --> 0:50:13.200
法律法院去判

1146
0:50:13.200 --> 0:50:14.740
最终去判断

1147
0:50:14.740 --> 0:50:17.560
他之所以去判断就是因为我们现在的

1148
0:50:17.560 --> 0:50:19.860
一些界定都是自然语言去界定的

1149
0:50:19.860 --> 0:50:21.660
比如说是否符合那4条

1150
0:50:21.660 --> 0:50:22.680
即便是

1151
0:50:22.680 --> 0:50:26.520
那个OSI他去认定他也是人去认定的

1152
0:50:26.520 --> 0:50:30.360
人去认定的实际上他多多少少其实还是带有一定的一些

1153
0:50:30.360 --> 0:50:31.900
一些主观的一些成分

1154
0:50:31.900 --> 0:50:33.940
对那因为我们现在

1155
0:50:33.940 --> 0:50:36.240
大家也可能会知道就是

1156
0:50:36.240 --> 0:50:40.080
随着软件特别是开源软件和商业化

1157
0:50:40.080 --> 0:50:41.360
走得越来越近

1158
0:50:41.360 --> 0:50:43.160
有越来越多的趋势的时候

1159
0:50:43.160 --> 0:50:46.480
对其实现在已经出来出现了越来越多的一些

1160
0:50:46.480 --> 0:50:48.540
一些商业的license

1161
0:50:48.540 --> 0:50:51.360
对那他并不被那10条

1162
0:50:51.360 --> 0:50:54.420
说能够

1163
0:50:54.420 --> 0:50:55.440
部分是有冲突的

1164
0:50:55.440 --> 0:50:57.240
对也不被OSI

1165
0:50:57.240 --> 0:50:59.280
所认可的但是这一类其实

1166
0:50:59.280 --> 0:51:02.360
也是一个挺好的他既能够给

1167
0:51:02.360 --> 0:51:05.180
给他的软件和他的

1168
0:51:05.180 --> 0:51:08.240
一些品牌去做宣传然后他也

1169
0:51:08.240 --> 0:51:10.040
具有一些比较好的

1170
0:51:10.040 --> 0:51:12.080
一些用户的一些属性

1171
0:51:12.080 --> 0:51:13.360
对就是说

1172
0:51:13.360 --> 0:51:16.940
那这个可能就是庄老师刚才所提到的一个更加

1173
0:51:16.940 --> 0:51:19.760
fine的一个开源的一个概念

1174
0:51:19.760 --> 0:51:23.100
这个好像跟license没有关系啊

1175
0:51:23.100 --> 0:51:25.140
那软件的license是

1176
0:51:25.140 --> 0:51:28.460
什么情况下可以使用我的这个东西

1177
0:51:28.460 --> 0:51:32.040
以及你使用之后要遵循什么样的一些约束

1178
0:51:32.040 --> 0:51:34.100
这个叫做license

1179
0:51:34.100 --> 0:51:37.420
OSI那几个东西我觉得就是一种信条啊

1180
0:51:37.420 --> 0:51:40.240
你我不遵循怎么样我不遵循可以使用软件没问题

1181
0:51:40.240 --> 0:51:43.820
只是说你OSI不认可我了不认可不认可了无所谓了

1182
0:51:43.820 --> 0:51:47.400
对对对这个没有任何法律上的意义就是

1183
0:51:47.400 --> 0:51:48.680
其实没所谓

1184
0:51:48.680 --> 0:51:49.960
对啊

1185
0:51:49.960 --> 0:51:50.980
是的是的

1186
0:51:50.980 --> 0:51:55.080
但是呢现在还是有一些人比较纠结说一定要在开源这一块去

1187
0:51:55.080 --> 0:51:55.860
做一些界定

1188
0:51:55.860 --> 0:52:00.220
这种没问题这种我觉得就是属于爱好者或者专业领域的

1189
0:52:00.220 --> 0:52:01.740
他要去深入研究

1190
0:52:01.740 --> 0:52:07.380
他要去创建另外的一些更复杂的更完整的生态体系相关的东西

1191
0:52:07.380 --> 0:52:09.940
那是可以研究的但对普通用户来讲

1192
0:52:09.940 --> 0:52:11.980
我觉得很少会到这个层次

1193
0:52:11.980 --> 0:52:13.780
没必要嘛

1194
0:52:13.780 --> 0:52:15.820
好我就补充这两点

1195
0:52:15.820 --> 0:52:16.860
OK

1196
0:52:16.860 --> 0:52:18.900
那这一块我们就

1197
0:52:18.900 --> 0:52:24.280
说到这里啊然后下一个呢也是跟开源有关的一个话题啊也是我们的这个

1198
0:52:24.280 --> 0:52:26.320
这个听友群里面有人提到的

1199
0:52:26.320 --> 0:52:31.960
有人创建了一个网络啊叫T.XYZ

1200
0:52:31.960 --> 0:52:36.060
这实际上是几个人他们的一个创业项目

1201
0:52:36.060 --> 0:52:41.440
这里面包括有一位是原来做Homebrew的创始人

1202
0:52:41.440 --> 0:52:43.220
Homebrew是

1203
0:52:43.220 --> 0:52:47.580
Mac的机器苹果的Mac机器上面的软件包管理的

1204
0:52:47.580 --> 0:52:49.620
目前的事实标准了

1205
0:52:49.620 --> 0:52:52.180
然后他们在Mac上一统天下之后呢

1206
0:52:52.180 --> 0:52:55.760
甚至还拓展到了Linux领域

1207
0:52:55.760 --> 0:52:57.820
做了一个Linux版的Homebrew

1208
0:52:57.820 --> 0:52:59.340
也有些人在用啊

1209
0:52:59.340 --> 0:53:01.660
就是然后他们

1210
0:53:01.660 --> 0:53:03.960
因为做软件包管理出身的嘛

1211
0:53:03.960 --> 0:53:04.980
然后

1212
0:53:04.980 --> 0:53:06.780
可能Homebrew也做得差不多了

1213
0:53:06.780 --> 0:53:09.580
然后现在主要的维护工作其实他们自己也没在做了

1214
0:53:09.580 --> 0:53:11.380
也有另外的社区在做了

1215
0:53:11.380 --> 0:53:15.480
所以他们就成立了一个新的创业公司来专门做

1216
0:53:15.480 --> 0:53:17.260
一些新的尝试

1217
0:53:17.260 --> 0:53:21.100
他们做了一个协议叫T.E.A的一个协议

1218
0:53:21.100 --> 0:53:23.400
这个协议是专门用来

1219
0:53:23.400 --> 0:53:27.500
定义开源的软件包的

1220
0:53:27.500 --> 0:53:29.560
包括这个软件包的特性

1221
0:53:29.560 --> 0:53:31.080
它的维护者是谁

1222
0:53:31.080 --> 0:53:32.100
它的版本

1223
0:53:32.100 --> 0:53:34.920
然后把它注册到一个区块链的驱动的一个

1224
0:53:34.920 --> 0:53:37.220
区中心化的注册表上面去

1225
0:53:37.220 --> 0:53:39.540
当然也有很多人都可以去

1226
0:53:39.540 --> 0:53:43.380
在这个链上面去注册自己的这个软件包

1227
0:53:43.380 --> 0:53:46.700
然后去发不同的版本

1228
0:53:46.700 --> 0:53:48.740
而且由于区块链的一些特征

1229
0:53:48.740 --> 0:53:50.280
也能够带来一些好处

1230
0:53:50.280 --> 0:53:54.440
比如说自动化的容塞

1231
0:53:54.440 --> 0:53:56.680
然后无法篡改等等

1232
0:53:56.680 --> 0:53:57.960
类似这样的东西

1233
0:53:57.960 --> 0:54:00.280
然后基于这个东西

1234
0:54:00.280 --> 0:54:02.560
基于这个协议所搭建起来的

1235
0:54:02.560 --> 0:54:08.460
新一代的软件包的管理和分发的这样的一个网络

1236
0:54:08.460 --> 0:54:13.320
是不是有可能可以带来一些利益上的一些分配

1237
0:54:13.320 --> 0:54:17.160
因为我们知道现在对于软件包的使用

1238
0:54:17.160 --> 0:54:18.960
其实是越来越广泛的

1239
0:54:18.960 --> 0:54:20.500
你如果编程

1240
0:54:20.500 --> 0:54:23.320
你是涉及写进程这个领域的话

1241
0:54:23.320 --> 0:54:27.160
你几乎必然会碰到一堆的软件包的管理

1242
0:54:27.160 --> 0:54:29.460
基础的操作系统级的软件包的管理

1243
0:54:29.460 --> 0:54:31.760
然后你编程语言所特定的

1244
0:54:31.760 --> 0:54:34.060
比如JavaScript就一定会用到NPM

1245
0:54:34.060 --> 0:54:37.640
然后Python就会用到PIP类似这样的东西

1246
0:54:37.640 --> 0:54:40.720
但是这些系统到目前为止基本上都是免费的

1247
0:54:40.720 --> 0:54:43.020
如果有一个基于区块链的

1248
0:54:43.020 --> 0:54:45.840
一个区中心化的这样的一个

1249
0:54:45.840 --> 0:54:49.420
他们称之为更好的这样的一个新一代的软件包的

1250
0:54:49.420 --> 0:54:51.220
管理的这样的一个体系

1251
0:54:51.220 --> 0:54:54.040
是不是会有更多的人愿意上去贡献

1252
0:54:54.040 --> 0:54:57.100
并且获取一些利益

1253
0:54:57.100 --> 0:55:00.440
这个跟我们之前聊过的东西是有关联的

1254
0:55:00.440 --> 0:55:02.740
我们之前聊过一个话题就说

1255
0:55:02.740 --> 0:55:07.080
开源的软件比如说当初我们聊Copilot的时候

1256
0:55:07.080 --> 0:55:10.920
说如果我们写的软件代码被Copilot使用

1257
0:55:10.920 --> 0:55:12.460
并且推荐给其他的人

1258
0:55:12.460 --> 0:55:14.520
那么我们是不是都会有收益

1259
0:55:14.520 --> 0:55:17.080
或者对我有什么影响帮助

1260
0:55:17.080 --> 0:55:18.620
其实这是类似的

1261
0:55:18.620 --> 0:55:23.480
就是不论是软件包本身还是软件包的维护

1262
0:55:23.480 --> 0:55:25.520
它本身是要付出劳动的

1263
0:55:25.520 --> 0:55:29.120
这种劳动它怎么去获益的一个问题

1264
0:55:29.120 --> 0:55:32.440
关于这样的一个新东西

1265
0:55:32.440 --> 0:55:37.300
我们两位有什么看法

1266
0:55:37.300 --> 0:55:40.380
其实我们原来搞过

1267
0:55:40.380 --> 0:55:43.960
就是我跟王伟老师不是在开源社吗

1268
0:55:43.960 --> 0:55:48.560
然后其实我们开源社曾经做过一个开源项目

1269
0:55:48.560 --> 0:55:51.380
原来的名字叫Kcoin

1270
0:55:51.380 --> 0:55:54.200
就是开源社的Coin

1271
0:55:54.200 --> 0:55:58.040
后来改了个名字觉得叫Coin有点敏感就叫Ktoken

1272
0:55:58.040 --> 0:56:01.120
现在这个Ktoken这个项目还在做

1273
0:56:01.120 --> 0:56:06.740
只不过就是它处在一个

1274
0:56:06.740 --> 0:56:09.820
非常缓慢的发展阶段

1275
0:56:09.820 --> 0:56:11.360
你不能说它没发展

1276
0:56:11.360 --> 0:56:14.680
但是它的发展肯定不是说

1277
0:56:14.680 --> 0:56:16.740
全世界的开源爱好者都用起来了

1278
0:56:16.740 --> 0:56:17.760
没有肯定没有

1279
0:56:17.760 --> 0:56:21.080
连我们开源社自己的项目都没怎么用起来

1280
0:56:21.080 --> 0:56:22.880
就是这样的一个情况

1281
0:56:22.880 --> 0:56:26.720
但是这个Kcoin的理论体系

1282
0:56:26.720 --> 0:56:29.280
是很早就已经写出来了

1283
0:56:29.280 --> 0:56:33.880
就是大概是在2017年

1284
0:56:33.880 --> 0:56:36.200
我们在聊这件事情的时候

1285
0:56:36.200 --> 0:56:39.000
到了2018年的这个

1286
0:56:39.000 --> 0:56:41.400
中共开源年会我们在深圳开源年会的时候

1287
0:56:41.400 --> 0:56:43.100
还发布了这个Kcoin

1288
0:56:43.100 --> 0:56:46.040
然后还大肆的宣传了一番

1289
0:56:46.040 --> 0:56:49.500
但是从2018年到现在也四年了

1290
0:56:49.500 --> 0:56:52.320
也就还是停留在一个

1291
0:56:52.320 --> 0:56:56.420
美好设想然后并没有更多进展的阶段

1292
0:56:56.420 --> 0:57:01.540
当时我就属于那种写文章忽悠还行的那种状态

1293
0:57:01.540 --> 0:57:03.320
就是我写了一篇文章

1294
0:57:03.320 --> 0:57:06.400
那篇文章就是为了耸人听闻嘛

1295
0:57:06.400 --> 0:57:11.520
标题就叫做区块链技术是否会终结开源时代

1296
0:57:11.520 --> 0:57:14.600
果然还可以

1297
0:57:14.600 --> 0:57:15.620
标题党对吧

1298
0:57:15.620 --> 0:57:18.680
那么它提出的是一个什么问题呢

1299
0:57:18.680 --> 0:57:20.480
就是我们都知道

1300
0:57:20.480 --> 0:57:27.140
开源是一个非常强调这个利他主义的一种状态

1301
0:57:27.140 --> 0:57:29.440
而且的话我们还强调礼物文化

1302
0:57:29.440 --> 0:57:30.720
什么叫礼物文化呢

1303
0:57:30.720 --> 0:57:32.260
就是我们不图钱

1304
0:57:32.260 --> 0:57:35.080
我们把我们的好东西拿出来

1305
0:57:35.080 --> 0:57:37.120
送给社区这是一种礼物

1306
0:57:37.120 --> 0:57:39.940
然后通过给这个社区贡献礼物

1307
0:57:39.940 --> 0:57:43.020
我们换来了社区里面崇高的地位

1308
0:57:43.020 --> 0:57:44.800
这就是所谓的礼物文化

1309
0:57:44.800 --> 0:57:46.080
本质上就是不谈钱

1310
0:57:46.080 --> 0:57:48.900
你别跟我谈钱谈钱脏了我的耳朵

1311
0:57:48.900 --> 0:57:51.200
也坏了我的心情诸如此类的

1312
0:57:51.200 --> 0:57:52.240
然后呢

1313
0:57:52.240 --> 0:57:57.600
其实本质上就是很多很多的开源的开发者和开源的这个

1314
0:57:57.600 --> 0:57:59.920
爱好者或者说是维护者

1315
0:57:59.920 --> 0:58:01.700
就是没收入

1316
0:58:01.700 --> 0:58:06.300
无论是这种名不见经传的小的开源项目

1317
0:58:06.300 --> 0:58:09.900
甚至是一些非常非常著名的大型开源项目

1318
0:58:09.900 --> 0:58:11.940
背后都没有收入

1319
0:58:11.940 --> 0:58:14.760
当然它后面引发了一些问题

1320
0:58:14.760 --> 0:58:18.080
我们在2017年18年讨论这件事情的时候

1321
0:58:18.080 --> 0:58:20.140
还只是一种漫谈

1322
0:58:20.140 --> 0:58:24.480
但是到了后面我们就发现已经出现问题了

1323
0:58:24.480 --> 0:58:28.580
就是有一些非常重要的世界级范围内

1324
0:58:28.580 --> 0:58:32.680
都有影响力的开源项目背后也只有几个人维护

1325
0:58:32.680 --> 0:58:34.480
然后这个是一个问题

1326
0:58:34.480 --> 0:58:36.520
然后觉得哎呀要去解决

1327
0:58:36.520 --> 0:58:39.840
那么这不仅仅是说我们光是强调奉献了

1328
0:58:39.840 --> 0:58:41.640
看看是不是能够把这个

1329
0:58:41.640 --> 0:58:45.740
除了奉献的这条线索做得更好之外

1330
0:58:45.740 --> 0:58:47.780
是不是利益也能讲一讲呢

1331
0:58:47.780 --> 0:58:52.140
是不是也能够让所有的开源的开发者不但是能够

1332
0:58:52.140 --> 0:58:55.460
写代码写得很开心赚钱也能赚得很开心呢

1333
0:58:55.460 --> 0:58:58.780
然后这就是我们Kcoin这个项目的初衷说实话

1334
0:58:58.780 --> 0:59:03.660
跟这个T.XYZ的初衷是一模一样的

1335
0:59:03.660 --> 0:59:06.720
所以等到这个T.XYZ出来之后

1336
0:59:06.720 --> 0:59:08.260
我自己是没翻译啊

1337
0:59:08.260 --> 0:59:10.820
但是我认识的一个也是开源社区的朋友

1338
0:59:10.820 --> 0:59:13.900
他很快就翻译了这样的一个白皮书

1339
0:59:13.900 --> 0:59:16.960
然后我还是看了一遍这个白皮书的内容

1340
0:59:16.960 --> 0:59:21.580
就是唯一跟我们当时的Kcoin的区别

1341
0:59:21.580 --> 0:59:26.440
就是人家实打实的有一个包管理工具在那

1342
0:59:26.440 --> 0:59:30.020
通过这个包管理工具确实可以追踪

1343
0:59:30.020 --> 0:59:34.640
各种开源软件开源组件的实际的使用情况

1344
0:59:34.640 --> 0:59:37.960
以及由此可以促进或者说是

1345
0:59:37.960 --> 0:59:42.060
帮助更好的计算这个

1346
0:59:42.060 --> 0:59:43.080
怎么说

1347
0:59:43.080 --> 0:59:46.920
交易吧或者说是计算使用背后的成本

1348
0:59:46.920 --> 0:59:48.980
那么也许

1349
0:59:48.980 --> 0:59:52.060
围绕着开源软件的付费

1350
0:59:52.060 --> 0:59:54.360
就有可能发生

1351
0:59:54.360 --> 0:59:58.200
所以我现在看完了以后只能说

1352
0:59:58.200 --> 1:00:00.240
谨慎的看好

1353
1:00:00.240 --> 1:00:04.080
或者说期待它能够做成

1354
1:00:04.080 --> 1:00:06.900
这是我现在的一个心态

1355
1:00:06.900 --> 1:00:09.980
那王老师怎么看

1356
1:00:09.980 --> 1:00:11.260
我先插一句啊

1357
1:00:11.260 --> 1:00:16.380
就是就确实啊这个开源软件这个领域啊

1358
1:00:16.380 --> 1:00:18.160
很多人从中间受益

1359
1:00:18.160 --> 1:00:22.260
而且很多任务作是非常非常的耗时费力的

1360
1:00:22.260 --> 1:00:24.820
比如说像Homebrew这样的

1361
1:00:24.820 --> 1:00:26.600
软件包管理的

1362
1:00:26.600 --> 1:00:31.460
上面已经有好多成千上万的软件包大大小小的啊

1363
1:00:31.460 --> 1:00:35.560
然后要维护它的原代码和二进制的版本

1364
1:00:35.560 --> 1:00:37.100
二进制的版本有N个版本

1365
1:00:37.100 --> 1:00:39.660
每一个软件包有

1366
1:00:39.660 --> 1:00:42.980
起码有几十种不同的这个二进制版本

1367
1:00:42.980 --> 1:00:45.040
光比如说像Mac这样的机器

1368
1:00:45.040 --> 1:00:48.620
它上面至少你用软件包就要有Intel和

1369
1:00:48.620 --> 1:00:53.480
这个ARM的芯片两种完全不同的编译好的二进制的这个格式

1370
1:00:53.480 --> 1:00:55.020
所以就工作量非常大

1371
1:00:55.020 --> 1:00:57.060
我最近还有一个新闻特别有意思

1372
1:00:57.060 --> 1:00:59.380
就是我是Emacs的重度用户啊

1373
1:00:59.380 --> 1:01:03.720
就是目前残存不多的Emacs党之一了

1374
1:01:03.720 --> 1:01:09.360
Emacs软件是存活至今的最古老的进程员编辑企业

1375
1:01:09.360 --> 1:01:12.180
40多年了

1376
1:01:12.180 --> 1:01:16.780
据说好像从九几年到现在30多年里面

1377
1:01:16.780 --> 1:01:20.380
这个软件它挂着的bug列表

1378
1:01:20.380 --> 1:01:23.180
它叫issue tracking里面的那种open的

1379
1:01:23.180 --> 1:01:25.740
就是没有解决的bug列表

1380
1:01:25.740 --> 1:01:28.060
从来没有降到2000以下

1381
1:01:28.060 --> 1:01:32.920
但是在上个月终于降到2000以下了1999

1382
1:01:32.920 --> 1:01:34.960
是有厂商出钱了

1383
1:01:34.960 --> 1:01:38.300
没有没有没有就还是大家在那里慢慢坑吃坑吃

1384
1:01:38.300 --> 1:01:40.860
我还以为有人赞助了呢

1385
1:01:40.860 --> 1:01:43.420
不可能呀因为Emacs是FSF

1386
1:01:43.420 --> 1:01:47.520
是Richard Stolman亲自搞的东西嘛

1387
1:01:47.520 --> 1:01:52.380
而且关于Emacs跟刚才那个license还有一个关系的东西

1388
1:01:52.380 --> 1:01:54.940
就是比如说Emacs下面经常发生这种情况

1389
1:01:54.940 --> 1:02:00.060
它有同一个功能有两个软件包都可以实现这个功能

1390
1:02:00.060 --> 1:02:02.100
其中做得比较好的那一个

1391
1:02:02.100 --> 1:02:06.200
没法进到Emacs的就是那个本体里面去

1392
1:02:06.200 --> 1:02:08.760
为什么因为那个软件包的作者

1393
1:02:08.760 --> 1:02:11.580
不愿意跟FSF签一个协议

1394
1:02:11.580 --> 1:02:16.440
说这个软件包完全的符合GPL并且授权给你

1395
1:02:16.440 --> 1:02:18.240
如果有人用了这个软件包

1396
1:02:18.240 --> 1:02:22.580
并且不遵循GPL协议的话你可以去告他

1397
1:02:22.580 --> 1:02:23.600
就经常发生这种情况

1398
1:02:23.600 --> 1:02:27.440
就最后只好Emacs选一个愿意接受GPL的

1399
1:02:27.440 --> 1:02:30.260
但是功能弱一点的包放到自己的本体里面

1400
1:02:30.260 --> 1:02:32.560
当然它不影响你去装那个强的了

1401
1:02:32.560 --> 1:02:34.880
那个做第三方包放进来没问题

1402
1:02:34.880 --> 1:02:38.200
所以就开源软件的这个领域里面

1403
1:02:38.200 --> 1:02:41.020
很多任务作是非常繁重的

1404
1:02:41.020 --> 1:02:43.320
你想如果你自己做了一个软件

1405
1:02:43.320 --> 1:02:49.980
然后商用的就是每一个时间点都挂着2000个以上的bug

1406
1:02:49.980 --> 1:02:53.300
你心里慌死了 是吧

1407
1:02:53.300 --> 1:02:55.860
就任何公司都不会允许这样的软件出去的嘛

1408
1:02:55.860 --> 1:02:58.160
但是开源软件真的就忙不过来

1409
1:02:58.160 --> 1:02:59.700
它那个使用面很广

1410
1:02:59.700 --> 1:03:04.560
然后各种各样的机器上面各种各样的兼容性问题

1411
1:03:04.560 --> 1:03:10.960
但是所有这些东西都没有办法从用户那里得到一分钱

1412
1:03:10.960 --> 1:03:14.040
这个确实是个大问题

1413
1:03:14.040 --> 1:03:15.820
我就补充这个

1414
1:03:15.820 --> 1:03:17.100
王老师

1415
1:03:17.100 --> 1:03:23.760
对 因为最开始那个和那个老庄也是在开源社嘛

1416
1:03:23.760 --> 1:03:25.300
我们搞那个开token

1417
1:03:25.300 --> 1:03:28.880
因为我觉得这个都是开发者的一个非常好的一个愿景

1418
1:03:28.880 --> 1:03:31.440
就是喜欢开源

1419
1:03:31.440 --> 1:03:36.560
然后把开源的东西做出来又能够通过开源得到一些回报

1420
1:03:36.560 --> 1:03:38.100
那区块链来了以后呢

1421
1:03:38.100 --> 1:03:43.220
大家基本上就觉得这个太符合我们开源里面的

1422
1:03:43.220 --> 1:03:46.540
我们的一个诉求了

1423
1:03:46.540 --> 1:03:48.860
可它是天作之美

1424
1:03:48.860 --> 1:03:52.940
那里面其实有一个很大的一个问题就是

1425
1:03:52.940 --> 1:03:58.580
其实好几个就是你怎么样去最终去做这个分配

1426
1:03:58.580 --> 1:04:02.160
那里面也是有好多不同的一些方式

1427
1:04:02.160 --> 1:04:03.440
有任务式

1428
1:04:03.440 --> 1:04:06.780
也有一些一些度量的方式

1429
1:04:06.780 --> 1:04:10.860
因为这块正好也可以说一下就是我们实验室这边

1430
1:04:10.860 --> 1:04:14.460
其实如果大家知道的就是像那个Frank呀

1431
1:04:14.460 --> 1:04:17.260
我们现在其实也是在做一些实验

1432
1:04:17.260 --> 1:04:18.300
做什么实验呢

1433
1:04:18.300 --> 1:04:23.420
就是在因为我们一直在做GitHub上面的全域数据分析

1434
1:04:23.420 --> 1:04:25.720
那我们把这个数据拿过来之后

1435
1:04:25.720 --> 1:04:28.540
其实可以在一定的范围之内

1436
1:04:28.540 --> 1:04:31.860
可以去计算比如说我们自己实验室所有的同学

1437
1:04:31.860 --> 1:04:36.220
可以去计算他们每个月在上面的一些

1438
1:04:36.220 --> 1:04:38.780
一些贡献活跃度影响力

1439
1:04:38.780 --> 1:04:40.580
对当然是有一个

1440
1:04:40.580 --> 1:04:42.100
有一个算法和模型的

1441
1:04:42.100 --> 1:04:44.920
那这个算法和模型的也会去不断的调整

1442
1:04:44.920 --> 1:04:47.220
对然后呢我们就实验室

1443
1:04:47.220 --> 1:04:51.580
因为学校里面嘛其实也有给同学的一些

1444
1:04:51.580 --> 1:04:52.600
助研费呀

1445
1:04:52.600 --> 1:04:54.400
对那我们实际上是

1446
1:04:54.400 --> 1:04:57.220
按照这个模式是去发放这种

1447
1:04:57.220 --> 1:04:59.260
助研费的这种形式

1448
1:04:59.260 --> 1:05:02.080
对其实也是希望鼓励大家

1449
1:05:02.080 --> 1:05:03.360
如果你在

1450
1:05:03.360 --> 1:05:06.180
我们的项目上面活跃

1451
1:05:06.180 --> 1:05:10.020
对然后呢你和更加有影响力的人去协作

1452
1:05:10.020 --> 1:05:13.600
对你的软件被更多的人去使用到

1453
1:05:13.600 --> 1:05:16.940
对那你就可以有更多的这种收益

1454
1:05:16.940 --> 1:05:20.000
对那这个呢我们也确实是在做

1455
1:05:20.000 --> 1:05:24.620
对但是里面的确实还是有非常多的一些问题所存在

1456
1:05:24.620 --> 1:05:27.700
对就是包括你这个机制究竟是怎么去分配

1457
1:05:27.700 --> 1:05:29.220
还有一个更重要的就是

1458
1:05:29.220 --> 1:05:33.060
究竟谁会最终来为这件事情去买单

1459
1:05:33.060 --> 1:05:34.340
对吧就是

1460
1:05:34.340 --> 1:05:36.660
因为学校里面可能要好一点因为

1461
1:05:36.660 --> 1:05:39.220
毕竟还是有这种

1462
1:05:39.220 --> 1:05:42.540
学校里面的一些费用包括

1463
1:05:42.540 --> 1:05:44.080
学校的一些项目的

1464
1:05:44.080 --> 1:05:46.120
对那这件事情是不是能够

1465
1:05:46.120 --> 1:05:48.420
更加普世性更加能够推广

1466
1:05:48.420 --> 1:05:50.980
对以及这个模型是不是能够

1467
1:05:50.980 --> 1:05:53.540
收集到足够方方面面的信息

1468
1:05:53.540 --> 1:05:56.100
能够相对真实的反映

1469
1:05:56.100 --> 1:05:58.920
一个人的一个贡献程度

1470
1:05:58.920 --> 1:06:00.200
对这些都是

1471
1:06:00.200 --> 1:06:02.240
对那那个

1472
1:06:02.240 --> 1:06:05.320
Team XYZ 其实

1473
1:06:05.320 --> 1:06:08.140
我们也有类似的一些研究

1474
1:06:08.140 --> 1:06:10.180
其实明天周一的话那个

1475
1:06:10.180 --> 1:06:12.740
Frank可能就会讲供应链这一块

1476
1:06:12.740 --> 1:06:15.300
对因为我们也会有供应链的信息

1477
1:06:15.300 --> 1:06:18.120
对一个朴素的一个思想其实也是

1478
1:06:18.120 --> 1:06:21.960
就是哪个软件被更多的去使用

1479
1:06:21.960 --> 1:06:25.040
或者是被更加重要性有影响力的

1480
1:06:25.040 --> 1:06:27.080
软件去使用去依赖的话

1481
1:06:27.080 --> 1:06:28.360
对它其实是

1482
1:06:28.360 --> 1:06:31.940
一个更加基础性或者是更加重要软件

1483
1:06:31.940 --> 1:06:34.240
对那它的上面那些

1484
1:06:34.240 --> 1:06:36.040
开发者是不是也

1485
1:06:36.040 --> 1:06:37.060
应该去

1486
1:06:37.060 --> 1:06:40.140
受到更多的一些关注或者是一些资助

1487
1:06:40.140 --> 1:06:42.180
对也会从供应链的这个

1488
1:06:42.180 --> 1:06:44.740
这个视角会去看这个事情

1489
1:06:44.740 --> 1:06:46.800
对但是现在的一个

1490
1:06:46.800 --> 1:06:48.840
因为我不知道就是像

1491
1:06:48.840 --> 1:06:53.200
像那个XYZT上面他们现在的整个

1492
1:06:53.200 --> 1:06:55.500
包括信息啊收集到什么程度了

1493
1:06:55.500 --> 1:06:56.260
对因为

1494
1:06:56.260 --> 1:06:58.820
软件其实还是特别多嘛

1495
1:06:58.820 --> 1:07:00.880
而且现在不同的语言

1496
1:07:00.880 --> 1:07:01.640
它的

1497
1:07:01.640 --> 1:07:06.500
这种包管理器啊可能都还是有一些不一样的一些地方

1498
1:07:06.500 --> 1:07:08.300
是不是能够把整个

1499
1:07:08.300 --> 1:07:11.360
软件界能够补充得更全

1500
1:07:11.360 --> 1:07:12.640
对进而

1501
1:07:12.640 --> 1:07:14.180
去做一些计算

1502
1:07:14.180 --> 1:07:17.260
对我还不是特别清楚对但是这个方向

1503
1:07:17.260 --> 1:07:20.340
那作为一个开发者作为一个

1504
1:07:20.340 --> 1:07:24.420
对开源一直去喜爱并且去做研究的肯定还是希望

1505
1:07:24.420 --> 1:07:28.780
如果真的能够有这样的一种机制并且run起来了

1506
1:07:28.780 --> 1:07:30.580
对那我们还是挺

1507
1:07:30.580 --> 1:07:31.340
那个

1508
1:07:31.340 --> 1:07:34.160
乐意去看到的

1509
1:07:34.160 --> 1:07:38.760
其实这个问题啊内核的关键点还是在

1510
1:07:38.760 --> 1:07:40.040
钱

1511
1:07:40.040 --> 1:07:41.840
就是谁来付钱的问题

1512
1:07:41.840 --> 1:07:43.380
对从哪里来

1513
1:07:43.380 --> 1:07:44.660
这个

1514
1:07:44.660 --> 1:07:46.440
对我也

1515
1:07:46.440 --> 1:07:50.280
他是怎么来他是从哪里来的呢我不太清楚

1516
1:07:50.280 --> 1:07:52.840
他还正处在想的过程当中嘛

1517
1:07:52.840 --> 1:07:55.140
并没有开始去收这个钱

1518
1:07:55.140 --> 1:07:59.500
因为homebrew也好还有所有跟homebrew类似的东西比如NPM

1519
1:07:59.500 --> 1:08:03.340
所有这些东西他们有收钱吗都没有

1520
1:08:03.340 --> 1:08:07.940
我见过的一个挺有意思的模式它是这样的就是有一个人他

1521
1:08:07.940 --> 1:08:09.740
搞了一个开源的项目啊

1522
1:08:09.740 --> 1:08:11.280
也有一定的影响

1523
1:08:11.280 --> 1:08:12.560
然后他就

1524
1:08:12.560 --> 1:08:16.140
采取了典型的开源领域的那种buy me a coffee

1525
1:08:16.140 --> 1:08:18.960
就是你如果用了喜欢的话你就

1526
1:08:18.960 --> 1:08:21.260
给我打赏

1527
1:08:21.260 --> 1:08:24.340
打赏他说叫buy me a coffee实际上就是打赏啊

1528
1:08:24.340 --> 1:08:25.360
就donate了

1529
1:08:25.360 --> 1:08:29.720
就是你可以选择donate任意数量的这个钱

1530
1:08:29.720 --> 1:08:33.040
但是他有一个很有意思的点就在哪里呢就说

1531
1:08:33.040 --> 1:08:34.840
如果你

1532
1:08:34.840 --> 1:08:35.860
打赏

1533
1:08:35.860 --> 1:08:38.680
比如说超过了50美金

1534
1:08:38.680 --> 1:08:41.240
那么我就认定你是sponsor

1535
1:08:41.240 --> 1:08:45.080
那么这个对于sponsor我会提供一些福利

1536
1:08:45.080 --> 1:08:48.920
什么福利呢比如说如果你提了issue我会第一时间去处理

1537
1:08:48.920 --> 1:08:50.200
就类似这种

1538
1:08:50.200 --> 1:08:52.500
啊OK

1539
1:08:52.500 --> 1:08:55.320
就是这个给我一个感觉什么呢就是

1540
1:08:55.320 --> 1:09:00.440
这么多年下来啊就是对于开源软件的使用

1541
1:09:00.440 --> 1:09:04.520
大家的付费意愿如何创建啊非常难了已经

1542
1:09:04.520 --> 1:09:06.060
对挺难的

1543
1:09:06.060 --> 1:09:07.600
而且

1544
1:09:07.600 --> 1:09:13.480
说句政治不正确的话也存在一些非良性竞争比如说有人收费了一定有人会做一个

1545
1:09:13.480 --> 1:09:14.520
免费的就是

1546
1:09:14.520 --> 1:09:16.820
让你收不下去的

1547
1:09:16.820 --> 1:09:21.180
这个是有先例的还有人还会欢呼他就是个英雄因为你看

1548
1:09:21.180 --> 1:09:23.480
当年最早的这个

1549
1:09:23.480 --> 1:09:27.840
所谓起来打倒微软的那些人也就是在做

1550
1:09:27.840 --> 1:09:29.880
自由软件开源软件

1551
1:09:29.880 --> 1:09:32.440
逻辑是一样的嘛现在既然

1552
1:09:32.440 --> 1:09:37.560
某某开源软件竟然开始商业化赚钱了那就我们再搞一个开源了

1553
1:09:37.560 --> 1:09:40.880
对而且这条路径你发现没有他最后赢了

1554
1:09:40.880 --> 1:09:44.980
对他逼着微软下场做开源认认真真做开源了

1555
1:09:44.980 --> 1:09:49.840
微软最近做了一个事情让我都很感动的就是把LSP开源了

1556
1:09:49.840 --> 1:09:51.640
就是那个Language Server

1557
1:09:51.640 --> 1:09:52.920
语言服务器

1558
1:09:52.920 --> 1:09:57.780
这个东西是他完全自己做的东西然后在Windows Studio Code里面用得很好

1559
1:09:57.780 --> 1:10:05.200
他把它开源出来开源出来唯一的效果就是让别的编辑器也可以使用他这个LSP的后端

1560
1:10:05.200 --> 1:10:08.280
就直接跟他自己的Windows Studio Code竞争的

1561
1:10:08.280 --> 1:10:09.800
居然他就开源了

1562
1:10:09.800 --> 1:10:15.940
当然这个也是鼓励那些LSP的作者把这个语言服务器做得更好了

1563
1:10:15.940 --> 1:10:22.860
最后也是双赢了但是作为微软这样家公司来讲我觉得真的是已经成功的把它拉下水了

1564
1:10:22.860 --> 1:10:25.420
这是开源界的一大胜利

1565
1:10:25.420 --> 1:10:28.240
对彻底洗白

1566
1:10:28.240 --> 1:10:33.860
所以最终的问题还是就是怎么去付费如果没有人付费的话你的

1567
1:10:33.860 --> 1:10:39.240
分配和激励机制做的再科学好像也没有用武之地

1568
1:10:39.240 --> 1:10:41.040
确实

1569
1:10:41.040 --> 1:10:46.400
那现在的一个非常就是吊诡的事情啊比如说我自己

1570
1:10:46.400 --> 1:10:54.860
我买了B站的这个大会员我这个腾讯视频爱奇艺也都买了会员

1571
1:10:54.860 --> 1:10:59.980
我现在唯一没买的常用的可能就是音乐的那一批了因为我真的

1572
1:10:59.980 --> 1:11:07.140
就宁可不用他因为我自己机器上有海量的自己的音乐我就自己可以去听这是多年的爱好

1573
1:11:07.140 --> 1:11:13.280
那我实际上已经为这些服务都付了钱但是我们我使用这些服务的评测

1574
1:11:13.280 --> 1:11:16.620
其实很低的我难得去看一看视频

1575
1:11:16.620 --> 1:11:21.980
B站可能经常看但我在B站看的绝大部分也是不需要会员就能看东西

1576
1:11:21.980 --> 1:11:24.540
偶尔追一两个翻而已

1577
1:11:24.540 --> 1:11:29.920
这就这么回事但是我使用的非常频繁的比如像homebrew

1578
1:11:29.920 --> 1:11:36.060
还有那些开发语言的那些包啊比如python下面的那些pypi的那些包啊

1579
1:11:36.060 --> 1:11:42.460
我就一分钱都没付然后如果他说他要收费了比如说这个PHI

1580
1:11:42.460 --> 1:11:47.320
他说我这个下载python的这个pypi install下载python的这些包

1581
1:11:47.320 --> 1:11:52.580
我一年收50刀我会买吗我可能会买但是有很多人

1582
1:11:52.580 --> 1:11:56.280
马马咧咧的就走了

1583
1:11:56.280 --> 1:11:59.100
变了

1584
1:11:59.100 --> 1:12:04.480
所以这个怎么办这个才是一个真的超级难点所在

1585
1:12:04.480 --> 1:12:09.860
就等下一代吧这一代估计是不行了这一代的习惯已经养残了

1586
1:12:09.860 --> 1:12:13.960
还是挺难的就是所谓历史趋势

1587
1:12:13.960 --> 1:12:19.340
虽然历史偶尔会开倒车但真的非常少

1588
1:12:19.340 --> 1:12:24.960
因为人的本性就这样嘛就是我我肯定尽可能少的这个付出得到好东西嘛

1589
1:12:24.960 --> 1:12:29.060
你说国内的这些视频的网站那是因为垄断了呀

1590
1:12:29.060 --> 1:12:32.900
最后两三家垄断他开始收费你不得不去付啊

1591
1:12:32.900 --> 1:12:39.560
但开源软件本身的特性就保证了他不会被垄断了

1592
1:12:39.560 --> 1:12:46.460
所以T.xyz我还挺关注这个东西我也很想看看他怎么去走出这样条路来

1593
1:12:46.460 --> 1:12:53.120
好我们最后一个话题来讲一讲这个AI监工的事情

1594
1:12:53.120 --> 1:12:57.220
最近连续的出现了几个这方面的新闻

1595
1:12:57.220 --> 1:13:00.040
就是关于这个

1596
1:13:00.040 --> 1:13:02.080
一些大的公司啊

1597
1:13:02.080 --> 1:13:04.640
用AI系统来做监工

1598
1:13:04.640 --> 1:13:10.020
然后来统计这个员工的工作的时间啦

1599
1:13:10.020 --> 1:13:13.080
所谓的效率啦然后根据这个来做出

1600
1:13:13.080 --> 1:13:15.400
裁员啊解雇啊

1601
1:13:15.400 --> 1:13:18.220
或者降级啊类似这样的一些行为

1602
1:13:18.220 --> 1:13:23.580
我现在看到的有两个新闻啊都传播相对比较广的

1603
1:13:23.580 --> 1:13:25.120
一个是好久以前了

1604
1:13:25.120 --> 1:13:27.940
大概两三年以前了amazon

1605
1:13:27.940 --> 1:13:33.320
用AI系统来统计一个员工的工作时间

1606
1:13:33.320 --> 1:13:37.920
然后来确定哪些人是末位淘汰

1607
1:13:37.920 --> 1:13:39.720
amazon是

1608
1:13:39.720 --> 1:13:45.100
就是amazon这家公司很有意思啊他在美国基本上相当于是

1609
1:13:45.100 --> 1:13:47.400
富士康这种地位的公司了

1610
1:13:47.400 --> 1:13:50.720
就是在用功方面名声极差

1611
1:13:50.720 --> 1:13:54.560
基本上是美国的大企业里面的末位了

1612
1:13:54.560 --> 1:13:56.860
就是一般的人能不去就不去的

1613
1:13:56.860 --> 1:13:59.940
当然他给的钱也多了有些人就会愿意去

1614
1:13:59.940 --> 1:14:05.320
就一般来讲加班家常便饭然后这个员工的福利也不太好

1615
1:14:05.320 --> 1:14:06.860
就处于这么一个状态

1616
1:14:06.860 --> 1:14:08.900
老板还经常PUA

1617
1:14:08.900 --> 1:14:10.940
对

1618
1:14:10.940 --> 1:14:11.960
就是

1619
1:14:11.960 --> 1:14:17.860
那么他之前就是用这样的系统来去统计工作时间的

1620
1:14:17.860 --> 1:14:19.900
然后比较新的一个是Facebook

1621
1:14:19.900 --> 1:14:22.200
这个是最近刚刚看到的

1622
1:14:22.200 --> 1:14:26.040
就是Facebook解雇了一批人

1623
1:14:26.040 --> 1:14:28.080
然后一开始的传闻是说

1624
1:14:28.080 --> 1:14:30.400
是通过算法随机挑选的

1625
1:14:30.400 --> 1:14:33.200
然后后面被解雇的人当中的一个

1626
1:14:33.200 --> 1:14:36.280
出来爆料了说不是随机的

1627
1:14:36.280 --> 1:14:38.840
是绩效考核这个绩效考核就是

1628
1:14:38.840 --> 1:14:41.660
在电脑上安装监控软件

1629
1:14:41.660 --> 1:14:43.960
这个软件可以监控比如说你

1630
1:14:43.960 --> 1:14:46.780
连续10分钟这个没有

1631
1:14:46.780 --> 1:14:48.560
在计算机上你比方正在工作

1632
1:14:48.560 --> 1:14:51.120
突然停下来了10分钟到15分钟

1633
1:14:51.120 --> 1:14:54.720
那么认为这段时间你就没有在工作了

1634
1:14:54.720 --> 1:14:58.300
这个其实是一个混帐逻辑

1635
1:14:58.300 --> 1:14:59.580
如果我在思考呢

1636
1:14:59.580 --> 1:15:03.940
进程员这个也太常见了

1637
1:15:03.940 --> 1:15:06.240
或者进程员或者甚至我不是进程员

1638
1:15:06.240 --> 1:15:07.520
我就是在写文档

1639
1:15:07.520 --> 1:15:11.360
写完了一段接下来我要思考一下了

1640
1:15:11.360 --> 1:15:15.200
总而言之就是有一系列当然这个可能也他的猜测

1641
1:15:15.200 --> 1:15:16.480
我不确定他是不是真的这样

1642
1:15:16.480 --> 1:15:17.760
总而言之就是

1643
1:15:17.760 --> 1:15:21.600
通过计算机系统里面的一些监控的软件

1644
1:15:21.600 --> 1:15:25.700
监控员工在电脑上的操作记录行为

1645
1:15:25.700 --> 1:15:30.040
来给员工打分来作为绩效

1646
1:15:30.040 --> 1:15:32.860
然后这绩效分数最后作为了这个淘汰的标准

1647
1:15:32.860 --> 1:15:36.960
那么这个事情就引发了很多很多的争议

1648
1:15:36.960 --> 1:15:39.520
就是这里面有各种各样的争议

1649
1:15:39.520 --> 1:15:41.300
比如说隐私方面的

1650
1:15:41.300 --> 1:15:46.180
比如说这个资本主义剥削劳动的方面的

1651
1:15:46.180 --> 1:15:48.980
还有就是这个

1652
1:15:48.980 --> 1:15:52.820
怎么对这种行为到底怎么定性

1653
1:15:52.820 --> 1:15:54.860
需不需要对这种行为进行制约

1654
1:15:54.860 --> 1:15:58.960
比如这个算法本身是不是需要被一定的管制

1655
1:15:58.960 --> 1:16:01.260
类似这样的讨论

1656
1:16:01.260 --> 1:16:02.800
这个两位怎么看

1657
1:16:02.800 --> 1:16:06.900
你要管制算法至少要开放吧

1658
1:16:06.900 --> 1:16:08.440
要公开透明至少

1659
1:16:08.440 --> 1:16:10.740
对呀这是我们

1660
1:16:10.740 --> 1:16:13.300
因为现在碰到越来越多这样的一些事情

1661
1:16:13.300 --> 1:16:15.860
对就是算法对我们

1662
1:16:15.860 --> 1:16:17.900
个人个体的这种

1663
1:16:17.900 --> 1:16:21.220
不管是监控也好还是规制也好

1664
1:16:21.220 --> 1:16:23.780
包括我们前面也讨论过的像这种

1665
1:16:23.780 --> 1:16:26.600
外卖选手的那个外卖的起手啊

1666
1:16:26.600 --> 1:16:28.400
也会和算法是有一定的关系嘛

1667
1:16:28.400 --> 1:16:30.180
现在越来越多都是这种

1668
1:16:30.180 --> 1:16:32.740
对其实像现在学界

1669
1:16:32.740 --> 1:16:34.800
其实开放数据开放算法

1670
1:16:34.800 --> 1:16:37.620
对包括AI道德这些东西其实都是

1671
1:16:37.620 --> 1:16:39.140
讨论的挺多的

1672
1:16:39.140 --> 1:16:42.220
对但是呢具体怎么样去落地

1673
1:16:42.220 --> 1:16:44.260
特别是和一些法律

1674
1:16:44.260 --> 1:16:46.820
最终能够结合起来其实

1675
1:16:46.820 --> 1:16:51.940
还是挺有挑战的

1676
1:16:51.940 --> 1:16:55.020
其实我想先讲个故事

1677
1:16:55.020 --> 1:16:57.820
就是我原来发现在我身上的

1678
1:16:57.820 --> 1:17:01.920
李俊可能知道的我原来在硬客网

1679
1:17:01.920 --> 1:17:05.000
待过三年然后才进了盛大创新院嘛

1680
1:17:05.000 --> 1:17:10.120
对然后其实我离开硬客网是非常不愉快的

1681
1:17:10.120 --> 1:17:14.220
就是最后是彻底倒翻打官司打到最后我胜诉

1682
1:17:14.220 --> 1:17:17.040
然后结束的这个硬客网的职业生涯

1683
1:17:17.040 --> 1:17:19.080
到最后打的是个什么官司呢

1684
1:17:19.080 --> 1:17:22.160
就是明明是公司没钱了

1685
1:17:22.160 --> 1:17:23.440
要裁员

1686
1:17:23.440 --> 1:17:24.720
但是呢

1687
1:17:24.720 --> 1:17:27.280
他们就搞了一堆证据

1688
1:17:27.280 --> 1:17:34.960
证明我当时在公司里访问的不是工作所需要的网站

1689
1:17:34.960 --> 1:17:37.000
然后说我不是

1690
1:17:37.000 --> 1:17:39.820
这个因为什么什么裁员辞退你

1691
1:17:39.820 --> 1:17:43.400
而是因为你违反了公司的这个员工守则

1692
1:17:43.400 --> 1:17:47.240
所以我把你开除了

1693
1:17:47.240 --> 1:17:48.260
就是这样的

1694
1:17:48.260 --> 1:17:50.320
所以这个跟AI没关系

1695
1:17:50.320 --> 1:17:54.920
这就是一个老板当他要作恶的时候

1696
1:17:54.920 --> 1:17:58.760
他可能会用出任何他可以

1697
1:17:58.760 --> 1:18:02.340
想得到的损招来跟你搞

1698
1:18:02.340 --> 1:18:06.440
但是另外一方面就是值得高兴的就是我们国家的

1699
1:18:06.440 --> 1:18:07.720
法律

1700
1:18:07.720 --> 1:18:10.020
还是保护劳动者的

1701
1:18:10.020 --> 1:18:13.600
所以最终是什么呢就是我先去申请劳动仲裁

1702
1:18:13.600 --> 1:18:18.460
然后他那个公司其实非常的就是那个老板是一个非常

1703
1:18:18.460 --> 1:18:21.280
鸡贼的家伙他之所以在

1704
1:18:21.280 --> 1:18:24.360
反过来提起诉讼就是对我提起诉讼

1705
1:18:24.360 --> 1:18:26.660
只是为了拖延

1706
1:18:26.660 --> 1:18:28.200
支付的时间

1707
1:18:28.200 --> 1:18:31.020
他本来应该给我这个离职补偿金嘛

1708
1:18:31.020 --> 1:18:34.600
他就打官司一审二审三审一审二审中审

1709
1:18:34.600 --> 1:18:36.640
最后就是还是会给我钱

1710
1:18:36.640 --> 1:18:38.440
只不过能够多拖几个月

1711
1:18:38.440 --> 1:18:41.260
但是最终我还是赢了

1712
1:18:41.260 --> 1:18:47.400
就是这样的事情反正那个时候的这个劳动仲裁其实没有现在的环境好

1713
1:18:47.400 --> 1:18:49.440
现在更倾向劳动者一些

1714
1:18:49.440 --> 1:18:54.560
对所以当时我就觉得已经是算保护嘛因为这些证据都是

1715
1:18:54.560 --> 1:18:56.620
都是不公正的证据

1716
1:18:56.620 --> 1:19:00.200
就是他是从自己的公司里

1717
1:19:00.200 --> 1:19:04.800
拿出来就是从公司里拿这种所谓的浏览器监控的数据

1718
1:19:04.800 --> 1:19:07.120
然后说这些与工作无关

1719
1:19:07.120 --> 1:19:09.680
因此你违反劳动的这个什么什么

1720
1:19:09.680 --> 1:19:10.960
员工守则

1721
1:19:10.960 --> 1:19:12.240
诸如此类的

1722
1:19:12.240 --> 1:19:13.520
但两个

1723
1:19:13.520 --> 1:19:14.540
第一个

1724
1:19:14.540 --> 1:19:18.640
他完全可以伪造我的访问数据

1725
1:19:18.640 --> 1:19:19.660
另外一个

1726
1:19:19.660 --> 1:19:25.040
即使是劳动守则里也没有规定到这么清楚其实他们后面自己

1727
1:19:25.040 --> 1:19:29.640
又另外创造了一个所谓的劳动守册

1728
1:19:29.640 --> 1:19:31.440
来反过来告我

1729
1:19:31.440 --> 1:19:34.260
所以这些都是他们违规的地方

1730
1:19:34.260 --> 1:19:38.860
而且这个违反劳动这个公司签订的劳动守册

1731
1:19:38.860 --> 1:19:42.200
是不是就能够无责任的这个截聘

1732
1:19:42.200 --> 1:19:44.500
这个本身也不是必然的

1733
1:19:44.500 --> 1:19:47.580
这个还要看是不是违反劳动法

1734
1:19:47.580 --> 1:19:52.180
就有很多这个讲究

1735
1:19:52.180 --> 1:19:53.980
但是我感觉

1736
1:19:53.980 --> 1:19:56.540
这种技术手段确实对

1737
1:19:56.540 --> 1:19:59.340
劳动者其实带来了挺大的这种

1738
1:19:59.340 --> 1:20:02.160
这种压力对那庄老师可能是

1739
1:20:02.160 --> 1:20:05.480
还是挺愿意去

1740
1:20:05.480 --> 1:20:07.020
和企业去做这个事

1741
1:20:07.020 --> 1:20:08.300
对但更多的

1742
1:20:08.300 --> 1:20:10.860
做一个弱势的可能他就觉得

1743
1:20:10.860 --> 1:20:13.680
甚至有点心虚我确实可能做了一些

1744
1:20:13.680 --> 1:20:16.740
上班我摸鱼的事情

1745
1:20:16.740 --> 1:20:20.580
这个我觉得就是大家的观念要转变

1746
1:20:20.580 --> 1:20:23.400
就是该争取的利益要去争取

1747
1:20:23.400 --> 1:20:29.300
哪怕争取没有成功比如说确实自己最后发现理亏的话你也要去做

1748
1:20:29.300 --> 1:20:30.820
没什么的

1749
1:20:30.820 --> 1:20:33.380
那是正当权益嘛

1750
1:20:33.380 --> 1:20:38.240
除非你认除非就是公司的这个各种理由和对你最后的这个处罚你都认

1751
1:20:38.240 --> 1:20:39.780
那没话可讲

1752
1:20:39.780 --> 1:20:40.800
你就认了呗

1753
1:20:40.800 --> 1:20:41.320
对吧

1754
1:20:41.320 --> 1:20:47.460
如果你又不服气你又放弃这个权利这个不好这个要去争取

1755
1:20:47.460 --> 1:20:51.560
所以对我完全赞同刚才老庄说的这个观点就是

1756
1:20:51.560 --> 1:20:54.360
这事跟AI的关系不大

1757
1:20:54.360 --> 1:20:57.180
当然现在这个

1758
1:20:57.180 --> 1:20:58.200
计算机算法

1759
1:20:58.200 --> 1:21:01.520
其实我更愿意用计算机算法这样的一个名称

1760
1:21:01.520 --> 1:21:05.880
就是因为AI这个名字说白了比较像市场广告

1761
1:21:05.880 --> 1:21:08.960
你说啥玩意算AI呢

1762
1:21:08.960 --> 1:21:11.260
我写了一个进程这个进程

1763
1:21:11.260 --> 1:21:16.380
可以猜测你接下来可能要

1764
1:21:16.380 --> 1:21:19.200
这个打开的软件根据

1765
1:21:19.200 --> 1:21:22.000
平常的习惯的这个追踪

1766
1:21:22.000 --> 1:21:26.360
我猜测你可能每天中午12点左右你们又要吃饭了吧

1767
1:21:26.360 --> 1:21:28.920
可能会打开微博或者这个

1768
1:21:28.920 --> 1:21:31.220
这个这个B站刷东西

1769
1:21:31.220 --> 1:21:33.280
这种东西算不算AI呢

1770
1:21:33.280 --> 1:21:35.320
其实它就是一个统计算法而已

1771
1:21:35.320 --> 1:21:37.360
所以实际上本质就是计算机算法

1772
1:21:37.360 --> 1:21:40.180
通过计算机算法来做绩效

1773
1:21:40.180 --> 1:21:41.720
这件事情呢

1774
1:21:41.720 --> 1:21:44.020
说老实话它是中立的

1775
1:21:44.020 --> 1:21:47.600
它可能是作恶也可能不是这说不清楚

1776
1:21:47.600 --> 1:21:49.920
所以还得具体看情况

1777
1:21:49.920 --> 1:21:53.500
就我想说一说的是我个人的

1778
1:21:53.500 --> 1:21:55.280
一个态度什么态度呢就是

1779
1:21:55.280 --> 1:22:00.140
哪些东西是我明确的不赞同的

1780
1:22:00.140 --> 1:22:05.260
比如说明显的这个侵犯个人隐私的东西

1781
1:22:05.260 --> 1:22:08.080
比如在洗手间里装个监控

1782
1:22:08.080 --> 1:22:10.900
这种肯定是有问题的

1783
1:22:10.900 --> 1:22:14.480
然后这是就是对隐私

1784
1:22:14.480 --> 1:22:17.040
这已经违法了吧应该说

1785
1:22:17.040 --> 1:22:19.860
有可能

1786
1:22:19.860 --> 1:22:24.720
这个因为中国对于这个在什么地方可以安装摄像头

1787
1:22:24.720 --> 1:22:26.260
是有专门的法规的

1788
1:22:26.260 --> 1:22:28.820
什么人可以在什么地方安装摄像头

1789
1:22:28.820 --> 1:22:30.360
这个摄像头的数据

1790
1:22:30.360 --> 1:22:33.160
这个是什么人掌握的

1791
1:22:33.160 --> 1:22:35.480
这都是有相关的规定的

1792
1:22:35.480 --> 1:22:37.780
OK还有第二种

1793
1:22:37.780 --> 1:22:41.880
就是明显的不对等的关系

1794
1:22:41.880 --> 1:22:45.460
比如说我在你的电脑上安装了监控软件

1795
1:22:45.460 --> 1:22:47.760
但是你不知道

1796
1:22:47.760 --> 1:22:51.100
就是我瞒着你在你的电脑上安装了这个监控软件

1797
1:22:51.100 --> 1:22:52.120
也就是说

1798
1:22:52.120 --> 1:22:56.480
这种东西它本身是

1799
1:22:56.480 --> 1:22:59.300
即使拿到法律上去打官司也是

1800
1:22:59.300 --> 1:23:01.340
非常可疑的证据

1801
1:23:01.340 --> 1:23:03.140
那么

1802
1:23:03.140 --> 1:23:05.700
什么样的事情是

1803
1:23:05.700 --> 1:23:07.220
不太好确定的

1804
1:23:07.220 --> 1:23:10.820
甚至于我们必须要去面对的

1805
1:23:10.820 --> 1:23:14.140
比如说如何去科学的

1806
1:23:14.140 --> 1:23:17.220
衡量一个人的绩效和产出

1807
1:23:17.220 --> 1:23:19.520
我以前在创新院因为

1808
1:23:19.520 --> 1:23:22.860
虽然创新院是一个我们上次介绍过是一个

1809
1:23:22.860 --> 1:23:24.140
非常

1810
1:23:24.140 --> 1:23:26.440
特别的一个机构

1811
1:23:26.440 --> 1:23:30.280
有很多地方是气氛非常自由然后也

1812
1:23:30.280 --> 1:23:34.120
有很宽松的一些管理环境但是它有一点

1813
1:23:34.120 --> 1:23:36.160
它上下班是要打卡的

1814
1:23:36.160 --> 1:23:37.700
这个是

1815
1:23:37.700 --> 1:23:41.280
因为整个盛大集团都这样

1816
1:23:41.280 --> 1:23:46.660
由于各种原因你可以认为是官僚可以认为什么反正就是摆不平

1817
1:23:46.660 --> 1:23:48.460
没法让我们有

1818
1:23:48.460 --> 1:23:49.480
特殊性

1819
1:23:49.480 --> 1:23:50.500
还是要打卡

1820
1:23:50.500 --> 1:23:51.280
但是呢

1821
1:23:51.280 --> 1:23:55.880
也采取了一些这个特殊的手段比如说你万一迟到了你跟

1822
1:23:55.880 --> 1:23:58.180
领导打个招呼基本上问题不大

1823
1:23:58.180 --> 1:23:59.720
但还是要打卡的

1824
1:23:59.720 --> 1:24:00.740
这个其实

1825
1:24:00.740 --> 1:24:05.100
创新院有很多人是颇有微词包括我在内

1826
1:24:05.100 --> 1:24:06.880
我当时曾经

1827
1:24:06.880 --> 1:24:09.700
讲过一个就是我说我原则上是

1828
1:24:09.700 --> 1:24:14.560
就绝对不会加入一家需要上下班打卡的公司

1829
1:24:14.560 --> 1:24:16.620
为什么就是因为我觉得

1830
1:24:16.620 --> 1:24:20.460
下班打卡它无非就是限定你的工作时间嘛

1831
1:24:20.460 --> 1:24:25.060
然后你如果工作时间上有问题的话它就要扣你的钱

1832
1:24:25.060 --> 1:24:27.880
而不去考虑你实际的产出

1833
1:24:27.880 --> 1:24:30.960
那么这是一种就相当于放弃了

1834
1:24:30.960 --> 1:24:33.000
正确的管理而去

1835
1:24:33.000 --> 1:24:34.280
屈从于一种

1836
1:24:34.280 --> 1:24:37.600
简单粗暴的实际上没有任何科学性的一个管理

1837
1:24:37.600 --> 1:24:39.400
这个东西尤其对于

1838
1:24:39.400 --> 1:24:41.960
我们这样的做软件的

1839
1:24:41.960 --> 1:24:44.260
也就是

1840
1:24:44.260 --> 1:24:47.340
通过员工的智力创造

1841
1:24:47.340 --> 1:24:50.160
来创造价值的这样的一种公司

1842
1:24:50.160 --> 1:24:53.740
那你去严格的限定时间其实没有特别大的意义

1843
1:24:53.740 --> 1:24:57.580
你关键还是要看它实际的产出是怎么样子的

1844
1:24:57.580 --> 1:25:00.660
那如果一个公司

1845
1:25:00.660 --> 1:25:02.440
它对于绩效的

1846
1:25:02.440 --> 1:25:04.500
管理非常的松垮

1847
1:25:04.500 --> 1:25:08.580
反而很在意的是这样的一些绝对的工作时间

1848
1:25:08.580 --> 1:25:11.660
比如像我刚才提到的那个报导里面说

1849
1:25:11.660 --> 1:25:12.940
监控你的电脑

1850
1:25:12.940 --> 1:25:14.480
你有10分钟没有任何操作了

1851
1:25:14.480 --> 1:25:16.260
认为你这10分钟就没有在工作

1852
1:25:16.260 --> 1:25:18.060
这个毫无疑问是

1853
1:25:18.060 --> 1:25:19.340
很混帐的逻辑

1854
1:25:19.340 --> 1:25:21.640
这种我是坚决的反对的

1855
1:25:21.640 --> 1:25:23.180
但是如果

1856
1:25:23.180 --> 1:25:26.260
它的这个算法更精细一些

1857
1:25:26.260 --> 1:25:28.040
比如它从你的

1858
1:25:28.040 --> 1:25:30.340
工作成果上去做一些分析

1859
1:25:30.340 --> 1:25:33.680
同样是这两个进程员这个月

1860
1:25:33.680 --> 1:25:37.000
都产出了比如说5000行代码

1861
1:25:37.000 --> 1:25:40.340
这5000行代码的价值能不能够分析的比较清晰

1862
1:25:40.340 --> 1:25:42.640
然后来作为绩效的一个基础

1863
1:25:42.640 --> 1:25:47.240
这个我觉得这样的算法可能还真的值得去好好的研究

1864
1:25:47.240 --> 1:25:49.560
这个是我的一个个人态度

1865
1:25:49.560 --> 1:25:51.340
你们两位怎么看

1866
1:25:51.340 --> 1:25:52.360
在这样的

1867
1:25:52.360 --> 1:25:55.700
算法没有发明出来之前

1868
1:25:55.700 --> 1:25:58.000
如果有人忽悠老板

1869
1:25:58.000 --> 1:26:00.040
说我能帮你算这个

1870
1:26:00.040 --> 1:26:03.120
这就是小人

1871
1:26:03.120 --> 1:26:04.920
而且这种人太多

1872
1:26:04.920 --> 1:26:10.540
就通常就会有人跟老板说我们可以用数字来管理

1873
1:26:10.540 --> 1:26:12.840
然后我们可以量化的评估

1874
1:26:12.840 --> 1:26:14.640
老板肯定也喜欢这种人

1875
1:26:14.640 --> 1:26:16.680
但其实他在骗人

1876
1:26:16.680 --> 1:26:20.780
那这个能不能就是说比如说设置一个时间段半年到一年

1877
1:26:20.780 --> 1:26:27.180
然后在一个这个尺度有限的团队里面做一下对照组的测试

1878
1:26:27.180 --> 1:26:28.200
比如说

1879
1:26:28.200 --> 1:26:30.500
一个团队二三十个人找一个

1880
1:26:30.500 --> 1:26:32.300
不大的团队二三十个人

1881
1:26:32.300 --> 1:26:33.580
这个

1882
1:26:33.580 --> 1:26:36.400
通过传统的

1883
1:26:36.400 --> 1:26:37.420
leader

1884
1:26:37.420 --> 1:26:39.220
360度的这个评价

1885
1:26:39.220 --> 1:26:41.780
等等等等代码的这个review

1886
1:26:41.780 --> 1:26:42.800
交叉review

1887
1:26:42.800 --> 1:26:45.100
这样的评价得出一个

1888
1:26:45.100 --> 1:26:46.140
绩效的打分

1889
1:26:46.140 --> 1:26:47.920
然后通过算法得到打分

1890
1:26:47.920 --> 1:26:50.740
这样连续跑他四个季度

1891
1:26:50.740 --> 1:26:53.820
这样是不是能验证是不是真的这个吹的牛

1892
1:26:53.820 --> 1:26:55.860
是有一定道理的

1893
1:26:55.860 --> 1:26:59.700
就如果我是领导的话我不会简单因为这个人说的话

1894
1:26:59.700 --> 1:27:02.780
听上去很美好我就觉得这个人很能干

1895
1:27:02.780 --> 1:27:04.820
或者相信他的这套方案

1896
1:27:04.820 --> 1:27:08.140
肯定要去这样去验证啊

1897
1:27:08.140 --> 1:27:15.820
通常很难说实话你刚才说的这个其实已经是把一家公司当成是一个

1898
1:27:15.820 --> 1:27:19.920
学术性的机构然后来做实验甚至做对照组

1899
1:27:19.920 --> 1:27:21.720
然后来判断

1900
1:27:21.720 --> 1:27:28.620
但是当一个家伙我们就说一家公司吧当一个家伙得到了老板的授权

1901
1:27:28.620 --> 1:27:30.680
去做这件事情

1902
1:27:30.680 --> 1:27:34.780
然后他的屁股就会变成我一定要证明这件事情是有用的

1903
1:27:34.780 --> 1:27:36.560
那肯定不能这样呀

1904
1:27:36.560 --> 1:27:38.600
这个我觉得肯定不能这样

1905
1:27:38.600 --> 1:27:41.160
就是不可能把这件事情授权给他去做了

1906
1:27:41.160 --> 1:27:43.220
不可能的这个一定是就是

1907
1:27:43.220 --> 1:27:46.540
首先是业务上的老板肯定要去负责的

1908
1:27:46.540 --> 1:27:50.380
然后由做这个工具的人和比如说HR的部门

1909
1:27:50.380 --> 1:27:52.180
组成一个小组来

1910
1:27:52.180 --> 1:27:53.460
定期的去做评估

1911
1:27:53.460 --> 1:27:54.740
他不可能就是

1912
1:27:54.740 --> 1:27:57.560
说让这个做工具的人就去做全面决策

1913
1:27:57.560 --> 1:28:00.360
这肯定有问题的

1914
1:28:00.360 --> 1:28:02.680
当然就

1915
1:28:02.680 --> 1:28:08.820
我觉得相当不乐观吧就是说我通常不相信现在最近能够有谁能够把这东西做出来

1916
1:28:08.820 --> 1:28:14.200
通常假设他号称自己做出来多半都是假的

1917
1:28:14.200 --> 1:28:17.020
确实有难度

1918
1:28:17.020 --> 1:28:20.340
但是换一个比如说如果不是这个

1919
1:28:20.340 --> 1:28:23.420
计算机编程是其他的一些

1920
1:28:23.420 --> 1:28:25.200
就是不同的工种

1921
1:28:25.200 --> 1:28:27.000
是不是有可能

1922
1:28:27.000 --> 1:28:29.040
对这和工种可能关系很大

1923
1:28:29.040 --> 1:28:34.680
那些没问题那些就是传统制造业

1924
1:28:34.680 --> 1:28:36.720
对传统制造业我觉得问题不大

1925
1:28:36.720 --> 1:28:37.740
现在主要的

1926
1:28:37.740 --> 1:28:43.900
困难是我刚才说这种就是通过智力创造作为主要成果的这种

1927
1:28:43.900 --> 1:28:47.480
这种就很多人他工作习惯就这样比如说我

1928
1:28:47.480 --> 1:28:51.320
刚入行不久啊就是00年代我自己写进程自己做方案

1929
1:28:51.320 --> 1:28:53.360
自己做项目的那个时候

1930
1:28:53.360 --> 1:28:55.420
一天可能会

1931
1:28:55.420 --> 1:28:58.480
断断续续的工作时间可能有12个小时比如说啊

1932
1:28:58.480 --> 1:29:02.060
但其中真的在码成果的可能最多一半时间

1933
1:29:02.060 --> 1:29:04.620
其他时间或者在思考或者在跟人聊天

1934
1:29:04.620 --> 1:29:06.420
这个去

1935
1:29:06.420 --> 1:29:08.720
去启发自己可能在做这样的事情

1936
1:29:08.720 --> 1:29:09.740
那这个时候

1937
1:29:09.740 --> 1:29:12.040
就是我们传统的方式

1938
1:29:12.040 --> 1:29:15.380
他怎么去衡量这个人的产出

1939
1:29:15.380 --> 1:29:16.400
一方面

1940
1:29:16.400 --> 1:29:19.720
就非常困难就是

1941
1:29:19.720 --> 1:29:22.800
有没有一些至少比如说起到

1942
1:29:22.800 --> 1:29:26.380
一半权重的客观的一些采集的数据

1943
1:29:26.380 --> 1:29:29.200
这个我觉得是管理上的一个很大的挑战

1944
1:29:29.200 --> 1:29:32.260
但是怎么也得去干的

1945
1:29:32.260 --> 1:29:33.540
否则

1946
1:29:33.540 --> 1:29:37.140
就是一旦这个公司达到比如说1000人以上

1947
1:29:37.140 --> 1:29:41.220
这个我觉得就基本上没有办法按照

1948
1:29:41.220 --> 1:29:44.820
一般的那种人的方式去管理

1949
1:29:44.820 --> 1:29:48.140
必须依赖于数据了

1950
1:29:48.140 --> 1:29:49.940
即便我们现在实验室

1951
1:29:49.940 --> 1:29:52.740
对几个老师加起来比如说20多个学生

1952
1:29:52.740 --> 1:29:54.280
每个月

1953
1:29:54.280 --> 1:29:55.060
给激励

1954
1:29:55.060 --> 1:29:58.140
对于我们来说就是一个挺头痛的事情

1955
1:29:58.140 --> 1:30:01.200
对学校里面还有另外一个很复杂的问题

1956
1:30:01.200 --> 1:30:03.760
就是他的人情占的比重相当高

1957
1:30:03.760 --> 1:30:05.560
对挺头痛的

1958
1:30:05.560 --> 1:30:07.100
你让人去做

1959
1:30:07.100 --> 1:30:08.120
那

1960
1:30:08.120 --> 1:30:09.400
大家都不喜欢得罪人

1961
1:30:09.400 --> 1:30:12.220
那总有好的和差的怎么办呢

1962
1:30:12.220 --> 1:30:15.800
最理想的肯定大家都希望有一个数据表单能搞定这事

1963
1:30:15.800 --> 1:30:18.100
对的

1964
1:30:18.100 --> 1:30:21.420
我想稍微说一下这件事情的难度

1965
1:30:21.420 --> 1:30:22.200
就是

1966
1:30:22.200 --> 1:30:25.520
我就思考过这件事情但是

1967
1:30:25.520 --> 1:30:32.440
如果我们现在做的所谓的智力劳动是一个稳定的智力劳动的话

1968
1:30:32.440 --> 1:30:36.540
那还可以逐渐的探索出一种估算的办法

1969
1:30:36.540 --> 1:30:41.140
但是其实我们现在所处的软件工程软件工具

1970
1:30:41.140 --> 1:30:44.720
是一个飞速发展的时期

1971
1:30:44.720 --> 1:30:45.760
就比如说吧

1972
1:30:45.760 --> 1:30:50.880
有包管理工具的编程语言和没有包管理工具的编程语言

1973
1:30:50.880 --> 1:30:57.280
以及这个包管理工具是联网的还是只准用公司里面的那些包

1974
1:30:57.280 --> 1:31:00.100
完全不同

1975
1:31:00.100 --> 1:31:03.420
再比如说我基于一个框架来写代码

1976
1:31:03.420 --> 1:31:06.500
和我自己手把手的从头写起

1977
1:31:06.500 --> 1:31:08.040
这个效率也不同

1978
1:31:08.040 --> 1:31:10.600
然后这个框架本身的灵活性

1979
1:31:10.600 --> 1:31:13.660
比如说当我想实现一个简单的功能

1980
1:31:13.660 --> 1:31:19.040
有可能我想当然了我发现不行我到最后还得把框架的代码读懂了才能印编码

1981
1:31:19.040 --> 1:31:20.580
或者是把这个框架改了

1982
1:31:20.580 --> 1:31:22.620
我才能实现这个功能

1983
1:31:22.620 --> 1:31:25.960
但也有可能另外一个同样看上去

1984
1:31:25.960 --> 1:31:26.980
挺简单的功能

1985
1:31:26.980 --> 1:31:30.560
这个框架真的让我只用配一个参数就行

1986
1:31:30.560 --> 1:31:34.140
如果你只是从外在来看

1987
1:31:34.140 --> 1:31:35.940
就是说我交给这个家伙一个任务

1988
1:31:35.940 --> 1:31:37.980
然后他多久干完

1989
1:31:37.980 --> 1:31:40.800
说不定这家伙就是很擅长搜索呢

1990
1:31:40.800 --> 1:31:44.900
不是很擅长搜索这个也是很大的一个本钱

1991
1:31:44.900 --> 1:31:47.460
就是我能通过各种方式

1992
1:31:47.460 --> 1:31:52.080
我的意思是说你看我给你一个任务

1993
1:31:52.080 --> 1:31:55.660
然后我为这个任务估算了一个价值

1994
1:31:55.660 --> 1:31:58.720
我认为这个功能大概是值一千块钱的功能

1995
1:31:58.720 --> 1:32:01.800
然后你干三天也干完了

1996
1:32:01.800 --> 1:32:04.880
干一个月也干完了我怎么评价

1997
1:32:04.880 --> 1:32:05.380
对

1998
1:32:05.380 --> 1:32:09.220
就是一个任务在它具体完成之前

1999
1:32:09.220 --> 1:32:11.280
它实际上的难度和挑战

2000
1:32:11.280 --> 1:32:14.340
其实不能够很精确的去判断

2001
1:32:14.340 --> 1:32:15.120
对吧

2002
1:32:15.120 --> 1:32:16.900
是的

2003
1:32:16.900 --> 1:32:19.200
这是难点之一

2004
1:32:19.200 --> 1:32:21.260
然后接下来就是

2005
1:32:21.260 --> 1:32:23.560
我如何去判断

2006
1:32:23.560 --> 1:32:27.900
说这个人是因为能力很强

2007
1:32:27.900 --> 1:32:29.700
做出来的

2008
1:32:29.700 --> 1:32:32.780
还是因为能力不足他做完了

2009
1:32:32.780 --> 1:32:34.060
他告诉我他做完了

2010
1:32:34.060 --> 1:32:35.580
但其实他没做完

2011
1:32:35.580 --> 1:32:37.380
所以后面的bug

2012
1:32:37.380 --> 1:32:40.460
又一堆

2013
1:32:40.460 --> 1:32:44.300
因为bug这件事情就更困难

2014
1:32:44.300 --> 1:32:47.880
到底是因为是这个人当初写下的bug

2015
1:32:47.880 --> 1:32:52.240
还是整个系统的原因导致那里有个bug

2016
1:32:52.240 --> 1:32:54.540
对这个bug有两个大难点

2017
1:32:54.540 --> 1:32:57.100
一个难点是很多bug是有潜伏性的

2018
1:32:57.100 --> 1:32:59.140
就像我们这个新冠一样

2019
1:32:59.140 --> 1:33:01.460
它不是得了之后马上就

2020
1:33:01.460 --> 1:33:03.760
这个感染之后马上就有症状的

2021
1:33:03.760 --> 1:33:05.540
它可能很长时间才能发现

2022
1:33:05.540 --> 1:33:06.820
等你发现的时候

2023
1:33:06.820 --> 1:33:10.420
你给那个员工该奖励的已经奖励完

2024
1:33:10.420 --> 1:33:12.460
他活都干完了走人了

2025
1:33:12.460 --> 1:33:16.820
第二个就是刚才老庄说的就是这个bug的根因很难判断

2026
1:33:16.820 --> 1:33:18.340
就

2027
1:33:18.340 --> 1:33:20.900
你不能说这个bug出在某个环节

2028
1:33:20.900 --> 1:33:21.940
这个环节就背锅

2029
1:33:21.940 --> 1:33:23.220
其实可能根因不在他这里

2030
1:33:23.220 --> 1:33:24.240
跟他关系不大

2031
1:33:24.240 --> 1:33:27.300
他最多只是10%的责任

2032
1:33:27.300 --> 1:33:28.840
这两个都是

2033
1:33:28.840 --> 1:33:30.380
太容易的

2034
1:33:30.380 --> 1:33:35.760
第三个是因为我们现在其实是一个大规模协作各有分工的

2035
1:33:35.760 --> 1:33:39.340
其中最简单的工作叫写代码

2036
1:33:39.340 --> 1:33:41.140
其他的工作怎么评估

2037
1:33:41.140 --> 1:33:45.240
比如说写分析、写设计、写文档、做测试

2038
1:33:45.240 --> 1:33:50.100
甚至是写那种构建脚本的人

2039
1:33:50.100 --> 1:33:53.180
怎么判断

2040
1:33:53.180 --> 1:33:55.980
当然这也是因为我刚才说的最前面的那个原因

2041
1:33:55.980 --> 1:33:59.320
因为我们这个行当正在快速变化

2042
1:33:59.320 --> 1:34:01.360
所以才会不断的诞生新的工种

2043
1:34:01.360 --> 1:34:04.180
诞生新的比如说现在叫YAML进程员

2044
1:34:04.180 --> 1:34:06.480
原来都没听过

2045
1:34:06.480 --> 1:34:08.020
但这也是劳动

2046
1:34:08.020 --> 1:34:09.040
对

2047
1:34:09.040 --> 1:34:12.360
专门写配置文档的

2048
1:34:12.360 --> 1:34:18.000
所以如果确实就是如果这个整个流程

2049
1:34:18.000 --> 1:34:21.320
工作的协作的协同的节点相对稳定

2050
1:34:21.320 --> 1:34:22.600
不是完全固定

2051
1:34:22.600 --> 1:34:23.880
就相对稳定

2052
1:34:23.880 --> 1:34:25.160
跑它个两三年

2053
1:34:25.160 --> 1:34:28.240
那可能真能摸索出一套这个比较合理的

2054
1:34:28.240 --> 1:34:32.340
权重包括衡量标准确实可以

2055
1:34:32.340 --> 1:34:34.640
但如果半年就一变的话

2056
1:34:34.640 --> 1:34:35.920
那这个确实就

2057
1:34:35.920 --> 1:34:37.720
而且不值得去做了变的

2058
1:34:37.720 --> 1:34:43.100
所以说我们现在在实验室的

2059
1:34:43.100 --> 1:34:46.420
做这件事情的一个思路不是看最终的

2060
1:34:46.420 --> 1:34:49.760
那个具体的产出是你写了多少代码呀写了文档

2061
1:34:49.760 --> 1:34:52.320
其实是看那个协作关系

2062
1:34:52.320 --> 1:34:54.360
对他是看协作关系去

2063
1:34:54.360 --> 1:34:56.920
去得到最终的那个贡献度的

2064
1:34:56.920 --> 1:34:59.480
对就有点像那个PageRank的

2065
1:34:59.480 --> 1:35:00.760
那个排序

2066
1:35:00.760 --> 1:35:03.320
对他不是看你的网页内容究竟是什么

2067
1:35:03.320 --> 1:35:06.140
他是看你网页之间的关系网页之间的引用

2068
1:35:06.140 --> 1:35:09.720
对我们现在也是这样就是看你在GitHub上面的

2069
1:35:09.720 --> 1:35:12.540
协作程度以及项目之间的依赖程度

2070
1:35:12.540 --> 1:35:14.580
对他是看这种关系然后去

2071
1:35:14.580 --> 1:35:17.140
做一个一个一个一个计算的

2072
1:35:17.140 --> 1:35:19.200
或是对这个也是

2073
1:35:19.200 --> 1:35:22.260
也是在看对如果后续有一些好的结果

2074
1:35:22.260 --> 1:35:25.080
到时候我们可以把Frag拉着一起来

2075
1:35:25.080 --> 1:35:28.160
来做讨论这个到时候我觉得也是

2076
1:35:28.160 --> 1:35:32.260
可以找时间来详细的去聊的

2077
1:35:32.260 --> 1:35:35.320
好那如果这样的话我们反过来看

2078
1:35:35.320 --> 1:35:37.620
是不是

2079
1:35:37.620 --> 1:35:40.960
监控你的绝对工作时间反而成为现实的

2080
1:35:40.960 --> 1:35:43.520
可能性了

2081
1:35:43.520 --> 1:35:44.800
就只能这么干了

2082
1:35:44.800 --> 1:35:48.640
其实我能够了解老板的心态就是说

2083
1:35:48.640 --> 1:35:49.920
我不知道你干了啥

2084
1:35:49.920 --> 1:35:53.500
但是我一定要让你忙到没空干任何其他的事情

2085
1:35:53.500 --> 1:35:55.040
那么

2086
1:35:55.040 --> 1:35:56.320
我就

2087
1:35:56.320 --> 1:36:02.460
至少把你的这个时间给吃掉了就跟原来的那个叫什么中世纪的时候那种

2088
1:36:02.460 --> 1:36:07.580
封建男人给老婆装针钞带是一个逻辑

2089
1:36:07.580 --> 1:36:09.880
很多优秀的

2090
1:36:09.880 --> 1:36:12.700
技术的人员不论架构师进程员

2091
1:36:12.700 --> 1:36:18.840
我们交流都是感觉就是说人的思维在这种创造性思维的过程当中他是存在一些

2092
1:36:18.840 --> 1:36:21.140
目前还找不到规律但是

2093
1:36:21.140 --> 1:36:23.960
确实有的一些东西在里面就是

2094
1:36:23.960 --> 1:36:27.540
你需要不断去刺激你的思考

2095
1:36:27.540 --> 1:36:30.880
所以光占据时间其实意义不大

2096
1:36:30.880 --> 1:36:34.720
假设我们有一位伙伴团队里面有一位伙伴

2097
1:36:34.720 --> 1:36:39.580
素质能力都是不错的我们通过平常的这个东西可以判断出来

2098
1:36:39.580 --> 1:36:42.140
但是有一段时间他状态就是不好

2099
1:36:42.140 --> 1:36:44.440
不想工作或者各种其他的问题

2100
1:36:44.440 --> 1:36:47.520
就是集中不了精力产出就是比较低怎么办

2101
1:36:47.520 --> 1:36:50.600
最后我们的结论就是不办

2102
1:36:50.600 --> 1:36:54.180
等他自己走出来自然就好了

2103
1:36:54.180 --> 1:36:55.720
或者放他休假

2104
1:36:55.720 --> 1:36:58.020
对这就是这样

2105
1:36:58.020 --> 1:37:03.140
就别的方法就是听上去很荒谬这个结论但实际上你仔细想

2106
1:37:03.140 --> 1:37:06.980
其他的方法可能都是副作用

2107
1:37:06.980 --> 1:37:11.080
就像学术圈里面不就有给教授放学术休假吗

2108
1:37:11.080 --> 1:37:16.460
所以AI监工这件事情总体来说我的感觉就是第一不是很靠谱

2109
1:37:16.460 --> 1:37:17.740
第二呢

2110
1:37:17.740 --> 1:37:20.300
跟AI没什么关系

2111
1:37:20.300 --> 1:37:22.860
你无非就是

2112
1:37:22.860 --> 1:37:28.240
套上这个关键字之后这条新闻比较容易传播而已

2113
1:37:28.240 --> 1:37:30.800
对这个事情本身就没啥帮助了

2114
1:37:30.800 --> 1:37:37.960
从我个人的风格来讲我还是愿意就是至少局部的去考虑一些可能性

2115
1:37:37.960 --> 1:37:39.760
哪怕不能彻底解决

2116
1:37:39.760 --> 1:37:44.620
至少在一定程度上能够帮助我们去做一些

2117
1:37:44.620 --> 1:37:48.200
在这些简单粗暴的方式以外更有效的一些

2118
1:37:48.200 --> 1:37:49.740
评估

2119
1:37:49.740 --> 1:37:52.300
否则你公司的管理它就

2120
1:37:52.300 --> 1:37:54.600
另一条路也走不通

2121
1:37:54.600 --> 1:37:57.420
就你完全不管肯定也有问题对吧因为

2122
1:37:57.420 --> 1:38:00.240
相当于做得好的和做得差的都大过分了

2123
1:38:00.240 --> 1:38:02.020
这种肯定也非常糟糕

2124
1:38:02.020 --> 1:38:03.300
或者你

2125
1:38:03.300 --> 1:38:06.900
就只一刀切看时间看这个

2126
1:38:06.900 --> 1:38:10.980
工作时间看代码行数这肯定最后结果也很不好

2127
1:38:10.980 --> 1:38:14.820
你多多少少得有一点东西你哪怕只找到两三个局部指针

2128
1:38:14.820 --> 1:38:16.880
但是是能客观分出来的

2129
1:38:16.880 --> 1:38:19.180
那也好过没有

2130
1:38:19.180 --> 1:38:23.780
我唯一的想法就是唯一的建议就是说管理是分级的

2131
1:38:23.780 --> 1:38:28.400
你不要用一个全公司统一的办法去管理到个人

2132
1:38:28.400 --> 1:38:30.180
这不可能对确实不是

2133
1:38:30.180 --> 1:38:36.080
对你最多就是管理到这个研发主管然后研发主管想办法去管理他的

2134
1:38:36.080 --> 1:38:39.400
手下的兄弟们

2135
1:38:39.400 --> 1:38:41.700
好那我们今天就到这吧

2136
1:38:41.700 --> 1:38:43.760
OK下次再聊

2137
1:38:43.760 --> 1:38:44.260
好

2138
1:38:44.260 --> 1:38:45.040
好嘞

2139
1:38:45.040 --> 1:38:46.320
拜拜

2140
1:38:46.320 --> 1:38:47.340
拜拜

