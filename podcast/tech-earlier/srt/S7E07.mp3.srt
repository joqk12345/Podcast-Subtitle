0
0:00:00.000 --> 0:00:02.400
用声音碰撞世界

1
0:00:02.400 --> 0:00:04.400
声道活泼

2
0:00:04.400 --> 0:00:06.400
哈喽大家好我是丁酱

3
0:00:06.400 --> 0:00:10.000
欢迎收听全新一集What's Next科技早晨

4
0:00:13.000 --> 0:00:14.400
大家好我是刘灿

5
0:00:14.400 --> 0:00:17.200
那就在今天我跟另外一位小伙伴信羽

6
0:00:17.200 --> 0:00:19.800
在阿里云的峰会现场是见证了

7
0:00:19.800 --> 0:00:22.000
阿里官宣旗下所有产品未来都将

8
0:00:22.000 --> 0:00:24.200
接入通译签文大模型的时刻

9
0:00:24.200 --> 0:00:26.400
在这个官宣发生之前

10
0:00:26.400 --> 0:00:29.000
阿里的CEO张勇有好长一段是关于

11
0:00:29.000 --> 0:00:32.400
阿里如何为这个智能化的时代做好准备的

12
0:00:32.400 --> 0:00:34.600
那部分演讲里有一张PPT

13
0:00:34.600 --> 0:00:37.200
刚好展示的就是本期节目嘉宾

14
0:00:37.200 --> 0:00:40.400
也是刚刚从阿里毕业的AI大神贾阳青

15
0:00:40.400 --> 0:00:42.200
他的团队在阿里巴巴所做的

16
0:00:42.200 --> 0:00:43.600
Platform as a Service平台

17
0:00:43.600 --> 0:00:45.600
即服务所有的产品

18
0:00:45.600 --> 0:00:47.800
作为曾经深度参与过

19
0:00:47.800 --> 0:00:51.000
Cafe,PyTorch,Tencent Flow等产品开发的阳青

20
0:00:51.000 --> 0:00:54.400
他在AI领域的影响力应该是无需我多言

21
0:00:54.400 --> 0:00:56.600
而很多人也好奇他这个时候

22
0:00:56.600 --> 0:00:59.000
离开阿里的原因是什么

23
0:00:59.000 --> 0:01:01.800
那硅谷徐老师也是在北京时间的昨天

24
0:01:01.800 --> 0:01:05.800
与阳青交流了大模型热潮下的一些创业思考

25
0:01:05.800 --> 0:01:08.000
就包括为什么他是没有选择

26
0:01:08.000 --> 0:01:10.000
大模型这个赛道去做创业

27
0:01:10.000 --> 0:01:13.200
那这也是阳青离开阿里之后第一次接受采访

28
0:01:13.200 --> 0:01:15.200
所以我们第一时间分享给大家

29
0:01:15.200 --> 0:01:16.200
欢迎收听

30
0:01:19.600 --> 0:01:21.800
非常欢迎贾阳青到

31
0:01:21.800 --> 0:01:25.600
我的科技杂志的硅谷徐老师这个栏目来做客

32
0:01:25.600 --> 0:01:28.800
今年我做的硅谷徐老师的节目有几个了

33
0:01:28.800 --> 0:01:31.400
但是一对一的访谈这是第一个

34
0:01:31.400 --> 0:01:34.200
而且我也刚刚从欧洲回来几个小时

35
0:01:34.200 --> 0:01:36.000
马上就录这个节目

36
0:01:36.000 --> 0:01:39.600
可见我是对你的访谈的重视性

37
0:01:39.600 --> 0:01:43.600
两三个礼拜前网上面有好几篇文章是说

38
0:01:43.600 --> 0:01:45.800
你从阿里出来创业了

39
0:01:45.800 --> 0:01:48.600
我想这其实是一个很好的机会

40
0:01:48.600 --> 0:01:51.200
星期五是你的最后一天

41
0:01:51.200 --> 0:01:54.200
所以说理论上来讲是刚刚出来的

42
0:01:54.200 --> 0:01:57.800
不管是阿里还是之前的职业选择也好

43
0:01:57.800 --> 0:02:01.200
或者说是我们今天大家都很关心的大模型

44
0:02:01.200 --> 0:02:02.200
包括一些技术

45
0:02:02.200 --> 0:02:05.200
包括一些科技方面的话题

46
0:02:05.200 --> 0:02:07.000
想今天跟你好好聊一聊

47
0:02:07.000 --> 0:02:08.800
好呀谢谢徐老师

48
0:02:08.800 --> 0:02:12.800
之前的时候也经常听徐老师的podcast

49
0:02:12.800 --> 0:02:14.000
如果我理解对的话

50
0:02:14.000 --> 0:02:16.600
声东波波和声东击西等等

51
0:02:16.600 --> 0:02:18.600
大家也是合起党联合起来

52
0:02:18.600 --> 0:02:20.000
一起做的非常优秀的节目

53
0:02:20.000 --> 0:02:21.200
所以也是深交已久

54
0:02:21.200 --> 0:02:23.400
感谢这次邀请能够有机会来

55
0:02:23.400 --> 0:02:25.400
就大家随便摆货摆货

56
0:02:25.400 --> 0:02:27.800
闲聊一下之前关于职业

57
0:02:27.800 --> 0:02:29.200
关于技术

58
0:02:29.200 --> 0:02:32.000
关于生意等等这一块的一些想法

59
0:02:32.000 --> 0:02:35.200
最近几年你先是从Facebook

60
0:02:35.200 --> 0:02:36.400
也就是现在的Meta

61
0:02:36.400 --> 0:02:37.800
离开进入阿里

62
0:02:37.800 --> 0:02:41.000
然后在阿里工作了将近4年又离开

63
0:02:41.000 --> 0:02:42.800
能不能跟我们分享一下

64
0:02:42.800 --> 0:02:45.000
为什么会离开Facebook加入阿里

65
0:02:45.000 --> 0:02:48.200
然后为什么会现在这个时机

66
0:02:48.200 --> 0:02:50.200
离开阿里自己创业

67
0:02:50.200 --> 0:02:52.200
这个我觉得讲起来还是一段

68
0:02:52.200 --> 0:02:55.400
就是非常感到非常荣幸的一段经历

69
0:02:55.400 --> 0:02:57.200
最开始在Facebook的时候

70
0:02:57.200 --> 0:02:59.200
大家可能还能够记得

71
0:02:59.200 --> 0:03:01.000
就是之前的时候我们在Facebook

72
0:03:01.000 --> 0:03:03.000
做开源的AI Infrastructure

73
0:03:03.000 --> 0:03:05.200
当然也支撑Facebook内部的

74
0:03:05.200 --> 0:03:06.800
大量的AI应用等等

75
0:03:06.800 --> 0:03:09.000
那么我们在Facebook的几年当中

76
0:03:09.000 --> 0:03:12.200
和团队一块我们做了KV2

77
0:03:12.200 --> 0:03:14.200
在手机上的KV2 Go

78
0:03:14.200 --> 0:03:16.800
一个开源的神经网络的标准

79
0:03:16.800 --> 0:03:17.600
叫做ONIX

80
0:03:17.600 --> 0:03:20.400
以及后面现在大家都比较熟悉的PyTorch

81
0:03:20.400 --> 0:03:23.400
以及进一步的一系列的上层的一些工作

82
0:03:23.400 --> 0:03:25.400
那么从Facebook出来

83
0:03:25.400 --> 0:03:28.400
对我来说最大的一个机会点

84
0:03:28.400 --> 0:03:30.400
其实是在于说Facebook是一个

85
0:03:30.400 --> 0:03:32.600
对内支撑做得比较好的一个公司

86
0:03:32.600 --> 0:03:35.000
但是因为它本身自己业务的缘故

87
0:03:35.000 --> 0:03:37.800
所以它并没有再提供云服务等等

88
0:03:37.800 --> 0:03:39.800
这一系列的对外和2B的服务

89
0:03:39.800 --> 0:03:42.400
对我来说其实当时的时候

90
0:03:42.400 --> 0:03:44.400
在18年的时候就跟阿里一块聊

91
0:03:44.400 --> 0:03:46.600
更早的时候其实跟阿里的非常多的

92
0:03:46.600 --> 0:03:48.400
技术leader也有接触

93
0:03:48.400 --> 0:03:51.000
那么对我来说最吸引我的一点是说

94
0:03:51.000 --> 0:03:52.600
在云的那么一个平台上面

95
0:03:52.600 --> 0:03:55.200
其实今天我们看见AI用的越来越多

96
0:03:55.200 --> 0:03:57.400
也会有越来越多的2B的客户

97
0:03:57.400 --> 0:04:00.200
需要来用到更加scalable的

98
0:04:00.200 --> 0:04:01.400
更加可扩展的

99
0:04:01.400 --> 0:04:03.400
更加高效的AI的平台

100
0:04:03.400 --> 0:04:04.400
那么因此的话

101
0:04:04.400 --> 0:04:06.400
从Facebook调到阿里

102
0:04:06.400 --> 0:04:08.800
也相当于是给我自己的一个挑战

103
0:04:08.800 --> 0:04:10.400
就是从纯技术

104
0:04:10.400 --> 0:04:14.200
跳到一个作为技术商业都要管的产品

105
0:04:14.200 --> 0:04:15.800
都要管的那么一个leader

106
0:04:15.800 --> 0:04:17.800
能够有更大的挑战

107
0:04:17.800 --> 0:04:20.200
也能够给整个社会做出更大的贡献

108
0:04:20.200 --> 0:04:21.200
这是当年的时候

109
0:04:21.200 --> 0:04:23.200
从Facebook跳到阿里的一个想法

110
0:04:23.200 --> 0:04:25.600
对所以说从这个角度上来讲

111
0:04:25.600 --> 0:04:27.800
在之前你在包括谷歌

112
0:04:27.800 --> 0:04:32.000
在Facebook之前在学校做的工作

113
0:04:32.000 --> 0:04:33.400
主要还是纯技术的

114
0:04:33.400 --> 0:04:36.800
虽然说技术上面你其实基本上那些

115
0:04:36.800 --> 0:04:38.000
包括Cafe

116
0:04:38.000 --> 0:04:39.000
TensorFlow

117
0:04:39.000 --> 0:04:39.600
PyTorch

118
0:04:39.600 --> 0:04:42.800
你要么是单独的来领导

119
0:04:42.800 --> 0:04:45.200
或者说是共同领导的这几个项目

120
0:04:45.200 --> 0:04:48.000
其实都是在我们人工智能界

121
0:04:48.000 --> 0:04:51.000
是非常有影响力的一些框架

122
0:04:51.000 --> 0:04:53.000
但是主要还是做技术

123
0:04:53.000 --> 0:04:55.000
加入阿里是给了你一个机会

124
0:04:55.000 --> 0:04:56.400
正式的领导一个部门

125
0:04:56.400 --> 0:04:57.800
这领导一个商业

126
0:04:57.800 --> 0:05:00.800
这是你的一个主要的出发点

127
0:05:00.800 --> 0:05:03.400
对我呢就把它总结成为4个词语

128
0:05:03.400 --> 0:05:07.400
就是从最开始在学校和在研究院做的研究

129
0:05:07.400 --> 0:05:11.600
到后来在谷歌大脑在Facebook所做的工程

130
0:05:11.600 --> 0:05:14.200
到后面在阿里所做的产品

131
0:05:14.200 --> 0:05:16.400
和更加进一步的接触到商业

132
0:05:16.400 --> 0:05:19.400
我觉得这个是一个不断扩展的一个过程

133
0:05:19.400 --> 0:05:21.400
也是一个新的技术

134
0:05:21.400 --> 0:05:24.000
从最开始实验室孵化出来到最后落地的

135
0:05:24.000 --> 0:05:24.800
那么一个过程

136
0:05:24.800 --> 0:05:28.200
所以我也很开心能够前面几年一直走了那么一条路

137
0:05:28.200 --> 0:05:31.200
这里面我稍微再多问一个问题

138
0:05:31.200 --> 0:05:34.800
因为其实很多包括很优秀的华人

139
0:05:34.800 --> 0:05:36.000
工程师也好

140
0:05:36.000 --> 0:05:39.200
或者博士或者说做技术的人也好

141
0:05:39.200 --> 0:05:40.800
其实都是这样对吧

142
0:05:40.800 --> 0:05:42.600
就是从一个做技术

143
0:05:42.600 --> 0:05:45.400
然后领导一个团队或者说是怎么样

144
0:05:45.400 --> 0:05:48.800
但是你去阿里其实是不只是领导一个团队而已

145
0:05:48.800 --> 0:05:50.600
是商业的项目

146
0:05:50.600 --> 0:05:53.400
那你觉得这么一个转折点

147
0:05:53.400 --> 0:05:55.200
你是怎么去适应的

148
0:05:55.200 --> 0:05:56.400
不管是困难也好

149
0:05:56.400 --> 0:05:59.000
或者说自己跌过的坑也好

150
0:05:59.000 --> 0:06:01.400
能不能跟大家分享一下

151
0:06:01.400 --> 0:06:04.000
我觉得可能有两点是最有意思值得讲的吧

152
0:06:04.000 --> 0:06:07.800
第一点就是说怎么样从一个做研究的时候

153
0:06:07.800 --> 0:06:10.000
一人吃饱全家不饿这种状态

154
0:06:10.000 --> 0:06:12.000
到后面就是说是怎么样跟团队

155
0:06:12.000 --> 0:06:14.600
尤其是有非常多聪明人的团队一块合作

156
0:06:14.600 --> 0:06:15.600
这是第一点

157
0:06:15.600 --> 0:06:17.600
第二点就是说是怎么样来解决

158
0:06:17.600 --> 0:06:20.600
技术跟商业之间的一些很自然的挑战

159
0:06:20.600 --> 0:06:22.000
或者说冲突的一个问题

160
0:06:22.000 --> 0:06:24.800
第一点我觉得咱们其实非常多的

161
0:06:24.800 --> 0:06:27.200
尤其是在硅谷非常优秀的华人工程师

162
0:06:27.200 --> 0:06:30.400
我们都对于自己的技术能力有非常强的把握

163
0:06:30.400 --> 0:06:32.600
所以很多时候在工作的时候

164
0:06:32.600 --> 0:06:35.600
我们处于一个就是说我们自己写代码

165
0:06:35.600 --> 0:06:37.600
我们自己是上帝这样一种感觉

166
0:06:37.600 --> 0:06:40.800
经常会觉得说你看很多时候我最熟的领域

167
0:06:40.800 --> 0:06:42.600
我自己写代码比谁都快

168
0:06:42.600 --> 0:06:45.400
因此的话后面就是说是说我觉得

169
0:06:45.400 --> 0:06:49.400
从这样的一个心态到一个就是说和一个团队

170
0:06:49.400 --> 0:06:50.800
尤其是相对比较大

171
0:06:50.800 --> 0:06:54.200
而且又涉及到很多的不同的专业方向

172
0:06:54.200 --> 0:07:00.400
比如像大数据像运维SRE像AI计算像硬件等等

173
0:07:00.400 --> 0:07:01.800
不同团队合作的时候

174
0:07:01.800 --> 0:07:05.600
就会有一个就是要来识别自己的边界

175
0:07:05.600 --> 0:07:10.400
以及来和其他的人更好的定义合作的一种交互的模式

176
0:07:10.400 --> 0:07:11.800
那么一个坎儿吧我觉得

177
0:07:11.800 --> 0:07:14.400
举个例子吧就是我自己在带团队的时候

178
0:07:14.400 --> 0:07:17.600
因为大家也知道我更多的是在AI的这个领域

179
0:07:17.600 --> 0:07:20.400
那么大数据的话就虽然我带领大数据团队

180
0:07:20.400 --> 0:07:23.000
但是我显然不如我在团队里面

181
0:07:23.000 --> 0:07:26.600
我们团队的这个大数据的专家来的那么的专业

182
0:07:26.600 --> 0:07:28.200
那这时候就会有一个问题说

183
0:07:28.200 --> 0:07:29.800
那我是去学大数据

184
0:07:29.800 --> 0:07:31.400
然后我比他们更牛干掉他们

185
0:07:31.400 --> 0:07:36.800
还是说是我和他们来找到一个能够相互互补的方式

186
0:07:36.800 --> 0:07:39.600
来做更加紧密的一个协同

187
0:07:39.600 --> 0:07:40.800
那前面几年的话呢

188
0:07:40.800 --> 0:07:43.200
我们发现非常有意思的一个方式是说

189
0:07:43.200 --> 0:07:47.000
我的团队吧我们的团队有非常强的系统的工程师

190
0:07:47.000 --> 0:07:48.200
跟系统的架构师

191
0:07:48.200 --> 0:07:51.200
他们对于大数据系统的理解是非常深刻的

192
0:07:51.200 --> 0:07:53.800
然后呢他们其实所需要的一个

193
0:07:53.800 --> 0:07:55.800
从我这边的一个互补和帮助呢

194
0:07:55.800 --> 0:07:59.000
是说从用户的视角更好的来看说

195
0:07:59.000 --> 0:08:01.000
今天我们说大数据AI结合了

196
0:08:01.000 --> 0:08:06.000
那么用户对于用户体验对于这个产品的成熟度

197
0:08:06.000 --> 0:08:10.400
对于这种新的一些以传统的BI和AI的结合这一块

198
0:08:10.400 --> 0:08:12.800
有怎么样的一些新的变化跟需求

199
0:08:12.800 --> 0:08:17.000
因此我可以站在一个用户的角度和他们的专业性形成互补

200
0:08:17.000 --> 0:08:19.800
这个时候就会需要有一点就是说是说

201
0:08:19.800 --> 0:08:21.600
作为一个基础力的往后站一站

202
0:08:21.600 --> 0:08:24.400
然后完了之后让团队来做更多的决策

203
0:08:24.400 --> 0:08:25.400
那么一个模式

204
0:08:25.400 --> 0:08:27.800
我觉得你的你的一个使用的很好

205
0:08:27.800 --> 0:08:29.600
就是一个找到一个很好的边界

206
0:08:29.600 --> 0:08:33.000
这个边界不一定是你很自然的

207
0:08:33.000 --> 0:08:34.400
或者说你是愿意的

208
0:08:34.400 --> 0:08:36.400
但有的时候你就要找到这么一个边界

209
0:08:36.400 --> 0:08:37.800
去尊重这么一个边界

210
0:08:37.800 --> 0:08:40.600
然后能够得到更好的供应

211
0:08:40.600 --> 0:08:43.200
这一段我是蛮有共鸣的

212
0:08:43.200 --> 0:08:47.200
因为我其实也是跟一些其他的朋友啊同学啊

213
0:08:47.200 --> 0:08:50.600
也会经常交流到这个一个边界的这么一个问题

214
0:08:50.600 --> 0:08:54.600
因为自然而然的我们做技术的人都会觉得

215
0:08:54.600 --> 0:08:57.200
哎呀我好像这方面可能懂得不少

216
0:08:57.200 --> 0:08:59.600
然后或者说有些地方可以做的更多

217
0:08:59.600 --> 0:09:02.200
但如果说你是尊重一个边界的话

218
0:09:02.200 --> 0:09:06.800
你就会很多时候把这件事情就能够处理的更好

219
0:09:06.800 --> 0:09:10.400
对是的我觉得呢就是我们做技术的有的时候

220
0:09:10.400 --> 0:09:14.600
会陷入到一个by pull的就是两极分化的一个状态

221
0:09:14.600 --> 0:09:16.200
有些时候在自己熟悉的领域

222
0:09:16.200 --> 0:09:18.800
我们会极度自信说我是这个领域的专家

223
0:09:18.800 --> 0:09:22.000
在自己不熟悉的领域呢又会陷入一定的自卑说

224
0:09:22.000 --> 0:09:24.600
哎呀我不懂好像也没法贡献什么东西

225
0:09:24.600 --> 0:09:27.400
但是最后我发现其实很有意思的一点是

226
0:09:27.400 --> 0:09:29.200
在自己熟悉的领域呢

227
0:09:29.200 --> 0:09:34.200
反而更加需要来听一听说外行尤其是用户需要什么

228
0:09:34.200 --> 0:09:37.600
这个对我们来怎么样来调整自己的一些

229
0:09:37.600 --> 0:09:39.600
已经固化的观点是挺有帮助的

230
0:09:39.600 --> 0:09:41.400
在自己不熟悉的领域呢

231
0:09:41.400 --> 0:09:44.000
因为早晚还是需要有这个这种各种各样的

232
0:09:44.000 --> 0:09:46.200
技术的融合跟技术的协同的

233
0:09:46.200 --> 0:09:49.000
所以反而应该相对比较自信一点去想说

234
0:09:49.000 --> 0:09:53.000
那从我的角度有没有什么可以帮助那些领域的专家

235
0:09:53.000 --> 0:09:55.600
来相互印证来相互迭代的一些想法

236
0:09:55.600 --> 0:09:59.600
所以这个地方还是对自己的心态是一个挺好的锻炼

237
0:09:59.600 --> 0:10:00.200
千万记念

238
0:10:00.200 --> 0:10:02.400
嗯嗯嗯这个说的很好

239
0:10:02.400 --> 0:10:04.800
而且在这那些领域当中

240
0:10:04.800 --> 0:10:06.400
即使你不一定很熟悉

241
0:10:06.400 --> 0:10:09.000
但有可能你还是能问出很好的问题

242
0:10:09.000 --> 0:10:14.600
然后那个你在阿里具体的负责的商业方面的一个挑战

243
0:10:14.600 --> 0:10:19.400
讲这之前能不能讲一讲你在阿里具体负责的商业项目是什么

244
0:10:19.400 --> 0:10:23.200
好呀这个我就讲一些公开的可以讲的信息吧

245
0:10:23.200 --> 0:10:25.800
那么我在19年到阿里的时候

246
0:10:25.800 --> 0:10:28.400
其实我记得当时的时候也有一些报道

247
0:10:28.400 --> 0:10:34.000
然后讲讲的是说我在阿里的硅谷研究院来负责研究这块东西

248
0:10:34.000 --> 0:10:35.000
那其实不是这样

249
0:10:35.000 --> 0:10:38.600
就是其实的话呢我是有很长的时间在国内

250
0:10:38.600 --> 0:10:39.500
然后在杭州

251
0:10:39.500 --> 0:10:43.300
然后我们是在阿里云当中的我们叫计算平台事业部

252
0:10:43.300 --> 0:10:44.500
那么一个部门

253
0:10:44.500 --> 0:10:46.100
这个部门在做什么事情呢

254
0:10:46.100 --> 0:10:51.300
他负责了阿里几乎90%以上的数据的平台

255
0:10:51.300 --> 0:10:55.700
就是数据上面的各种数据的分析具和开发等等都是在他上面的

256
0:10:55.700 --> 0:10:57.500
那么从数据开始呢

257
0:10:57.500 --> 0:11:00.100
我们又建设起来了叫Pi Platform for AI

258
0:11:00.100 --> 0:11:02.800
那么一个AI计算的一个平台

259
0:11:02.800 --> 0:11:06.800
他基本上和国际的大厂相对对标的话呢

260
0:11:06.800 --> 0:11:09.400
就有点类似于像谷歌的Big Query

261
0:11:09.400 --> 0:11:10.700
Vertex AI

262
0:11:10.700 --> 0:11:17.600
像亚马逊的Redshift和亚马逊的这个SageMaker等等这一系列的平台

263
0:11:17.600 --> 0:11:19.900
然后呢我们负责的业务的话呢

264
0:11:19.900 --> 0:11:22.200
第一个是支撑阿里集团内部

265
0:11:22.200 --> 0:11:24.100
比如说像淘宝天猫

266
0:11:24.100 --> 0:11:28.500
比如像这个菜鸟等等的大数据计算跟AI计算的需求

267
0:11:28.500 --> 0:11:30.900
以及党国宴这边的AI的科研的需求

268
0:11:30.900 --> 0:11:31.900
那么另外的话呢

269
0:11:31.900 --> 0:11:35.700
我们从云也在服务就是云上的各种客户

270
0:11:35.700 --> 0:11:37.100
大家可能听说过的

271
0:11:37.100 --> 0:11:40.200
比如说像我们和小鹏汽车一起构建的

272
0:11:40.200 --> 0:11:43.500
他们非常大的那个1万张卡以上的

273
0:11:43.500 --> 0:11:46.100
那么一个叫做福瑶的超算机群

274
0:11:46.100 --> 0:11:49.500
那么我们会和像小鹏这样的一些非常聪明的客户

275
0:11:49.500 --> 0:11:53.900
大家一块来就是共同建设云上的这种AI的和大数据的方案

276
0:11:53.900 --> 0:11:57.000
这是我在阿里就是做的这一块的事情

277
0:11:57.000 --> 0:11:58.800
那有了这个背景一下

278
0:11:58.800 --> 0:12:01.500
能不能回到刚才我们聊到的

279
0:12:01.500 --> 0:12:05.500
从一个职业转型或者说职业成长的角度上来讲

280
0:12:05.500 --> 0:12:06.500
走过的坑

281
0:12:06.500 --> 0:12:08.500
从一个主要是做技术的

282
0:12:08.500 --> 0:12:13.700
现在是一个或者说过去4年是一个带商业这一块的一些坑

283
0:12:13.700 --> 0:12:15.100
或者一些学习吧

284
0:12:15.100 --> 0:12:19.100
我觉得这个地方有两个可以挺值得讲的一个故事的

285
0:12:19.100 --> 0:12:21.500
我自己也是非常有深刻的感受

286
0:12:21.500 --> 0:12:23.700
第一个呢是我们在做技术的时候

287
0:12:23.700 --> 0:12:27.900
其实都有这样一个追求技术先进性的那么一个心

288
0:12:27.900 --> 0:12:31.700
但是有的时候呢技术先进性会带来一个缺点

289
0:12:31.700 --> 0:12:34.900
就是它的普世性一定从上会降低

290
0:12:34.900 --> 0:12:38.100
于是呢会出现说我们搞了一个非常牛的东西

291
0:12:38.100 --> 0:12:39.700
但是用户用不起来

292
0:12:39.700 --> 0:12:40.800
那么一个状态

293
0:12:40.800 --> 0:12:42.200
我举个很典型的例子啊

294
0:12:42.200 --> 0:12:45.400
前面几年的时候AI编译器这个领域非常的热

295
0:12:45.400 --> 0:12:48.800
那么我们团队自己内部呢也有一个AI编译器的一个团队

296
0:12:48.800 --> 0:12:51.800
之前的时候我们也经历了一个相对比较痛苦的一个转型期

297
0:12:51.800 --> 0:12:53.300
这个转型期是怎么样的呢

298
0:12:53.300 --> 0:12:56.900
我们自己内部比如说实现了一系列的编译的算法呀

299
0:12:56.900 --> 0:12:59.900
这个优化的一些软件库啊等等

300
0:12:59.900 --> 0:13:03.600
然后呢我会发现说用户很难和他现有的

301
0:13:03.600 --> 0:13:07.300
比如像TensorFlow, PyTorch等等这样的已经熟悉的软件站

302
0:13:07.300 --> 0:13:09.100
给很好的连接起来

303
0:13:09.100 --> 0:13:12.500
它需要用我们定义的SDK

304
0:13:12.500 --> 0:13:15.700
学习很多的这个我们自己这边的语法啊

305
0:13:15.700 --> 0:13:17.200
开发习惯啊等等的

306
0:13:17.200 --> 0:13:21.300
它的模型转变成为我们要求的格式才能用得起来

307
0:13:21.300 --> 0:13:23.100
用户也看出来哎呀太麻烦了

308
0:13:23.100 --> 0:13:24.000
这个赖得搞

309
0:13:24.000 --> 0:13:26.800
在前面几年当中吧我们就逐渐的开始

310
0:13:26.800 --> 0:13:28.900
就是说是把我们的整个的priority

311
0:13:28.900 --> 0:13:32.400
从说我们要搞到这个设计最精巧

312
0:13:32.400 --> 0:13:35.500
性能最好的那么一个AI的编译器

313
0:13:35.500 --> 0:13:37.800
从这样的一个目标变成一个说

314
0:13:37.800 --> 0:13:41.000
我们要让用户能够无感的用起来

315
0:13:41.000 --> 0:13:45.300
即使他在这个用起来当中和我们能够达到的最高的水平

316
0:13:45.300 --> 0:13:47.800
差了譬如说10% 20%

317
0:13:47.800 --> 0:13:48.800
那还是ok的

318
0:13:48.800 --> 0:13:52.000
就是我们首先让用户能够用起来比较顺畅的

319
0:13:52.000 --> 0:13:54.300
在他的习惯的环境里头

320
0:13:54.300 --> 0:13:59.200
我们能够增量的哪怕是5% 10%的给他来提供价值

321
0:13:59.200 --> 0:14:02.600
然后再逐渐的把我们的一些就是更牛的技术

322
0:14:02.600 --> 0:14:04.900
一步一步一步的交给用户去用

323
0:14:04.900 --> 0:14:06.700
这个是更加有意思的一个

324
0:14:06.700 --> 0:14:09.000
或者说更加有价值的一个事情

325
0:14:09.000 --> 0:14:10.200
简单的讲的话呢

326
0:14:10.200 --> 0:14:11.900
就是技术不是要最牛

327
0:14:11.900 --> 0:14:14.600
但是要用用户用得起来的才是最牛的技术

328
0:14:14.600 --> 0:14:15.300
第二个呢

329
0:14:15.300 --> 0:14:22.300
我觉得是我们自己感到有很强的这个对于商业需求和对于用户需求的敬畏心

330
0:14:22.300 --> 0:14:23.600
举个例子吧

331
0:14:23.600 --> 0:14:26.700
我们团队有一位非常牛的一位全站的一位leader

332
0:14:26.700 --> 0:14:28.600
非常年轻的90后的一位工程师

333
0:14:28.600 --> 0:14:30.300
男性工程师

334
0:14:30.300 --> 0:14:32.600
他有一天给我发了一张照片

335
0:14:32.600 --> 0:14:34.500
一个烈焰红唇的照片

336
0:14:34.500 --> 0:14:36.300
左边是一个红嘴唇

337
0:14:36.300 --> 0:14:37.900
右边是一个紫色的嘴唇

338
0:14:37.900 --> 0:14:38.800
我说啊怎么了

339
0:14:38.800 --> 0:14:41.200
你今天要开始这个对吧

340
0:14:41.200 --> 0:14:44.800
这个你家夫人这个过生日要买礼物了

341
0:14:44.800 --> 0:14:45.700
他说不不不不

342
0:14:45.700 --> 0:14:47.800
他说我在做超分辨率

343
0:14:47.800 --> 0:14:49.100
super resolution

344
0:14:49.100 --> 0:14:51.100
超分辨率是做一个什么样的一个东西呢

345
0:14:51.100 --> 0:14:55.300
比如说我有一个540P的低清的图片进来

346
0:14:55.300 --> 0:14:56.800
那把视频进来

347
0:14:56.800 --> 0:15:01.400
那我要比如说在手机上面实时的给他做到1080P或者4K的吧

348
0:15:01.400 --> 0:15:03.900
我们现在用深度学习等等这样一些方式去做

349
0:15:03.900 --> 0:15:08.000
大家可能很多时候在很多的demo里面也见到过

350
0:15:08.000 --> 0:15:10.200
然后他说我发现啊

351
0:15:10.200 --> 0:15:13.700
这个深度学习的算法分辨率做的是挺好

352
0:15:13.700 --> 0:15:16.900
但是他会把这个口红的色号给改了

353
0:15:16.900 --> 0:15:18.400
他说我去跟客户一聊

354
0:15:18.400 --> 0:15:19.900
客户觉得说哇这不行

355
0:15:19.900 --> 0:15:21.100
这个我本来就是卖口红

356
0:15:21.100 --> 0:15:23.200
我是色号一定要准的分辨率好不好

357
0:15:23.200 --> 0:15:25.400
不重要色号一定要准

358
0:15:25.400 --> 0:15:30.800
所以呢我们会发现说我们以前这个很多时候在做科研啊等等的时候

359
0:15:30.800 --> 0:15:32.700
超分辨率我们也会有各种各样的

360
0:15:32.700 --> 0:15:38.700
比如说像叫做SSN等等这样的一些标准的一些这个指标去测试他们

361
0:15:38.700 --> 0:15:40.600
但是实际到了真正应用的时候

362
0:15:40.600 --> 0:15:45.600
其实用户的真正的需求和我们定义的那个指标也许有偏差

363
0:15:45.600 --> 0:15:49.800
但是最终的话其实是用户的这个指标是最重要的一个指标

364
0:15:49.800 --> 0:15:53.600
所以这块呢就是在自己家里面做产品啊

365
0:15:53.600 --> 0:15:57.100
做技术啊等等是一方面挺重要的一方面

366
0:15:57.100 --> 0:15:59.300
然后另外呢equally重要

367
0:15:59.300 --> 0:16:00.000
一样的重要

368
0:16:00.000 --> 0:16:02.900
甚至有可能更加重要一点的是说得去跟用户聊说

369
0:16:02.900 --> 0:16:05.700
哎现在最困扰你的是什么样的一个东西

370
0:16:05.700 --> 0:16:08.400
什么能够让你变得更加的高效

371
0:16:08.400 --> 0:16:09.800
我觉得这个口红的这个例子

372
0:16:09.800 --> 0:16:11.400
我们开玩笑说说对吧

373
0:16:11.400 --> 0:16:14.100
两位大男生到了深夜的时候在讨论说

374
0:16:14.100 --> 0:16:16.200
哎呀这个口红的色号对不对

375
0:16:16.200 --> 0:16:19.900
是我自己在了解用户需求里面

376
0:16:19.900 --> 0:16:23.100
想起前面几年的经历来最逗的一个经历

377
0:16:23.100 --> 0:16:27.600
从那个分辨率和那个色彩这一个角度

378
0:16:27.600 --> 0:16:29.400
从某种角度上来讲

379
0:16:29.400 --> 0:16:32.800
这都是照片的好跟坏对吧

380
0:16:32.800 --> 0:16:36.900
但是客户说的好跟你你心中想的好不一定是一样的

381
0:16:36.900 --> 0:16:38.900
或者说很多时候就是不一样

382
0:16:38.900 --> 0:16:41.200
这个我也是非常有共鸣的

383
0:16:41.200 --> 0:16:44.900
因为我们不管是做初创公司还是做大公司

384
0:16:44.900 --> 0:16:48.500
跑出去说哎这个是不是客户的需求

385
0:16:48.500 --> 0:16:51.000
跑回来都说哎这个是客户需求的

386
0:16:51.000 --> 0:16:52.400
但其实不一定

387
0:16:52.400 --> 0:16:56.900
他的指标他的指标的细节跟你说的不一定一样

388
0:16:56.900 --> 0:16:59.400
像你刚才举的这个例子就是

389
0:16:59.400 --> 0:17:02.200
其实在之前大家也是在为客户着想

390
0:17:02.200 --> 0:17:05.100
只是具体的细节就会很不一样一点

391
0:17:05.100 --> 0:17:07.400
那所以说你从这个角度上来讲

392
0:17:07.400 --> 0:17:11.400
你觉得如果说有什么就是回过头去看

393
0:17:11.400 --> 0:17:13.800
你觉得如果是从头开始做

394
0:17:13.800 --> 0:17:17.500
你会把这件事情做得更好或者更加完美一点的

395
0:17:17.500 --> 0:17:21.100
如果说觉得什么地方可以做得更加好一点呢

396
0:17:21.100 --> 0:17:26.200
我可能会就是说从第一天开始就更加强调

397
0:17:26.200 --> 0:17:29.900
产品经理和解决方案的团队的重要性

398
0:17:29.900 --> 0:17:32.500
就因为我们本身自己都是技术出身嘛

399
0:17:32.500 --> 0:17:35.500
我们天生的一个就是自己脑子里面

400
0:17:35.500 --> 0:17:37.700
已经形成一个固定的一个思维

401
0:17:37.700 --> 0:17:39.600
说首先我们会非常重视说

402
0:17:39.600 --> 0:17:42.500
哎我们要把这个事情研发开发出来

403
0:17:42.500 --> 0:17:45.000
然后呢对于产品啊解决方案

404
0:17:45.000 --> 0:17:48.200
我们潜意识里面会觉得说这个是我们研发

405
0:17:48.200 --> 0:17:52.200
我们把代码等等这些东西写完之后的下一步的事

406
0:17:52.200 --> 0:17:53.200
那么几年跑下来呢

407
0:17:53.200 --> 0:17:56.000
我觉得其实真的是一个有一点反向的

408
0:17:56.000 --> 0:17:57.400
来做开发的那么一种状态

409
0:17:57.400 --> 0:17:59.900
就是用户到底需要一个什么样的一个应用

410
0:17:59.900 --> 0:18:01.600
或者怎么样的一个场景

411
0:18:01.600 --> 0:18:03.200
然后我们再反过头来再来想说

412
0:18:03.200 --> 0:18:05.400
哎我们这个产品应该怎么样一个设计

413
0:18:05.400 --> 0:18:07.100
解决方案应该怎么样的一个设计

414
0:18:07.100 --> 0:18:10.400
我们再和研发一块来想出来

415
0:18:10.400 --> 0:18:13.700
应该以什么样的一种系统的架构也好

416
0:18:13.700 --> 0:18:16.300
产品的架构也好把这些东西实现了

417
0:18:16.300 --> 0:18:18.100
所以很多时候我们会发现说

418
0:18:18.100 --> 0:18:20.700
在大厂吧也有这样的一个情况

419
0:18:20.700 --> 0:18:24.300
就是研发永远会天生的会有一定的优势

420
0:18:24.300 --> 0:18:26.300
因为他们的专业性更强

421
0:18:26.300 --> 0:18:28.000
因此呢在组织结构上面

422
0:18:28.000 --> 0:18:29.500
有的时候往往会忽略了

423
0:18:29.500 --> 0:18:32.200
产品啊解决方案这个团队的重要性

424
0:18:32.200 --> 0:18:33.600
可能如果是重新再来一遍的话

425
0:18:33.600 --> 0:18:34.900
我会把这个产品解决方案的

426
0:18:34.900 --> 0:18:37.000
这个团队重要性拉得更高

427
0:18:37.000 --> 0:18:40.000
这样的话就使得我们在go to market

428
0:18:40.000 --> 0:18:43.100
我们在就是产品跟市场的适配的时候

429
0:18:43.100 --> 0:18:45.200
会做得更加有效一些

430
0:18:45.200 --> 0:18:47.200
对你说的这个例子

431
0:18:47.200 --> 0:18:53.300
其实我觉得几乎所有的大厂多多少少都很难避免

432
0:18:53.300 --> 0:18:55.700
在这方面可以做得好不少

433
0:18:55.700 --> 0:18:57.500
就比如说我就马上就想到

434
0:18:57.500 --> 0:19:02.500
为什么Chad GPT是从OpenAI这么一个初创公司出来

435
0:19:02.500 --> 0:19:04.300
而不是从Google出来

436
0:19:04.300 --> 0:19:05.900
其实没有道理对吧

437
0:19:05.900 --> 0:19:07.200
从某种角度上来讲

438
0:19:07.200 --> 0:19:11.700
Google是发明了Transformer这个技术的公司

439
0:19:11.700 --> 0:19:14.600
然后有这么多优秀的工程师也好

440
0:19:14.600 --> 0:19:16.700
或者说数据科学家也好

441
0:19:16.700 --> 0:19:19.200
最终没有去发明那个Chad GPT

442
0:19:19.200 --> 0:19:22.500
很多时候就是工程师就在那边

443
0:19:22.500 --> 0:19:24.700
非常用功的做某一件事情

444
0:19:24.700 --> 0:19:29.900
但这件事情并不一定是客户最需要的一件事情

445
0:19:29.900 --> 0:19:30.900
对好的

446
0:19:30.900 --> 0:19:34.600
我们已经讲了很多关于你加入阿里

447
0:19:34.600 --> 0:19:36.100
然后在阿里学到的

448
0:19:36.100 --> 0:19:41.500
能不能讲一讲为什么现在4年以后又出来创业

449
0:19:41.500 --> 0:19:42.600
我觉得对我来说

450
0:19:42.600 --> 0:19:46.600
我自己最感觉到兴奋的一点还是处于

451
0:19:46.600 --> 0:19:49.800
就像是当年的时候在研究生的年代

452
0:19:49.800 --> 0:19:56.000
包括后来在Facebook从0到1开始来做AI的Infrastructure的那个年代的时候

453
0:19:56.000 --> 0:19:58.000
那种创造的热情

454
0:19:58.000 --> 0:20:00.200
倒也不是说大厂的坏话

455
0:20:00.200 --> 0:20:05.100
但是我们知道小厂跟大厂有自己的不同的风格

456
0:20:05.100 --> 0:20:05.900
小厂的话

457
0:20:05.900 --> 0:20:07.800
我们开玩笑说死的快

458
0:20:07.800 --> 0:20:11.800
但是决策和各种各样的迭代也快一些

459
0:20:11.800 --> 0:20:14.500
大厂因为它本身自己的业务的复杂性

460
0:20:14.500 --> 0:20:15.800
客户的复杂性

461
0:20:15.800 --> 0:20:19.300
因此很多时候的动作也会稍微慢一些

462
0:20:19.300 --> 0:20:22.200
然后同时的话内部的各种组织关系什么的

463
0:20:22.200 --> 0:20:25.600
也会需要花比较多的精力来协调

464
0:20:25.600 --> 0:20:28.800
因此的话我自己感觉到就是说是说想来想去

465
0:20:28.800 --> 0:20:31.800
我还是更加怀念当年的时候能够

466
0:20:31.800 --> 0:20:35.100
不开玩笑的说熬夜写代码的那个年代

467
0:20:35.100 --> 0:20:36.000
在AI这个领域

468
0:20:36.000 --> 0:20:40.000
今天我们也会发现说新的东西变得越来越

469
0:20:40.000 --> 0:20:41.500
就出现的越来越快

470
0:20:41.500 --> 0:20:43.400
新的东西越来越多

471
0:20:43.400 --> 0:20:46.900
然后我们也会发现说其实从用户的角度来讲吧

472
0:20:46.900 --> 0:20:49.100
我们自己科技公司尚且如此

473
0:20:49.100 --> 0:20:53.000
那么我们会想见说非科技公司

474
0:20:53.000 --> 0:20:54.600
非互联网公司的这些企业

475
0:20:54.600 --> 0:20:57.200
他们会更加强烈的需要AI的技术

476
0:20:57.200 --> 0:21:01.600
同时他们和这些新的AI技术之间的这个

477
0:21:01.600 --> 0:21:03.300
鸿沟也会变得越来越大

478
0:21:03.300 --> 0:21:05.400
这个中间是需要人去填的

479
0:21:05.400 --> 0:21:07.800
我自己一直以来在AI这个领域

480
0:21:07.800 --> 0:21:10.000
从研究开始往回走

481
0:21:10.000 --> 0:21:13.000
走到技术走到产品走到商业

482
0:21:13.000 --> 0:21:14.100
对这话也挺感兴趣

483
0:21:14.100 --> 0:21:17.700
我觉得这是一个比较说的稍微烂俗一点的话

484
0:21:17.700 --> 0:21:19.900
这是一个千载难逢的机会

485
0:21:19.900 --> 0:21:22.200
所以也就是出来来做的

486
0:21:22.200 --> 0:21:24.400
好的所以说并不是说

487
0:21:24.400 --> 0:21:27.300
Chai GPT出来以后觉得我一定要做一件

488
0:21:27.300 --> 0:21:29.200
跟Chai GPT有关的事情

489
0:21:29.200 --> 0:21:33.600
更多的是基于对于这么一个大方向的考虑

490
0:21:33.600 --> 0:21:38.100
就是怎么样让AI的技术能够在各行各业

491
0:21:38.100 --> 0:21:42.500
能够更好更快的生根落地能够被应用到

492
0:21:42.500 --> 0:21:44.000
能不能这么理解

493
0:21:44.000 --> 0:21:45.000
对是的

494
0:21:45.000 --> 0:21:48.100
就是创业的这个想法呢15年左右的时候

495
0:21:48.100 --> 0:21:49.600
当时还在谷歌的时候

496
0:21:49.600 --> 0:21:51.400
其实也想过

497
0:21:51.400 --> 0:21:53.100
当时的时候没有出来创业的一个理由

498
0:21:53.100 --> 0:21:54.400
可能我比较保守啊

499
0:21:54.400 --> 0:21:56.200
就是当时没有出来创业的一个理由呢

500
0:21:56.200 --> 0:21:59.700
是因为就是说觉得在谷歌那个年代刚还比较年轻嘛

501
0:21:59.700 --> 0:22:02.200
也没有带过团队也没有带过业务

502
0:22:02.200 --> 0:22:04.700
因此的话采取一个比较稳妥的一个方式

503
0:22:04.700 --> 0:22:07.700
说在Facebook继续进一步的看更多的业务啊

504
0:22:07.700 --> 0:22:09.600
包括在阿里云啊等等

505
0:22:09.600 --> 0:22:14.300
所以呢今天我觉得说也到了一个水到渠成的时间了吧

506
0:22:14.300 --> 0:22:17.900
也是当时的时候的不管是说是梦想也好

507
0:22:17.900 --> 0:22:19.300
当时的执念也好

508
0:22:19.300 --> 0:22:20.900
我觉得是值得做一做的

509
0:22:20.900 --> 0:22:24.300
所以倒也并不是真的是因为Chats GPT所以出来的

510
0:22:24.300 --> 0:22:28.100
因为最近呢大家可能也都更加关注在Chats GPT上面嘛

511
0:22:28.100 --> 0:22:30.100
不过我觉得创业本身是一个很常见的一个事儿

512
0:22:30.100 --> 0:22:33.500
就是很难说因为就是突然出现了一个东西

513
0:22:33.500 --> 0:22:35.100
然后就决定出来创业

514
0:22:35.100 --> 0:22:36.800
啊认认真真的做的话

515
0:22:36.800 --> 0:22:38.700
想想也得想好几年啊

516
0:22:38.700 --> 0:22:41.400
当然这个是我相对比较保守的这样一个观点的

517
0:22:41.400 --> 0:22:43.000
就是想想也得想好几年

518
0:22:43.000 --> 0:22:46.200
然后要做的话那也是一个5年到10年的

519
0:22:46.200 --> 0:22:47.800
那么一个那么一个事业吧

520
0:22:47.800 --> 0:22:49.100
毕竟自己的时间最宝贵

521
0:22:49.100 --> 0:22:51.500
所以还是想清楚了然后再出来做

522
0:22:55.000 --> 0:22:56.900
这里也插播一次消息

523
0:22:56.900 --> 0:23:00.200
本周五生动活泼旗下的另一档节目生动早咖啡

524
0:23:00.200 --> 0:23:04.300
将为大家带来保时捷经典车型911的商业故事

525
0:23:04.300 --> 0:23:08.700
那在去年其实有很多知名的公司是终止了自己的上市计划

526
0:23:08.700 --> 0:23:11.300
比如在美国终止上市企业的数量

527
0:23:11.300 --> 0:23:14.800
就达到了2000年互联网泡沫以来的最高水平

528
0:23:14.800 --> 0:23:16.100
而在这样的背景下

529
0:23:16.100 --> 0:23:20.100
欧洲却出现了近20年以来最大的一次IPO

530
0:23:20.100 --> 0:23:22.400
就是去年9月底的保时捷

531
0:23:22.400 --> 0:23:26.500
那保时捷当时上市的股票交易代码是P911

532
0:23:26.500 --> 0:23:30.200
而发行的股票数量也是9.11亿股

533
0:23:30.200 --> 0:23:33.000
而这些都是为了去致敬这家公司

534
0:23:33.000 --> 0:23:36.300
历史上最著名的车型保时捷911

535
0:23:36.300 --> 0:23:38.300
在本周五的早咖啡节目中

536
0:23:38.300 --> 0:23:42.300
大家可以了解到作为一款跨越半个多世纪的车型

537
0:23:42.300 --> 0:23:44.500
911为什么能够吸引大家

538
0:23:44.500 --> 0:23:48.300
而这个超级产品又是如何让保时捷成为超级品牌的

539
0:23:48.300 --> 0:23:51.300
欢迎大家在本周五早上准时收听

540
0:23:51.300 --> 0:23:54.300
那接下来就让我们回到科技早晨到的节目中吧

541
0:23:56.500 --> 0:23:59.800
对 你的老同学Reno的心

542
0:23:59.800 --> 0:24:03.300
去年一年前也在我的节目里面来过

543
0:24:03.300 --> 0:24:05.800
他是从学校直接就去出演的

544
0:24:05.800 --> 0:24:07.000
对 我还听了那一期

545
0:24:07.000 --> 0:24:09.800
对 然后我个人是觉得

546
0:24:09.800 --> 0:24:12.300
因为这么多年自己也好

547
0:24:12.300 --> 0:24:14.300
自己接触的创业者也好

548
0:24:14.300 --> 0:24:18.300
那么多 我是觉得创业并不在于那个一定早一定晚

549
0:24:18.300 --> 0:24:20.300
尤其是做B2B

550
0:24:20.300 --> 0:24:23.300
就是做那些2B的软件公司

551
0:24:23.300 --> 0:24:26.300
不存在那个一定要赶个早急

552
0:24:26.300 --> 0:24:30.300
你如果是做一个下一代的那个交友软件

553
0:24:30.300 --> 0:24:33.300
说不定刚刚毕业出来是做最好

554
0:24:33.300 --> 0:24:35.300
但是做一些公司服务的软件

555
0:24:35.300 --> 0:24:39.300
我觉得其实像你这样觉得还能够水到渠成

556
0:24:39.300 --> 0:24:42.300
我觉得是非常好的一个状态

557
0:24:42.300 --> 0:24:46.300
那关于就具体做什么方面

558
0:24:46.300 --> 0:24:50.300
我不知道你今天那个愿意或者说能够透露多少

559
0:24:50.300 --> 0:24:53.300
但是我在跟你聊之前也读了一下

560
0:24:53.300 --> 0:24:55.300
你最近写了一篇

561
0:24:55.300 --> 0:24:57.300
自己写了一篇公众号的文章

562
0:24:57.300 --> 0:25:02.300
也是关于一些在这个大模型下面的几个基础假设

563
0:25:02.300 --> 0:25:05.300
对 我们能不能从这里面开始聊起

564
0:25:05.300 --> 0:25:09.300
因为我觉得很有可能你创业的一些灵感

565
0:25:09.300 --> 0:25:12.300
或者说怎么已经浓缩在这些方面了

566
0:25:12.300 --> 0:25:14.300
即使没有我相信也是相关的

567
0:25:14.300 --> 0:25:18.300
我觉得咱们可能从就是现在也都比较热的

568
0:25:18.300 --> 0:25:20.300
AI LRM等等这个角度来讲起吧

569
0:25:20.300 --> 0:25:23.300
就是今天肯定大家会有一个这样的一个疑问

570
0:25:23.300 --> 0:25:25.300
就是说我们在做创业的时候

571
0:25:25.300 --> 0:25:27.300
就至少我自己的一个疑问是说

572
0:25:27.300 --> 0:25:29.300
创业的时候我是做模型

573
0:25:29.300 --> 0:25:32.300
还是做infra 做infra的意思就是说

574
0:25:32.300 --> 0:25:34.300
我们来做平台

575
0:25:34.300 --> 0:25:37.300
这块我自己的逻辑是在AI这个领域

576
0:25:37.300 --> 0:25:40.300
模型基本上它的保鲜期

577
0:25:40.300 --> 0:25:42.300
我们英文叫shelf life

578
0:25:42.300 --> 0:25:44.300
保鲜期基本上也就是一年左右的样子

579
0:25:44.300 --> 0:25:47.300
从2012年AlexNet开始

580
0:25:47.300 --> 0:25:49.300
基本上就一直是这样的一个过程

581
0:25:49.300 --> 0:25:51.300
最开始大家可能会觉得说

582
0:25:51.300 --> 0:25:54.300
这个模型出来横空出世之后

583
0:25:54.300 --> 0:25:56.300
别人都无人能及

584
0:25:56.300 --> 0:25:58.300
但是我会发现说六个月到一年之后

585
0:25:58.300 --> 0:26:01.300
差不多的效果的模型就出来了

586
0:26:01.300 --> 0:26:03.300
因此我自己得出来的一个结论是说

587
0:26:03.300 --> 0:26:06.300
今天模型越来越多的会是一个

588
0:26:06.300 --> 0:26:08.300
开源主导的那么一个模式

589
0:26:08.300 --> 0:26:10.300
而大家所更加需要的是怎么样

590
0:26:10.300 --> 0:26:12.300
把这个模型更好的部署起来

591
0:26:12.300 --> 0:26:14.300
尤其是部署到应用当中去

592
0:26:14.300 --> 0:26:19.300
有一种弹性的稳定的和低成本的这样一种方式

593
0:26:19.300 --> 0:26:21.300
部署到应用当中去的这样的一个平台

594
0:26:21.300 --> 0:26:23.300
这是一个更加明确的一个需求

595
0:26:23.300 --> 0:26:26.300
所以说大家现在都在讲

596
0:26:26.300 --> 0:26:30.300
Opera的GPT-4这些模型

597
0:26:30.300 --> 0:26:32.300
你觉得像这些大模型

598
0:26:32.300 --> 0:26:34.300
虽然说非常优秀

599
0:26:34.300 --> 0:26:36.300
非常的令人惊艳

600
0:26:36.300 --> 0:26:39.300
但是你觉得开源的版本

601
0:26:39.300 --> 0:26:43.300
能够达到类似差不多效果的模型

602
0:26:43.300 --> 0:26:45.300
这样的开源模型

603
0:26:45.300 --> 0:26:48.300
也会在6到12个月以后会出现

604
0:26:48.300 --> 0:26:49.300
我觉得会的

605
0:26:49.300 --> 0:26:51.300
尤其是在2B的领域

606
0:26:51.300 --> 0:26:53.300
因为在企业服务领域的话

607
0:26:53.300 --> 0:26:58.300
我们并不一定需要一个通用的最好的模型

608
0:26:58.300 --> 0:26:59.300
其实很多时候我们说

609
0:26:59.300 --> 0:27:01.300
这个就是一定程度上是通才加专才的

610
0:27:01.300 --> 0:27:03.300
那么一个平衡

611
0:27:03.300 --> 0:27:06.300
我们不可能是一个所有的一切

612
0:27:06.300 --> 0:27:09.300
把整个维基百科都知道的那么一个通才

613
0:27:09.300 --> 0:27:10.300
工作当中的话

614
0:27:10.300 --> 0:27:12.300
我们需要有一定的通用性

615
0:27:12.300 --> 0:27:14.300
就是所谓的基础大模型

616
0:27:14.300 --> 0:27:16.300
再加上专业知识

617
0:27:16.300 --> 0:27:17.300
所以这个地方的话

618
0:27:17.300 --> 0:27:19.300
我觉得尤其是在企业服务这个领域

619
0:27:19.300 --> 0:27:22.300
会出现非常多的垂直领域的

620
0:27:22.300 --> 0:27:25.300
由这些企业所自己拥有的

621
0:27:25.300 --> 0:27:28.300
那么一些从基础大模型出来的模型

622
0:27:28.300 --> 0:27:31.300
所以说你这边说的模型是指那些

623
0:27:31.300 --> 0:27:34.300
和OpenAI最新的模型

624
0:27:34.300 --> 0:27:36.300
不一定有它效果那么好

625
0:27:36.300 --> 0:27:37.300
但是是good enough

626
0:27:37.300 --> 0:27:39.300
就是说有足够好

627
0:27:39.300 --> 0:27:41.300
再加上有一些专才

628
0:27:41.300 --> 0:27:42.300
我能不能理解

629
0:27:42.300 --> 0:27:43.300
这是你的

630
0:27:43.300 --> 0:27:45.300
你现在所说的那些能够

631
0:27:45.300 --> 0:27:47.300
对 是的

632
0:27:47.300 --> 0:27:48.300
对

633
0:27:48.300 --> 0:27:49.300
我写这个公众号

634
0:27:49.300 --> 0:27:51.300
大概是在一个月之前

635
0:27:51.300 --> 0:27:53.300
就是我会发现一点说

636
0:27:53.300 --> 0:27:54.300
当时我们的判断是说

637
0:27:54.300 --> 0:27:56.300
在6个月到一年当中

638
0:27:56.300 --> 0:27:59.300
会出现很多的开源类似的模型

639
0:27:59.300 --> 0:28:01.300
然后最近这一个月的发展的话

640
0:28:01.300 --> 0:28:04.300
我觉得发展比我所预测的更快

641
0:28:04.300 --> 0:28:06.300
比如说大家最近可能在

642
0:28:06.300 --> 0:28:07.300
新闻当中所听到的

643
0:28:07.300 --> 0:28:09.300
Facebook开源的Lama

644
0:28:09.300 --> 0:28:11.300
伯克利和斯坦福开源的

645
0:28:11.300 --> 0:28:13.300
Vicuna和Alpaca

646
0:28:13.300 --> 0:28:16.300
然后以及刚才Reynolds在Databricks

647
0:28:16.300 --> 0:28:18.300
Reynolds的co-founder的Databricks

648
0:28:18.300 --> 0:28:21.300
Databricks所开源的Dolly

649
0:28:21.300 --> 0:28:22.300
对

650
0:28:22.300 --> 0:28:23.300
他们都在向我们展示

651
0:28:23.300 --> 0:28:24.300
那么一个可能性

652
0:28:24.300 --> 0:28:26.300
就是基于开源的方式

653
0:28:26.300 --> 0:28:28.300
以及公开的数据集

654
0:28:28.300 --> 0:28:29.300
我们就可以训练出来

655
0:28:29.300 --> 0:28:31.300
一个非常高质量的模型了

656
0:28:31.300 --> 0:28:33.300
这个模型没有像GPG3

657
0:28:33.300 --> 0:28:36.300
以及现在各家大厂在做的

658
0:28:36.300 --> 0:28:38.300
这个通财的能力

659
0:28:38.300 --> 0:28:40.300
但是他们质量上面

660
0:28:40.300 --> 0:28:42.300
其实就是说对于文字的

661
0:28:42.300 --> 0:28:45.300
这个多模态的信息的理解的程度

662
0:28:45.300 --> 0:28:47.300
其实都已经非常不错了

663
0:28:47.300 --> 0:28:48.300
所以这个我觉得是一个

664
0:28:48.300 --> 0:28:49.300
非常好的一个起点

665
0:28:49.300 --> 0:28:50.300
就是开源这块

666
0:28:50.300 --> 0:28:51.300
在后面我也相信

667
0:28:51.300 --> 0:28:53.300
会走得越来越快

668
0:28:53.300 --> 0:28:55.300
对 这是你的基础假设之一

669
0:28:55.300 --> 0:28:56.300
对 这是第一个假设

670
0:28:56.300 --> 0:28:58.300
对 大模型基本上就是

671
0:28:58.300 --> 0:29:01.300
开源的不一定是完全赶上

672
0:29:01.300 --> 0:29:03.300
但是会基本赶上

673
0:29:03.300 --> 0:29:06.300
大厂也好OpenAI所做的模型

674
0:29:06.300 --> 0:29:08.300
然后这一点是

675
0:29:08.300 --> 0:29:11.300
你觉得根据过去10年的历史

676
0:29:11.300 --> 0:29:13.300
我们能够看到今后几年

677
0:29:13.300 --> 0:29:15.300
也是这么发展的

678
0:29:15.300 --> 0:29:16.300
是的

679
0:29:16.300 --> 0:29:18.300
那么我觉得第二个假设

680
0:29:18.300 --> 0:29:20.300
是说今天我们大模型上面

681
0:29:20.300 --> 0:29:22.300
能够所催生的应用

682
0:29:22.300 --> 0:29:25.300
或者说对我们现有的应用的提升

683
0:29:25.300 --> 0:29:29.300
这一块还有非常多的可能性去挖掘

684
0:29:29.300 --> 0:29:31.300
这就有点像我刚才所提到的

685
0:29:31.300 --> 0:29:33.300
口红色号的这个例子一样

686
0:29:33.300 --> 0:29:35.300
就一旦到应用当中去的话

687
0:29:35.300 --> 0:29:38.300
它的形态不会光光只是一个说

688
0:29:38.300 --> 0:29:39.300
我说一句话

689
0:29:39.300 --> 0:29:41.300
然后大模型给我回答一句话

690
0:29:41.300 --> 0:29:43.300
那么一种纯问答的模式

691
0:29:43.300 --> 0:29:44.300
它有可能是

692
0:29:44.300 --> 0:29:47.300
比如说作为一种更加智能的个人助理

693
0:29:47.300 --> 0:29:49.300
会议助理等等这样一种模式

694
0:29:49.300 --> 0:29:51.300
它有可能是比如说辅助

695
0:29:51.300 --> 0:29:54.300
无论是作家还是画家来做创作

696
0:29:54.300 --> 0:29:55.300
等等这种模式

697
0:29:55.300 --> 0:29:57.300
那么因此应用的交互形态

698
0:29:57.300 --> 0:29:59.300
其实是很重要的

699
0:29:59.300 --> 0:30:01.300
今天在前面的几个月当中

700
0:30:01.300 --> 0:30:03.300
我觉得大家都非常强烈的关注

701
0:30:03.300 --> 0:30:04.300
一种形态

702
0:30:04.300 --> 0:30:05.300
也就是聊天机器人

703
0:30:05.300 --> 0:30:07.300
因为ChatGPT出来了

704
0:30:07.300 --> 0:30:10.300
但是聊天机器人并不是应用的形态

705
0:30:10.300 --> 0:30:11.300
一个全部

706
0:30:11.300 --> 0:30:13.300
我觉得后面其实有非常多的需要

707
0:30:13.300 --> 0:30:15.300
来让做应用的人

708
0:30:15.300 --> 0:30:17.300
能够更加容易的用这些模型来

709
0:30:17.300 --> 0:30:20.300
来尝试说在现在的这种各种应用模式

710
0:30:20.300 --> 0:30:23.300
交互模式下面怎么样来使用大模型

711
0:30:23.300 --> 0:30:25.300
这个需求应该怎么样来拉

712
0:30:25.300 --> 0:30:27.300
就会需要有一个比较好的平台

713
0:30:27.300 --> 0:30:29.300
来支撑这个事情

714
0:30:29.300 --> 0:30:32.300
大厂内部可能会有自己的平台等等

715
0:30:32.300 --> 0:30:34.300
我比较强烈的相信一点是说

716
0:30:34.300 --> 0:30:36.300
在企业服务的领域的话

717
0:30:36.300 --> 0:30:38.300
我们需要来有

718
0:30:38.300 --> 0:30:41.300
针对于不同的企业的使用形态

719
0:30:41.300 --> 0:30:43.300
尤其是它对于比如说数据安全

720
0:30:43.300 --> 0:30:45.300
等等这一块的需求

721
0:30:45.300 --> 0:30:47.300
针对他们的这种使用形态来设计的

722
0:30:47.300 --> 0:30:48.300
针对性的平台

723
0:30:48.300 --> 0:30:50.300
就有点像就是数据这一块

724
0:30:50.300 --> 0:30:53.300
我们催生了像Snowflake Databricks

725
0:30:53.300 --> 0:30:56.300
在传统的应用的这一块

726
0:30:56.300 --> 0:30:57.300
传统的应用上云这一块

727
0:30:57.300 --> 0:30:59.300
催生了像这个Bursell

728
0:30:59.300 --> 0:31:02.300
像HashCorp等等这样的一些企业一样

729
0:31:02.300 --> 0:31:04.300
就是AI这个领域也会出现

730
0:31:04.300 --> 0:31:06.300
类似的这样一个平台型的企业

731
0:31:06.300 --> 0:31:09.300
而这个企业并不一定是云服务商

732
0:31:09.300 --> 0:31:11.300
对 比如说HashCorp

733
0:31:11.300 --> 0:31:12.300
之所以能够走出来

734
0:31:12.300 --> 0:31:15.300
它做了一个多云的一个概念

735
0:31:15.300 --> 0:31:17.300
它不只是给一个云

736
0:31:17.300 --> 0:31:18.300
如果只是给一个云

737
0:31:18.300 --> 0:31:21.300
或许它的优势就不那么明显

738
0:31:21.300 --> 0:31:23.300
但是你觉得对于以后

739
0:31:23.300 --> 0:31:25.300
今后大模型的时代

740
0:31:25.300 --> 0:31:27.300
会有各种各样的模型

741
0:31:27.300 --> 0:31:28.300
各种各样的需求

742
0:31:28.300 --> 0:31:30.300
所以从这个角度上来讲

743
0:31:30.300 --> 0:31:32.300
你的一个基础假设就是

744
0:31:32.300 --> 0:31:34.300
尽管大模型可能

745
0:31:34.300 --> 0:31:36.300
模型本身已经足够好了

746
0:31:36.300 --> 0:31:39.300
但是真正要把它给落地运用

747
0:31:39.300 --> 0:31:42.300
你觉得还是有很长的一段路

748
0:31:42.300 --> 0:31:46.300
使得客户能够用好 用得极致

749
0:31:46.300 --> 0:31:47.300
从这个角度上来讲

750
0:31:47.300 --> 0:31:49.300
你个人的判断是说

751
0:31:49.300 --> 0:31:53.300
一个是good enough的那些模型

752
0:31:53.300 --> 0:31:54.300
会涌现出来

753
0:31:54.300 --> 0:31:55.300
而且就像你说的

754
0:31:55.300 --> 0:31:57.300
已经很快的速度

755
0:31:57.300 --> 0:31:59.300
涌现了不少开源的项目出来

756
0:31:59.300 --> 0:32:02.300
而且都看上去是蛮不错的

757
0:32:02.300 --> 0:32:03.300
这是一个

758
0:32:03.300 --> 0:32:05.300
你对未来的判断是

759
0:32:05.300 --> 0:32:08.300
并不是说是有三个五个

760
0:32:08.300 --> 0:32:10.300
大模型的大厂

761
0:32:10.300 --> 0:32:12.300
像OpenAI或者Google

762
0:32:12.300 --> 0:32:13.300
这几个大厂

763
0:32:13.300 --> 0:32:16.300
然后你会觉得那么多的公司

764
0:32:16.300 --> 0:32:18.300
他们多多少少都会有

765
0:32:18.300 --> 0:32:20.300
自己模型的需求

766
0:32:20.300 --> 0:32:21.300
这是你的一个判断吗

767
0:32:21.300 --> 0:32:22.300
对 是的

768
0:32:22.300 --> 0:32:23.300
这个是基于两点

769
0:32:23.300 --> 0:32:24.300
就第一点的说

770
0:32:24.300 --> 0:32:26.300
如果说模型的门槛

771
0:32:26.300 --> 0:32:28.300
非常非常的高

772
0:32:28.300 --> 0:32:30.300
可能大家虽然有这个需求

773
0:32:30.300 --> 0:32:31.300
也就不做了

774
0:32:31.300 --> 0:32:32.300
因为做不了

775
0:32:32.300 --> 0:32:34.300
但是就像咱们刚才提到的

776
0:32:34.300 --> 0:32:36.300
模型的门槛应该会降低

777
0:32:36.300 --> 0:32:37.300
而且会越降越低

778
0:32:37.300 --> 0:32:38.300
这就像是

779
0:32:38.300 --> 0:32:40.300
比如说在2012年的时候

780
0:32:40.300 --> 0:32:41.300
计算机视觉

781
0:32:41.300 --> 0:32:43.300
我们能够识别猫啊狗啊

782
0:32:43.300 --> 0:32:44.300
这个模型就已经是

783
0:32:44.300 --> 0:32:45.300
核心竞争力了

784
0:32:45.300 --> 0:32:46.300
到今天我们觉得说

785
0:32:46.300 --> 0:32:48.300
这些模型遍地可得

786
0:32:48.300 --> 0:32:50.300
那么大模型今天我们

787
0:32:50.300 --> 0:32:52.300
我觉得它处在于一个

788
0:32:52.300 --> 0:32:53.300
就像当年AlexNet

789
0:32:53.300 --> 0:32:55.300
在计算机视觉领域

790
0:32:55.300 --> 0:32:56.300
出来的时候那样

791
0:32:56.300 --> 0:32:57.300
大家都非常惊艳

792
0:32:57.300 --> 0:32:58.300
和都非常

793
0:32:58.300 --> 0:32:59.300
英文叫FOMO

794
0:32:59.300 --> 0:33:01.300
就是说担心自己

795
0:33:01.300 --> 0:33:03.300
掉在这个趋势之外的

796
0:33:03.300 --> 0:33:05.300
但是我觉得过半年到一年之后

797
0:33:05.300 --> 0:33:07.300
这个门槛会降低

798
0:33:07.300 --> 0:33:09.300
尤其是基于一些开源的大模型

799
0:33:09.300 --> 0:33:11.300
在自己的数据上面翻

800
0:33:11.300 --> 0:33:13.300
微调的这个难度会

801
0:33:13.300 --> 0:33:14.300
越来越降低

802
0:33:14.300 --> 0:33:15.300
那这个时候的话

803
0:33:15.300 --> 0:33:16.300
企业就会需要

804
0:33:16.300 --> 0:33:18.300
或者说也希望来自己

805
0:33:18.300 --> 0:33:20.300
管理这些这些模型

806
0:33:20.300 --> 0:33:21.300
OK好

807
0:33:21.300 --> 0:33:23.300
那么你第三点基础假设呢

808
0:33:23.300 --> 0:33:25.300
对第三点呢

809
0:33:25.300 --> 0:33:26.300
我觉得就是说

810
0:33:26.300 --> 0:33:28.300
今天我们会需要有新的

811
0:33:28.300 --> 0:33:29.300
一个平台的服务

812
0:33:29.300 --> 0:33:30.300
其实刚才咱们在讲的时候

813
0:33:30.300 --> 0:33:31.300
也讲差不多

814
0:33:31.300 --> 0:33:32.300
讲到了这一点

815
0:33:32.300 --> 0:33:36.300
今天如果说站在云服务商的角度来讲的话

816
0:33:36.300 --> 0:33:38.300
我觉得云今天的一个基本的

817
0:33:38.300 --> 0:33:41.300
业务模式并没有太大的变化

818
0:33:41.300 --> 0:33:43.300
就是说他将

819
0:33:43.300 --> 0:33:45.300
以前客户自己需要在

820
0:33:45.300 --> 0:33:46.300
ADC上部署的

821
0:33:46.300 --> 0:33:47.300
那么一种模式

822
0:33:47.300 --> 0:33:49.300
变成了在云上可以弹性的来

823
0:33:49.300 --> 0:33:51.300
这个利用云的供应链

824
0:33:51.300 --> 0:33:52.300
但是呢

825
0:33:52.300 --> 0:33:54.300
今天我觉得尤其是在国内吧

826
0:33:54.300 --> 0:33:55.300
欧美的话

827
0:33:55.300 --> 0:33:56.300
其实AWS也会遇到

828
0:33:56.300 --> 0:33:57.300
类似的这样的情况

829
0:33:57.300 --> 0:33:59.300
就是云相对比较难

830
0:33:59.300 --> 0:34:03.300
再往上一步走到一个完全的

831
0:34:03.300 --> 0:34:04.300
就是以应用为中心

832
0:34:04.300 --> 0:34:06.300
或者说以平台为中心的

833
0:34:06.300 --> 0:34:09.300
那么一个商业模式上去

834
0:34:09.300 --> 0:34:10.300
我觉得这个可能也是和

835
0:34:10.300 --> 0:34:12.300
就是说每一个公司自己的一个

836
0:34:12.300 --> 0:34:13.300
做好一件事

837
0:34:13.300 --> 0:34:15.300
那么一种风格有关系的

838
0:34:15.300 --> 0:34:18.300
云今天在供应链这块做得非常的好

839
0:34:18.300 --> 0:34:19.300
但是他在上面平台

840
0:34:19.300 --> 0:34:20.300
构建平台

841
0:34:20.300 --> 0:34:22.300
尤其是站在用户这一侧来

842
0:34:22.300 --> 0:34:24.300
帮用户更加有效的应用平台

843
0:34:24.300 --> 0:34:27.300
这块全球似乎都没有做得特别好的

844
0:34:27.300 --> 0:34:30.300
因为云服务商的一个基础假设是说

845
0:34:30.300 --> 0:34:31.300
用户用的越多

846
0:34:31.300 --> 0:34:33.300
我的这个营收和我的利润就更好

847
0:34:33.300 --> 0:34:36.300
那么他天生其实很难跟用户站在一块

848
0:34:36.300 --> 0:34:38.300
来做帮用户降本增效啊

849
0:34:38.300 --> 0:34:39.300
等等这样一些事情

850
0:34:39.300 --> 0:34:41.300
当然也许小厂到大厂之后

851
0:34:41.300 --> 0:34:42.300
也会遇到一样的挑战

852
0:34:42.300 --> 0:34:44.300
但是对于独立的小厂来说的话

853
0:34:44.300 --> 0:34:47.300
他更加能够和用户站得更近

854
0:34:47.300 --> 0:34:48.300
迭代的更快

855
0:34:48.300 --> 0:34:49.300
这也是今天就是AI

856
0:34:49.300 --> 0:34:51.300
在迅速这个迭代的时候

857
0:34:51.300 --> 0:34:54.300
我们大家所需要的那么一个平台

858
0:34:54.300 --> 0:34:56.300
所以说你的这个三点基础假设

859
0:34:56.300 --> 0:34:59.300
是第一个开源模型会大大降低

860
0:34:59.300 --> 0:35:01.300
这个大模型的门槛

861
0:35:01.300 --> 0:35:04.300
第二个是大模型以后

862
0:35:04.300 --> 0:35:07.300
不一定会是大家最最关注的

863
0:35:07.300 --> 0:35:09.300
大家最应该关注的是那些应用

864
0:35:09.300 --> 0:35:10.300
对吧

865
0:35:10.300 --> 0:35:13.300
然后第三点是在这个情况下面

866
0:35:13.300 --> 0:35:15.300
说穿了就是需要新一代的

867
0:35:15.300 --> 0:35:18.300
这个AI这个年代的HashCorp

868
0:35:18.300 --> 0:35:20.300
或者说AI这个年代的新的平台

869
0:35:20.300 --> 0:35:22.300
或者新的平台公司

870
0:35:22.300 --> 0:35:24.300
新的平台服务

871
0:35:24.300 --> 0:35:26.300
这是你的三点基础假设

872
0:35:26.300 --> 0:35:28.300
对就是要实现那么一个平台

873
0:35:28.300 --> 0:35:30.300
其实也并不容易

874
0:35:30.300 --> 0:35:33.300
就是说因为这个地方恰恰是一个

875
0:35:33.300 --> 0:35:36.300
又要结合对于算法的理解

876
0:35:36.300 --> 0:35:38.300
又要结合对应用的理解

877
0:35:38.300 --> 0:35:42.300
又要结合对于就是底层的infrastructure

878
0:35:42.300 --> 0:35:44.300
比如像云云生的极左架构等等

879
0:35:44.300 --> 0:35:45.300
这一块的理解

880
0:35:45.300 --> 0:35:48.300
就是它是一个非常多学合总和的

881
0:35:48.300 --> 0:35:49.300
那么一个领域

882
0:35:49.300 --> 0:35:50.300
所以我觉得的话

883
0:35:50.300 --> 0:35:51.300
这个地方机遇在

884
0:35:51.300 --> 0:35:53.300
同时门槛也在

885
0:35:53.300 --> 0:35:55.300
这是我们做过技术

886
0:35:55.300 --> 0:35:58.300
然后同时又做过业务的这些

887
0:35:58.300 --> 0:35:59.300
从云出来的专家们

888
0:35:59.300 --> 0:36:01.300
可能最有竞争力的一点

889
0:36:01.300 --> 0:36:03.300
对我完全可以想象

890
0:36:03.300 --> 0:36:07.300
你接下去自己做的初创公司

891
0:36:07.300 --> 0:36:10.300
多多少少会跟这个方面有关

892
0:36:10.300 --> 0:36:12.300
能不能跟大家分享一下

893
0:36:12.300 --> 0:36:13.300
好呀这个呢

894
0:36:13.300 --> 0:36:15.300
我觉得我们可能也都处于一个

895
0:36:15.300 --> 0:36:16.300
相对比较早期

896
0:36:16.300 --> 0:36:18.300
所以也没有太多可以跟大家分享的

897
0:36:18.300 --> 0:36:20.300
可以分享一下简单的一些思路吧

898
0:36:20.300 --> 0:36:21.300
第一个思路呢

899
0:36:21.300 --> 0:36:24.300
就是我们会关注在就是帮助用户

900
0:36:24.300 --> 0:36:27.300
更好的来搭建AI的应用上面

901
0:36:27.300 --> 0:36:29.300
因为今天其实如果说

902
0:36:29.300 --> 0:36:31.300
大家说想做一些实验的话呢

903
0:36:31.300 --> 0:36:33.300
其实也不需要太多的平台

904
0:36:33.300 --> 0:36:35.300
对吧我去买几个GPU

905
0:36:35.300 --> 0:36:37.300
然后呢我在GitHub上面

906
0:36:37.300 --> 0:36:38.300
我来下载一些代码

907
0:36:38.300 --> 0:36:41.300
然后呢跑一跑看看效果就可以了

908
0:36:41.300 --> 0:36:44.300
但是从那么一个实验室到应用

909
0:36:44.300 --> 0:36:46.300
中间有很麻烦的地方

910
0:36:46.300 --> 0:36:48.300
我们在支撑达摩院的

911
0:36:48.300 --> 0:36:49.300
各种各样的AI应用的时候

912
0:36:49.300 --> 0:36:51.300
就会看到这样的一个问题

913
0:36:51.300 --> 0:36:52.300
最简单的模式是

914
0:36:52.300 --> 0:36:53.300
达摩院科学家说

915
0:36:53.300 --> 0:36:54.300
我买两台GPU

916
0:36:54.300 --> 0:36:55.300
我在这个GPU上面

917
0:36:55.300 --> 0:36:57.300
自己拉几个Flask的

918
0:36:57.300 --> 0:36:59.300
这个Python的web服务

919
0:36:59.300 --> 0:37:00.300
网络服务

920
0:37:00.300 --> 0:37:01.300
就来服务这些模型了

921
0:37:01.300 --> 0:37:03.300
但是这个时候呢就会出现说

922
0:37:03.300 --> 0:37:06.300
要不这个用户的需求比较低

923
0:37:06.300 --> 0:37:08.300
我的这个API放出去之后

924
0:37:08.300 --> 0:37:09.300
调用量很少

925
0:37:09.300 --> 0:37:11.300
所以资源浪费了

926
0:37:11.300 --> 0:37:12.300
要不呢说

927
0:37:12.300 --> 0:37:14.300
这个API调用量很高

928
0:37:14.300 --> 0:37:16.300
但是同时我就只有两台GPU

929
0:37:16.300 --> 0:37:17.300
所以我这个支撑不起来

930
0:37:17.300 --> 0:37:19.300
用户里面又不爽

931
0:37:19.300 --> 0:37:20.300
怎么样有一种

932
0:37:20.300 --> 0:37:22.300
多快好省的一个方式

933
0:37:22.300 --> 0:37:23.300
让研究者们

934
0:37:23.300 --> 0:37:24.300
像达摩院的科学家们一样

935
0:37:24.300 --> 0:37:26.300
不需要担心说

936
0:37:26.300 --> 0:37:28.300
我要部署这个模型的时候

937
0:37:28.300 --> 0:37:30.300
背后的这些像弹性啊

938
0:37:30.300 --> 0:37:32.300
等等这个问题

939
0:37:32.300 --> 0:37:34.300
同时呢让用户不需要去担心说

940
0:37:34.300 --> 0:37:36.300
哎呀这个服务到底稳不稳定啊

941
0:37:36.300 --> 0:37:37.300
有那么一个平台

942
0:37:37.300 --> 0:37:38.300
会解决非常多的痛点

943
0:37:38.300 --> 0:37:39.300
而且这个最重要的是

944
0:37:39.300 --> 0:37:40.300
在应用上面

945
0:37:40.300 --> 0:37:41.300
所以第一个我们会关注

946
0:37:41.300 --> 0:37:42.300
在AI应用上面

947
0:37:42.300 --> 0:37:43.300
第二个呢就是

948
0:37:43.300 --> 0:37:45.300
我们会关注在哪些指标呢

949
0:37:45.300 --> 0:37:48.300
第一个就是这个开发者的效率

950
0:37:48.300 --> 0:37:49.300
开发者怎么样

951
0:37:49.300 --> 0:37:51.300
从自己的这个代码库

952
0:37:51.300 --> 0:37:52.300
能够非常迅速的

953
0:37:52.300 --> 0:37:54.300
在比如说理想化的情况下面

954
0:37:54.300 --> 0:37:56.300
也在一分钟就能够拉起一个服务

955
0:37:56.300 --> 0:37:57.300
然后他就不需要担心

956
0:37:57.300 --> 0:37:58.300
这个服务的弹性了

957
0:37:58.300 --> 0:38:00.300
第二个我们会看就是

958
0:38:00.300 --> 0:38:03.300
这个核心的一些系统性能的指标

959
0:38:03.300 --> 0:38:04.300
就比如说像

960
0:38:04.300 --> 0:38:07.300
这个我们能够在有限的资源里面

961
0:38:07.300 --> 0:38:08.300
能够帮助用户

962
0:38:08.300 --> 0:38:09.300
拉起来多少个服务

963
0:38:09.300 --> 0:38:11.300
以及就是说多少体量的服务啊等等

964
0:38:11.300 --> 0:38:14.300
就是今天我们看到的最大的问题

965
0:38:14.300 --> 0:38:19.300
是应用和就供给和需求之间的矛盾

966
0:38:19.300 --> 0:38:20.300
所以我们主要会做

967
0:38:20.300 --> 0:38:23.300
把这个供给和需求之间的这个距离拉近

968
0:38:23.300 --> 0:38:24.300
这样的一个点

969
0:38:24.300 --> 0:38:25.300
基础大模型呢

970
0:38:25.300 --> 0:38:27.300
我们就现实的来说

971
0:38:27.300 --> 0:38:28.300
我们就不做了

972
0:38:28.300 --> 0:38:29.300
因为这块

973
0:38:29.300 --> 0:38:31.300
第一个现实来说比较烧钱

974
0:38:31.300 --> 0:38:33.300
第二个我们也出大公司嘛

975
0:38:33.300 --> 0:38:34.300
总要赌一把

976
0:38:34.300 --> 0:38:37.300
就是我们相信说开源的这个领域

977
0:38:37.300 --> 0:38:39.300
会有非常多的基础模型出来

978
0:38:39.300 --> 0:38:42.300
然后这个并不是企业将来需求上的

979
0:38:42.300 --> 0:38:44.300
一个核心的问题

980
0:38:44.300 --> 0:38:48.300
所以说那个有新闻说你出来离开阿里

981
0:38:48.300 --> 0:38:51.300
大家说你就是来做大模型的

982
0:38:51.300 --> 0:38:53.300
其实并不是做大模型

983
0:38:53.300 --> 0:38:56.300
但是呢不管是给你的客户是想做大模型

984
0:38:56.300 --> 0:38:58.300
还是客户想做小模型

985
0:38:58.300 --> 0:39:02.300
你是想给他们提供一些这些平台的服务

986
0:39:02.300 --> 0:39:05.300
使得他们能够再做模型

987
0:39:05.300 --> 0:39:06.300
对是的

988
0:39:06.300 --> 0:39:08.300
然后呢我们也比较早期嘛

989
0:39:08.300 --> 0:39:10.300
所以说这个也希望就是非常迅速的

990
0:39:10.300 --> 0:39:12.300
在比如说才三个月半年之后

991
0:39:12.300 --> 0:39:14.300
能够给大家这个展示更多的

992
0:39:14.300 --> 0:39:17.300
就更有意思的实际能用的东西

993
0:39:17.300 --> 0:39:19.300
对非常期待

994
0:39:19.300 --> 0:39:21.300
有机会那个翻场再来

995
0:39:21.300 --> 0:39:23.300
我们科技早知道聊一聊

996
0:39:23.300 --> 0:39:24.300
说起这个

997
0:39:24.300 --> 0:39:27.300
我还跟那个Reno的前两天跟Reno的说

998
0:39:27.300 --> 0:39:30.300
要翻场来我们的节目聊一聊

999
0:39:30.300 --> 0:39:31.300
他也答应了

1000
0:39:31.300 --> 0:39:33.300
那我提一个问题啊

1001
0:39:33.300 --> 0:39:36.300
因为你在这方面肯定思考的很多

1002
0:39:36.300 --> 0:39:38.300
关于这方面平台的服务

1003
0:39:38.300 --> 0:39:39.300
对吧

1004
0:39:39.300 --> 0:39:40.300
就是就像你说的

1005
0:39:40.300 --> 0:39:42.300
要考虑作为一个数据工程师

1006
0:39:42.300 --> 0:39:45.300
我是有很多事情要去很麻烦的事情

1007
0:39:45.300 --> 0:39:47.300
然后你能够把它解决

1008
0:39:47.300 --> 0:39:50.300
这些话其实大家都已经知道了很多年了

1009
0:39:50.300 --> 0:39:54.300
包括谷歌在2014年15年的时候

1010
0:39:54.300 --> 0:39:55.300
发表了一篇paper

1011
0:39:55.300 --> 0:39:58.300
大概就是讲的是那个technical debts

1012
0:39:58.300 --> 0:40:03.300
那技术负债是在AI这个领域当中

1013
0:40:03.300 --> 0:40:05.300
是有多大对吧

1014
0:40:05.300 --> 0:40:09.300
基本上好像是恨不得90%以上的

1015
0:40:09.300 --> 0:40:12.300
其实都是在模型之外的事情

1016
0:40:12.300 --> 0:40:13.300
对吧

1017
0:40:13.300 --> 0:40:15.300
要去做这些不管pipeline也好

1018
0:40:15.300 --> 0:40:16.300
serving也好

1019
0:40:16.300 --> 0:40:18.300
一堆的事情要去做

1020
0:40:18.300 --> 0:40:19.300
然后这个问题

1021
0:40:19.300 --> 0:40:21.300
其实大家已经了解了很多年了

1022
0:40:21.300 --> 0:40:22.300
对吧

1023
0:40:22.300 --> 0:40:24.300
我也能够真真实实的看到

1024
0:40:24.300 --> 0:40:26.300
其实我是想问

1025
0:40:26.300 --> 0:40:28.300
为什么这个问题

1026
0:40:28.300 --> 0:40:29.300
大家一直在说

1027
0:40:29.300 --> 0:40:32.300
不断的也有出种公司在做

1028
0:40:32.300 --> 0:40:33.300
但为什么这个问题

1029
0:40:33.300 --> 0:40:37.300
好像没有什么得到很大的好转

1030
0:40:37.300 --> 0:40:38.300
对

1031
0:40:38.300 --> 0:40:40.300
我觉得这个可能一定程度上

1032
0:40:40.300 --> 0:40:43.300
要叫归功于也好

1033
0:40:43.300 --> 0:40:44.300
或者叫归罪于也好

1034
0:40:44.300 --> 0:40:46.300
就是它应该归功于AI这一块的

1035
0:40:46.300 --> 0:40:47.300
迅速的一个发展

1036
0:40:47.300 --> 0:40:48.300
就是它发展很快

1037
0:40:48.300 --> 0:40:50.300
就导致的是

1038
0:40:50.300 --> 0:40:52.300
它的各种各样的计算需求

1039
0:40:52.300 --> 0:40:55.300
跟计算的模态都在发生变化

1040
0:40:55.300 --> 0:40:57.300
所以就包括就是

1041
0:40:57.300 --> 0:40:58.300
我经常就是说是

1042
0:40:58.300 --> 0:40:59.300
今天半开玩笑的时候说

1043
0:40:59.300 --> 0:41:00.300
再也不想聊框架了

1044
0:41:00.300 --> 0:41:01.300
对吧

1045
0:41:01.300 --> 0:41:03.300
但是如果大家看说AI框架这一块

1046
0:41:03.300 --> 0:41:06.300
也是前面变迁的非常非常的快

1047
0:41:06.300 --> 0:41:07.300
这块我自己呢

1048
0:41:07.300 --> 0:41:09.300
对于这个问题经历了三个阶段

1049
0:41:09.300 --> 0:41:11.300
就最开始一个阶段是梦想的阶段

1050
0:41:11.300 --> 0:41:12.300
第二个阶段是彷徨的阶段

1051
0:41:12.300 --> 0:41:14.300
然后今天是一个接受的阶段

1052
0:41:14.300 --> 0:41:15.300
怎么说呢

1053
0:41:15.300 --> 0:41:16.300
梦想的阶段是这样的

1054
0:41:16.300 --> 0:41:18.300
我非常羡慕

1055
0:41:18.300 --> 0:41:20.300
数据库和它数据这个领域

1056
0:41:20.300 --> 0:41:22.300
有一个标准叫做SQL

1057
0:41:22.300 --> 0:41:23.300
大家发现说

1058
0:41:23.300 --> 0:41:24.300
哎呀我觉得这个数据

1059
0:41:24.300 --> 0:41:26.300
都可以把它作为一个二维的表格

1060
0:41:26.300 --> 0:41:27.300
然后呢做的东西呢

1061
0:41:27.300 --> 0:41:28.300
好像都是说

1062
0:41:28.300 --> 0:41:31.300
select join filter

1063
0:41:31.300 --> 0:41:33.300
这些标准的SQL操作

1064
0:41:33.300 --> 0:41:35.300
SQL我觉得从1970年

1065
0:41:35.300 --> 0:41:36.300
如果记得对的话

1066
0:41:36.300 --> 0:41:37.300
1970年出现的时候

1067
0:41:37.300 --> 0:41:39.300
这是一个非常跨时代的一个发明

1068
0:41:39.300 --> 0:41:40.300
一定程度上

1069
0:41:40.300 --> 0:41:42.300
这个它的设计者非常的牛

1070
0:41:42.300 --> 0:41:43.300
同时呢当然就是说

1071
0:41:43.300 --> 0:41:44.300
数据的领域的

1072
0:41:44.300 --> 0:41:46.300
它的使用模式也相对比较清晰

1073
0:41:46.300 --> 0:41:48.300
AI这个领域没有那么的

1074
0:41:48.300 --> 0:41:50.300
没有那么的幸运

1075
0:41:50.300 --> 0:41:51.300
但一定程度上也说

1076
0:41:51.300 --> 0:41:52.300
就是也是因为AI

1077
0:41:52.300 --> 0:41:54.300
比较往百花齐放一些

1078
0:41:54.300 --> 0:41:56.300
所以我们梦想着有这样的一个标准

1079
0:41:56.300 --> 0:41:57.300
2017年的时候呢

1080
0:41:57.300 --> 0:41:58.300
我们在Facebook

1081
0:41:58.300 --> 0:41:59.300
我们就做了一个

1082
0:41:59.300 --> 0:42:01.300
开放的神经网络的一个标准

1083
0:42:01.300 --> 0:42:02.300
叫做ONNX

1084
0:42:02.300 --> 0:42:04.300
其实一定程度上是希望说

1085
0:42:04.300 --> 0:42:06.300
假如大家最后

1086
0:42:06.300 --> 0:42:08.300
所有的模型都产生到

1087
0:42:08.300 --> 0:42:09.300
都生产出来一个

1088
0:42:09.300 --> 0:42:11.300
ONNX的一个标准模型

1089
0:42:11.300 --> 0:42:12.300
然后后端呢

1090
0:42:12.300 --> 0:42:13.300
各种硬件厂商啊

1091
0:42:13.300 --> 0:42:14.300
平台厂商啊

1092
0:42:14.300 --> 0:42:16.300
拿着这个ONNX模型

1093
0:42:16.300 --> 0:42:17.300
就可以去部署了

1094
0:42:17.300 --> 0:42:18.300
那将是一个多么美妙的事情

1095
0:42:18.300 --> 0:42:20.300
就ONNX有可能会成为

1096
0:42:20.300 --> 0:42:22.300
AI领域的SQL

1097
0:42:22.300 --> 0:42:24.300
然后呢我们就

1098
0:42:24.300 --> 0:42:26.300
我们也看到了很多

1099
0:42:26.300 --> 0:42:28.300
大家庞庞不前的事情

1100
0:42:28.300 --> 0:42:29.300
ONNX在一定程度上

1101
0:42:29.300 --> 0:42:31.300
帮助了就是非常

1102
0:42:31.300 --> 0:42:32.300
好的帮助了

1103
0:42:32.300 --> 0:42:34.300
软硬件协同设计这块

1104
0:42:34.300 --> 0:42:35.300
因为大家以前的时候呢

1105
0:42:35.300 --> 0:42:37.300
要对接各种各样乱七八糟的框架

1106
0:42:37.300 --> 0:42:38.300
现在发现说

1107
0:42:38.300 --> 0:42:40.300
如果一个硬件厂商出来

1108
0:42:40.300 --> 0:42:42.300
我想让计算机师觉得

1109
0:42:42.300 --> 0:42:43.300
这块的领域的应用

1110
0:42:43.300 --> 0:42:44.300
和我能更好的对接

1111
0:42:44.300 --> 0:42:45.300
那我就去看说

1112
0:42:45.300 --> 0:42:47.300
这个领域的ONNX模型

1113
0:42:47.300 --> 0:42:48.300
他就学的东西

1114
0:42:48.300 --> 0:42:50.300
学的这个面就变窄了

1115
0:42:50.300 --> 0:42:52.300
这个使得就是说

1116
0:42:52.300 --> 0:42:53.300
是软件协同设计会变得更好

1117
0:42:53.300 --> 0:42:54.300
今天的话

1118
0:42:54.300 --> 0:42:55.300
微软也还在非常努力的

1119
0:42:55.300 --> 0:42:57.300
在推ONNX和ONNX Runtime

1120
0:42:57.300 --> 0:42:58.300
这样的标准

1121
0:42:58.300 --> 0:42:59.300
但是呢

1122
0:42:59.300 --> 0:43:01.300
庞庞的一点是说

1123
0:43:01.300 --> 0:43:02.300
ONNX也有他自己的局限性

1124
0:43:02.300 --> 0:43:04.300
就是今天AI还没有到

1125
0:43:04.300 --> 0:43:06.300
一个完全标准的阶段

1126
0:43:06.300 --> 0:43:09.300
它不光光是一个AI的模型

1127
0:43:09.300 --> 0:43:10.300
咱们举个例子

1128
0:43:10.300 --> 0:43:11.300
比如说最近比较流行的

1129
0:43:11.300 --> 0:43:12.300
Langchain

1130
0:43:12.300 --> 0:43:14.300
这个开源的框架

1131
0:43:14.300 --> 0:43:15.300
他在做问答的时候

1132
0:43:15.300 --> 0:43:16.300
他说你看

1133
0:43:16.300 --> 0:43:17.300
首先呢

1134
0:43:17.300 --> 0:43:18.300
一个问题过来了

1135
0:43:18.300 --> 0:43:20.300
就CHPT出来以后

1136
0:43:20.300 --> 0:43:21.300
Langchain就

1137
0:43:21.300 --> 0:43:23.300
很多人在用Langchain

1138
0:43:23.300 --> 0:43:24.300
对

1139
0:43:24.300 --> 0:43:25.300
很有意思的应用

1140
0:43:25.300 --> 0:43:26.300
他说你看

1141
0:43:26.300 --> 0:43:27.300
CHPT他只能够说

1142
0:43:27.300 --> 0:43:28.300
模型里面学了什么东西

1143
0:43:28.300 --> 0:43:30.300
他就只能够靠这个模型

1144
0:43:30.300 --> 0:43:31.300
这个一招先了

1145
0:43:31.300 --> 0:43:32.300
Langchain说你看我呢

1146
0:43:32.300 --> 0:43:33.300
可以首先

1147
0:43:33.300 --> 0:43:35.300
我去做一个传统搜索

1148
0:43:35.300 --> 0:43:36.300
搜索完了之后呢

1149
0:43:36.300 --> 0:43:37.300
我把搜索回来的结果

1150
0:43:37.300 --> 0:43:39.300
再放到prompt里面

1151
0:43:39.300 --> 0:43:41.300
然后有点像来增强

1152
0:43:41.300 --> 0:43:43.300
我的这个问题里面的

1153
0:43:43.300 --> 0:43:45.300
这个更加新鲜的内容

1154
0:43:45.300 --> 0:43:46.300
或者更加相关的内容

1155
0:43:46.300 --> 0:43:47.300
然后让这个模型

1156
0:43:47.300 --> 0:43:49.300
能够获取更多的输入

1157
0:43:49.300 --> 0:43:50.300
那这样的话

1158
0:43:50.300 --> 0:43:52.300
这个已经远远超出了

1159
0:43:52.300 --> 0:43:53.300
我们传统的说

1160
0:43:53.300 --> 0:43:54.300
一个AI模型的

1161
0:43:54.300 --> 0:43:55.300
那么一个概念

1162
0:43:55.300 --> 0:43:57.300
因为它至少至少至少

1163
0:43:57.300 --> 0:43:59.300
它得拉个相当数据库

1164
0:43:59.300 --> 0:44:00.300
所以呢

1165
0:44:00.300 --> 0:44:01.300
就是AI发展的很快

1166
0:44:01.300 --> 0:44:03.300
我们就没法像数据

1167
0:44:03.300 --> 0:44:05.300
像SQL那么的做标准化

1168
0:44:05.300 --> 0:44:06.300
这是我们前面几年

1169
0:44:06.300 --> 0:44:08.300
就我自己的一个观察

1170
0:44:08.300 --> 0:44:09.300
于是呢今天我觉得

1171
0:44:09.300 --> 0:44:11.300
我接受了那么一个现状

1172
0:44:11.300 --> 0:44:12.300
就是说AI今天

1173
0:44:12.300 --> 0:44:14.300
它更像应用

1174
0:44:14.300 --> 0:44:16.300
而更不像数据库

1175
0:44:16.300 --> 0:44:18.300
更像应用的一个原因是说

1176
0:44:18.300 --> 0:44:20.300
比如说咱们经常会听见

1177
0:44:20.300 --> 0:44:22.300
比如像微服务啊等等这种

1178
0:44:22.300 --> 0:44:24.300
咱们写应用的知道说

1179
0:44:24.300 --> 0:44:25.300
基本上没有一个标准的

1180
0:44:25.300 --> 0:44:26.300
像SQL一样的标准

1181
0:44:26.300 --> 0:44:28.300
说你看打车和购物

1182
0:44:28.300 --> 0:44:29.300
都是一样的这样一个标准

1183
0:44:29.300 --> 0:44:30.300
很少有

1184
0:44:30.300 --> 0:44:31.300
AI和这个差不多

1185
0:44:31.300 --> 0:44:33.300
AI离应用离得很近

1186
0:44:33.300 --> 0:44:35.300
那么这个时候的话呢

1187
0:44:35.300 --> 0:44:36.300
我们就会发现说

1188
0:44:36.300 --> 0:44:39.300
比如说像呃原生k8s对吧

1189
0:44:39.300 --> 0:44:41.300
像这个容器啊等等

1190
0:44:41.300 --> 0:44:42.300
这些技术

1191
0:44:42.300 --> 0:44:43.300
变得更加合适

1192
0:44:43.300 --> 0:44:44.300
更加适用了

1193
0:44:44.300 --> 0:44:45.300
所以呢

1194
0:44:45.300 --> 0:44:46.300
那么这个时候的话

1195
0:44:46.300 --> 0:44:48.300
这个怎么样把AI里面的一些

1196
0:44:48.300 --> 0:44:49.300
它很特殊的地方

1197
0:44:49.300 --> 0:44:51.300
比如像一口计算啊

1198
0:44:51.300 --> 0:44:53.300
一个模型要切分了之后

1199
0:44:53.300 --> 0:44:54.300
做分布式推理啊

1200
0:44:54.300 --> 0:44:57.300
这些能力和我们在这个应用的

1201
0:44:57.300 --> 0:44:59.300
原生的框架的这块

1202
0:44:59.300 --> 0:45:00.300
包括像k8s

1203
0:45:00.300 --> 0:45:01.300
包括像容器等等

1204
0:45:01.300 --> 0:45:02.300
这些技术结合起来

1205
0:45:02.300 --> 0:45:04.300
能够给用户提供一个

1206
0:45:04.300 --> 0:45:06.300
它也可以各种定制化

1207
0:45:06.300 --> 0:45:09.300
但是我能一步一步的帮他解掉

1208
0:45:09.300 --> 0:45:11.300
弹性稳定性免运维

1209
0:45:11.300 --> 0:45:12.300
等等这些问题

1210
0:45:12.300 --> 0:45:14.300
大家来寻找一个增量价值

1211
0:45:14.300 --> 0:45:16.300
我觉得这个是我今天

1212
0:45:16.300 --> 0:45:18.300
在前面有梦想彷徨过

1213
0:45:18.300 --> 0:45:20.300
然后接受这个现状之后

1214
0:45:20.300 --> 0:45:21.300
出来的一个结论

1215
0:45:21.300 --> 0:45:23.300
就是说我们的价值在哪里

1216
0:45:23.300 --> 0:45:25.300
对这个我觉得就像你说的

1217
0:45:25.300 --> 0:45:29.300
没有一个很好的standard的标准

1218
0:45:29.300 --> 0:45:33.300
使得这一方面突破有困难一点

1219
0:45:33.300 --> 0:45:34.300
这完全能理解

1220
0:45:34.300 --> 0:45:37.300
但是我稍微push back一下

1221
0:45:37.300 --> 0:45:39.300
因为包括你刚才说的容器

1222
0:45:39.300 --> 0:45:42.300
kubernetes这些技术都不是新的

1223
0:45:42.300 --> 0:45:44.300
都不是最近两年三年的东西

1224
0:45:44.300 --> 0:45:45.300
都已经很多年了

1225
0:45:45.300 --> 0:45:48.300
然后AI没有这么一个很舒服的

1226
0:45:48.300 --> 0:45:51.300
就能够去把它给deploy起来的

1227
0:45:51.300 --> 0:45:54.300
系统的痛点已经满常了

1228
0:45:54.300 --> 0:45:56.300
有什么新的东西

1229
0:45:56.300 --> 0:45:58.300
让你觉得我要现在做这件事情

1230
0:45:58.300 --> 0:46:00.300
或者说为什么以前

1231
0:46:00.300 --> 0:46:02.300
大家一直没做起来

1232
0:46:02.300 --> 0:46:04.300
你的观察是什么

1233
0:46:04.300 --> 0:46:05.300
我觉得以前的话

1234
0:46:05.300 --> 0:46:07.300
大家都还是在点状的做事情

1235
0:46:07.300 --> 0:46:08.300
比如像AI这一块的话

1236
0:46:08.300 --> 0:46:09.300
我们会看见说

1237
0:46:09.300 --> 0:46:12.300
比如说有今天AI的整个软件站

1238
0:46:12.300 --> 0:46:13.300
也分层分得比较多了

1239
0:46:13.300 --> 0:46:15.300
有上层的分布式训练的框架

1240
0:46:15.300 --> 0:46:16.300
有下层的

1241
0:46:16.300 --> 0:46:19.300
比如像AI编译器以及软件协同设计的

1242
0:46:19.300 --> 0:46:20.300
这样一些框架

1243
0:46:20.300 --> 0:46:21.300
就是举个例子

1244
0:46:21.300 --> 0:46:24.300
比如说像我们最近看到比较多的

1245
0:46:24.300 --> 0:46:26.300
比如像TBM这样的一个编译器

1246
0:46:26.300 --> 0:46:28.300
像这个Chris Lander出来做的

1247
0:46:28.300 --> 0:46:29.300
modular AI等等

1248
0:46:29.300 --> 0:46:31.300
但是大家基本上都还在

1249
0:46:31.300 --> 0:46:33.300
解点状的问题

1250
0:46:33.300 --> 0:46:35.300
但是我觉得今天AI最需要的

1251
0:46:35.300 --> 0:46:38.300
其实是一个能够把各种组件

1252
0:46:38.300 --> 0:46:40.300
各种component结合在一起的

1253
0:46:40.300 --> 0:46:43.300
无论是数据库还是容器

1254
0:46:43.300 --> 0:46:46.300
还是在我们的这个eagle的GPU机器

1255
0:46:46.300 --> 0:46:48.300
包括可能出来的新的一些

1256
0:46:48.300 --> 0:46:50.300
其他的eagle的硬件上面

1257
0:46:50.300 --> 0:46:52.300
能够来运行的软件站

1258
0:46:52.300 --> 0:46:54.300
把这些东西真的有机的结合起来

1259
0:46:54.300 --> 0:46:57.300
这事听起来没有那么的高大上

1260
0:46:57.300 --> 0:46:59.300
不是一个就是说是造一只火箭的一个事

1261
0:46:59.300 --> 0:47:03.300
但是这个底盘还是有非常多的

1262
0:47:03.300 --> 0:47:05.300
人力成本投在里头

1263
0:47:05.300 --> 0:47:07.300
我们希望把像达摩院等等

1264
0:47:07.300 --> 0:47:10.300
这样的一些科学家们和像淘宝等等

1265
0:47:10.300 --> 0:47:13.300
这样的一个就是应用的团队们

1266
0:47:13.300 --> 0:47:15.300
不需要去担心这种

1267
0:47:15.300 --> 0:47:18.300
把各种各样的系统组件结合在一起

1268
0:47:18.300 --> 0:47:20.300
然后才能开始做他想做的事的

1269
0:47:20.300 --> 0:47:22.300
那么一种纠结

1270
0:47:22.300 --> 0:47:25.300
其实你也以前跟我聊到过

1271
0:47:25.300 --> 0:47:29.300
关于对于PyTorch的一些感悟

1272
0:47:29.300 --> 0:47:31.300
或者怎么样

1273
0:47:31.300 --> 0:47:33.300
就是说你这么多年下来

1274
0:47:33.300 --> 0:47:36.300
如果说有一点或者两点的感悟

1275
0:47:36.300 --> 0:47:38.300
能不能跟我们分享一下

1276
0:47:38.300 --> 0:47:40.300
对就说一点感悟吧

1277
0:47:40.300 --> 0:47:42.300
我觉得PyTorch的这件事情

1278
0:47:42.300 --> 0:47:44.300
非常强烈的体现出来一个结论

1279
0:47:44.300 --> 0:47:46.300
就是用户为王

1280
0:47:46.300 --> 0:47:49.300
而且满怀尊敬的说一句话

1281
0:47:49.300 --> 0:47:52.300
用户永远都是又懒又笨的

1282
0:47:52.300 --> 0:47:54.300
但是这是恰恰我们

1283
0:47:54.300 --> 0:47:56.300
就是说是给用户提供价值的点

1284
0:47:56.300 --> 0:47:57.300
之前的时候

1285
0:47:57.300 --> 0:47:59.300
大家经常会争论两个事情

1286
0:47:59.300 --> 0:48:01.300
就是TensorFlow跟PyTorch

1287
0:48:01.300 --> 0:48:03.300
这两个的优劣是怎么样的

1288
0:48:03.300 --> 0:48:05.300
然后客观的评价的话

1289
0:48:05.300 --> 0:48:08.300
TensorFlow在系统上做的是非常漂亮的

1290
0:48:08.300 --> 0:48:11.300
原生的分布式的计算

1291
0:48:11.300 --> 0:48:13.300
这个分布式的抽象等等

1292
0:48:13.300 --> 0:48:16.300
然后非常高效的系统的实现等等

1293
0:48:16.300 --> 0:48:19.300
PyTorch尤其是在PyTorch 1.0之前

1294
0:48:19.300 --> 0:48:20.300
大家如果去看的话

1295
0:48:20.300 --> 0:48:22.300
PyTorch的后端代码

1296
0:48:22.300 --> 0:48:24.300
是写的非常的糟糕的

1297
0:48:24.300 --> 0:48:26.300
就不客气的说一句话的话

1298
0:48:26.300 --> 0:48:29.300
比如说它底层依赖于一个

1299
0:48:29.300 --> 0:48:31.300
叫做A10的那么一个库

1300
0:48:31.300 --> 0:48:33.300
那么在重构之前的话

1301
0:48:33.300 --> 0:48:36.300
A10完全是以纯C来写

1302
0:48:36.300 --> 0:48:38.300
然后有各种各样的C语言的宏啊等等

1303
0:48:38.300 --> 0:48:40.300
都是以一种非常hack的方式

1304
0:48:40.300 --> 0:48:42.300
非常下写的方式来做的

1305
0:48:42.300 --> 0:48:44.300
就是比较难maintain

1306
0:48:44.300 --> 0:48:45.300
比较难维护

1307
0:48:45.300 --> 0:48:47.300
所以说我猜一句

1308
0:48:47.300 --> 0:48:49.300
你对你自己领导过的一个项目

1309
0:48:49.300 --> 0:48:51.300
也是有一定的批判性的

1310
0:48:51.300 --> 0:48:52.300
对

1311
0:48:52.300 --> 0:48:54.300
这个事情就是说在Facebook里面的话

1312
0:48:54.300 --> 0:48:56.300
就是说我们的纽约的研究院

1313
0:48:56.300 --> 0:48:58.300
Sumith Chintala所带的研究院

1314
0:48:58.300 --> 0:49:00.300
他们负责前端的东西对吧

1315
0:49:00.300 --> 0:49:02.300
然后我们负责就是后端

1316
0:49:02.300 --> 0:49:03.300
以及就是说是说

1317
0:49:03.300 --> 0:49:05.300
尤其是产品知识啊等等

1318
0:49:05.300 --> 0:49:06.300
所以当时的话

1319
0:49:06.300 --> 0:49:07.300
就是说客观的来说

1320
0:49:07.300 --> 0:49:09.300
我还是稍微有一点站在TensorFlow派的

1321
0:49:09.300 --> 0:49:10.300
我就觉得说哇

1322
0:49:10.300 --> 0:49:11.300
这个系统做那么烂

1323
0:49:11.300 --> 0:49:12.300
可以吗

1324
0:49:12.300 --> 0:49:13.300
有这样的一个想法

1325
0:49:13.300 --> 0:49:14.300
对吧

1326
0:49:14.300 --> 0:49:15.300
所以在谷歌的话

1327
0:49:15.300 --> 0:49:17.300
我觉得TensorFlow更加强烈的

1328
0:49:17.300 --> 0:49:18.300
带有这样一个观点

1329
0:49:18.300 --> 0:49:20.300
就是说系统做的牛才是真的牛

1330
0:49:20.300 --> 0:49:22.300
然后在前面这几年当中

1331
0:49:22.300 --> 0:49:23.300
我们就会发现说

1332
0:49:23.300 --> 0:49:25.300
从用户的角度看吧

1333
0:49:25.300 --> 0:49:27.300
用户说TensorFlow我要学它

1334
0:49:27.300 --> 0:49:29.300
我还得专门再学一套语言

1335
0:49:29.300 --> 0:49:30.300
叫做TensorFlow

1336
0:49:30.300 --> 0:49:31.300
这个太麻烦了

1337
0:49:31.300 --> 0:49:32.300
Pytorch一看说

1338
0:49:32.300 --> 0:49:34.300
哎呦用起来还挺舒服的

1339
0:49:34.300 --> 0:49:35.300
像南派一样

1340
0:49:35.300 --> 0:49:36.300
对吧

1341
0:49:36.300 --> 0:49:37.300
这个我都用的挺舒服

1342
0:49:37.300 --> 0:49:38.300
于是用户觉得说

1343
0:49:38.300 --> 0:49:40.300
哎呀跑的慢点就慢点吧

1344
0:49:40.300 --> 0:49:42.300
我跟苏米斯一直是好朋友嘛

1345
0:49:42.300 --> 0:49:44.300
我上那个今年早些时候

1346
0:49:44.300 --> 0:49:45.300
跟苏米斯在

1347
0:49:45.300 --> 0:49:47.300
在北美遇到的时候

1348
0:49:47.300 --> 0:49:49.300
我们还聊起来这个事

1349
0:49:49.300 --> 0:49:50.300
然后苏米斯说

1350
0:49:50.300 --> 0:49:51.300
对啊

1351
0:49:51.300 --> 0:49:53.300
现在为止Pytorch都不是最快的框架

1352
0:49:53.300 --> 0:49:56.300
因为他说我这个为了保证用户的灵活性

1353
0:49:56.300 --> 0:49:57.300
肯定得损失一点

1354
0:49:57.300 --> 0:49:59.300
所以呢比其他人慢

1355
0:49:59.300 --> 0:50:00.300
但是他说慢吧

1356
0:50:00.300 --> 0:50:01.300
没关系的

1357
0:50:01.300 --> 0:50:03.300
用户希望他舒服

1358
0:50:03.300 --> 0:50:04.300
他舒服了之后

1359
0:50:04.300 --> 0:50:07.300
我都我多花个10%的机器成本

1360
0:50:07.300 --> 0:50:10.300
从我和我自己就是说是浪费一堆时间来看

1361
0:50:10.300 --> 0:50:13.300
他说我宁可多花点机器成本算了

1362
0:50:13.300 --> 0:50:16.300
然后用户的效率的提升

1363
0:50:16.300 --> 0:50:17.300
体感的提升

1364
0:50:17.300 --> 0:50:19.300
这一块会带来更大的价值

1365
0:50:19.300 --> 0:50:21.300
这是为什么就是我最开始开玩笑

1366
0:50:21.300 --> 0:50:22.300
说用户又懒又笨吗

1367
0:50:22.300 --> 0:50:23.300
对吧

1368
0:50:23.300 --> 0:50:25.300
我懒我不想学一个新的一个东西

1369
0:50:25.300 --> 0:50:26.300
但是这个时候的话

1370
0:50:26.300 --> 0:50:29.300
就我就希望说底层的系统能够帮我把这些问题给解了

1371
0:50:29.300 --> 0:50:31.300
尤其是让我用的更加的舒服

1372
0:50:31.300 --> 0:50:32.300
所以呢这块的话

1373
0:50:32.300 --> 0:50:34.300
我们看见说他都在前面几年呢

1374
0:50:34.300 --> 0:50:36.300
就是说这个不管幸运也好

1375
0:50:36.300 --> 0:50:37.300
不幸也好

1376
0:50:37.300 --> 0:50:41.300
就的确成为了一个大家不是那么喜欢的一个框架

1377
0:50:41.300 --> 0:50:42.300
就大家会瞻仰他

1378
0:50:42.300 --> 0:50:44.300
但是大家大家不用他拍脱

1379
0:50:44.300 --> 0:50:48.300
是的确用了很多半开玩笑的说一句话的话

1380
0:50:48.300 --> 0:50:50.300
今天我们讲碳中和拍脱

1381
0:50:50.300 --> 0:50:53.300
是在系统可能浪费了大量的碳排放

1382
0:50:53.300 --> 0:50:55.300
但是it's ok

1383
0:50:55.300 --> 0:50:57.300
这至少他能够帮助我们更加快的迭代

1384
0:50:57.300 --> 0:51:00.300
所以用微网我觉得是在技术的领域啊

1385
0:51:00.300 --> 0:51:01.300
在产品的领域啊

1386
0:51:01.300 --> 0:51:07.300
在商业领域都还是让我挺感觉感觉很深刻的一句话

1387
0:51:07.300 --> 0:51:10.300
其实这已经是你今天第二次提到了

1388
0:51:10.300 --> 0:51:13.300
关于那个一个用户的usability

1389
0:51:13.300 --> 0:51:17.300
或者说用户的使用的方便程度

1390
0:51:17.300 --> 0:51:20.300
其实比后面技术的优劣性

1391
0:51:20.300 --> 0:51:23.300
其实在很多时候是更重要的

1392
0:51:23.300 --> 0:51:28.300
其实在我们技术发展的软件发展的这么几十年来

1393
0:51:28.300 --> 0:51:30.300
这样的例子是比比皆是

1394
0:51:30.300 --> 0:51:33.300
包括我们最近几十年

1395
0:51:33.300 --> 0:51:37.300
基本上是统治了个人电脑的那个windows

1396
0:51:37.300 --> 0:51:39.300
其实90年代初的时候

1397
0:51:39.300 --> 0:51:44.300
视窗系统显然并不是从技术上来讲是最好的

1398
0:51:44.300 --> 0:51:46.300
我稍微有点倚老卖老

1399
0:51:46.300 --> 0:51:47.300
当年90年代初的时候

1400
0:51:47.300 --> 0:51:52.300
那个os2其实大家公认为是比windows要好

1401
0:51:52.300 --> 0:51:53.300
从技术上来讲

1402
0:51:53.300 --> 0:51:57.300
但是我估计现在人都听都没听到过os2

1403
0:51:57.300 --> 0:51:58.300
os2是IBM的对吧

1404
0:51:58.300 --> 0:52:02.300
这个的确有点就是属于上古的操作系统的这种感觉了

1405
0:52:02.300 --> 0:52:04.300
其实对多数人都是上古

1406
0:52:04.300 --> 0:52:06.300
我用了这个一个例子

1407
0:52:06.300 --> 0:52:10.300
只是说像你观察到的那个为什么PyTorch

1408
0:52:10.300 --> 0:52:13.300
最后能够在跟TensorFlow对比下面

1409
0:52:13.300 --> 0:52:16.300
能够站上一些上风

1410
0:52:16.300 --> 0:52:19.300
其实这个原因也是一样的

1411
0:52:19.300 --> 0:52:22.300
最终就是大家的应用性

1412
0:52:22.300 --> 0:52:24.300
其实是非常重要的

1413
0:52:24.300 --> 0:52:28.300
我们做技术的人经常会忽略到这一点

1414
0:52:28.300 --> 0:52:29.300
这是一个本性

1415
0:52:29.300 --> 0:52:31.300
可能是但是回过头去看

1416
0:52:31.300 --> 0:52:35.300
其实每一次不管是大的革命也好

1417
0:52:35.300 --> 0:52:38.300
或者说像你刚才提到的这些框架之争也好

1418
0:52:38.300 --> 0:52:39.300
对吧

1419
0:52:39.300 --> 0:52:43.300
TensorFlow跟PyTorch算是最近五六年

1420
0:52:43.300 --> 0:52:45.300
一个蛮大的一个框架之争吧

1421
0:52:45.300 --> 0:52:48.300
最终PyTorch能够胜出

1422
0:52:48.300 --> 0:52:52.300
确实是跟它的用途有很大的关系

1423
0:52:52.300 --> 0:52:55.300
我们今天讲了已经不少的框架

1424
0:52:55.300 --> 0:52:56.300
没去讲技术

1425
0:52:56.300 --> 0:52:59.300
但是讲了你的一个感悟吧

1426
0:52:59.300 --> 0:53:00.300
或者说感叹吧

1427
0:53:00.300 --> 0:53:04.300
然后我们今天没有聊太多的OpenAI本身的

1428
0:53:04.300 --> 0:53:06.300
或者说大模型本身的技术

1429
0:53:06.300 --> 0:53:09.300
因为我觉得最近很多人都已经聊了

1430
0:53:09.300 --> 0:53:12.300
但是上个礼拜你的老东家Facebook

1431
0:53:12.300 --> 0:53:14.300
Meta发表了一个SAM

1432
0:53:14.300 --> 0:53:16.300
Segment Anything Module

1433
0:53:16.300 --> 0:53:20.300
我不知道你能不能透露一些你的一些想法

1434
0:53:20.300 --> 0:53:23.300
因为我觉得它好像就是从你当年的

1435
0:53:23.300 --> 0:53:24.300
那一个实验室出来的

1436
0:53:24.300 --> 0:53:26.300
对的是SAM的话

1437
0:53:26.300 --> 0:53:29.300
就是Ross Gershick他们团队一块做的

1438
0:53:29.300 --> 0:53:32.300
Ross是基本上在前面几年吧

1439
0:53:32.300 --> 0:53:34.300
一直统治了计算机视觉圈

1440
0:53:34.300 --> 0:53:37.300
就是从最开始的图像识别到图像分割

1441
0:53:37.300 --> 0:53:38.300
等等各种各样的模型

1442
0:53:38.300 --> 0:53:40.300
深度学习出来之前

1443
0:53:40.300 --> 0:53:42.300
Ross做的各种各样的Object Detection

1444
0:53:42.300 --> 0:53:43.300
对吧

1445
0:53:43.300 --> 0:53:44.300
这个物理检测等等

1446
0:53:44.300 --> 0:53:46.300
都已经是属于整个领域

1447
0:53:46.300 --> 0:53:47.300
大家都比较熟了

1448
0:53:47.300 --> 0:53:50.300
Ross跟凯明一起在Facebook AI Research

1449
0:53:50.300 --> 0:53:52.300
也做的一直都很紧密

1450
0:53:52.300 --> 0:53:54.300
我觉得SAM出来之后

1451
0:53:54.300 --> 0:53:55.300
大家在感叹说

1452
0:53:55.300 --> 0:53:56.300
Computer Vision is Dead

1453
0:53:56.300 --> 0:53:58.300
计算机视觉走到头了

1454
0:53:58.300 --> 0:53:59.300
倒也不一定

1455
0:53:59.300 --> 0:54:01.300
我现在更多的从一个用户的角度

1456
0:54:01.300 --> 0:54:03.300
在觉得说像SAM

1457
0:54:03.300 --> 0:54:06.300
包括现在的各种Large Language Model等等

1458
0:54:06.300 --> 0:54:08.300
在做怎么样的一件事情呢

1459
0:54:08.300 --> 0:54:11.300
它使得我们以前需要花大功夫

1460
0:54:11.300 --> 0:54:14.300
去解决的一些基础问题

1461
0:54:14.300 --> 0:54:15.300
比如说计算机视觉里面

1462
0:54:15.300 --> 0:54:16.300
我说我得首先分割出来

1463
0:54:16.300 --> 0:54:17.300
这个物体是什么

1464
0:54:17.300 --> 0:54:19.300
然后完了之后才能做一些什么事

1465
0:54:19.300 --> 0:54:21.300
它把以前我们需要干的这些事

1466
0:54:21.300 --> 0:54:22.300
标准化了

1467
0:54:22.300 --> 0:54:23.300
举个例子

1468
0:54:23.300 --> 0:54:24.300
我前两天时间正好

1469
0:54:24.300 --> 0:54:27.300
给我们家小孩在更新护照

1470
0:54:27.300 --> 0:54:28.300
然后大家知道说

1471
0:54:28.300 --> 0:54:31.300
护照照片不是你得做一个白背景等等

1472
0:54:31.300 --> 0:54:34.300
我就直接拿不是SAM

1473
0:54:34.300 --> 0:54:36.300
但是是另外一个分割的一个模型

1474
0:54:36.300 --> 0:54:37.300
直接我拍一张照片

1475
0:54:37.300 --> 0:54:39.300
随便扔到分割模型里面

1476
0:54:39.300 --> 0:54:41.300
然后就让他给直接搞了

1477
0:54:41.300 --> 0:54:42.300
对我来说

1478
0:54:42.300 --> 0:54:45.300
写了大概一分钟的Python代码就搞定了

1479
0:54:45.300 --> 0:54:46.300
我觉得SAM啊

1480
0:54:46.300 --> 0:54:48.300
Large Language Model都让我们

1481
0:54:48.300 --> 0:54:51.300
在上面做应用变得更加简单了

1482
0:54:51.300 --> 0:54:53.300
所以呢我不太同意

1483
0:54:53.300 --> 0:54:54.300
最近媒体上说

1484
0:54:54.300 --> 0:54:56.300
就是说计算机视觉死了这样一个观点

1485
0:54:56.300 --> 0:54:57.300
我觉得倒是说

1486
0:54:57.300 --> 0:54:59.300
基于计算机视觉的应用

1487
0:54:59.300 --> 0:55:01.300
会变得更加的多样

1488
0:55:01.300 --> 0:55:02.300
SAM可能最有用的一个应用

1489
0:55:02.300 --> 0:55:04.300
就是在各种各样的内容生成上了

1490
0:55:04.300 --> 0:55:05.300
我觉得

1491
0:55:05.300 --> 0:55:06.300
是的是的

1492
0:55:06.300 --> 0:55:08.300
我看到至少在Twitter上面

1493
0:55:08.300 --> 0:55:10.300
NVIDIA的Jim Fan

1494
0:55:10.300 --> 0:55:11.300
他写了一句话

1495
0:55:11.300 --> 0:55:12.300
我读一下

1496
0:55:12.300 --> 0:55:14.300
他说因为这个SAM

1497
0:55:14.300 --> 0:55:16.300
他说I believe today is one of the

1498
0:55:16.300 --> 0:55:19.300
GPT-3 moments in computer vision

1499
0:55:19.300 --> 0:55:20.300
也就是说他觉得

1500
0:55:20.300 --> 0:55:24.300
计算机视觉的GPT的一个时刻到来了

1501
0:55:24.300 --> 0:55:27.300
你对他的评价你是怎么看的

1502
0:55:27.300 --> 0:55:29.300
我觉得也是这样的

1503
0:55:29.300 --> 0:55:31.300
SAM使得很多

1504
0:55:31.300 --> 0:55:33.300
我们要花很多功夫来做图像识别分割

1505
0:55:33.300 --> 0:55:34.300
等等的标准化的

1506
0:55:34.300 --> 0:55:36.300
标准化了之后的话

1507
0:55:36.300 --> 0:55:39.300
像是GPT使得我们今天的对话

1508
0:55:39.300 --> 0:55:41.300
能够到的非常智能的程度一样

1509
0:55:41.300 --> 0:55:42.300
对于图像的理解

1510
0:55:42.300 --> 0:55:44.300
它也是一个巨大的一个进步

1511
0:55:44.300 --> 0:55:45.300
一个是理解文字

1512
0:55:45.300 --> 0:55:46.300
对吧

1513
0:55:46.300 --> 0:55:47.300
理解你的文字

1514
0:55:47.300 --> 0:55:49.300
能够去做一些推理

1515
0:55:49.300 --> 0:55:51.300
一个是理解一个图

1516
0:55:51.300 --> 0:55:53.300
使得你能够做切割也好

1517
0:55:53.300 --> 0:55:56.300
要做任何更多的value add的事情

1518
0:55:56.300 --> 0:55:58.300
就相对来讲就容易的多

1519
0:55:58.300 --> 0:55:59.300
对吧

1520
0:55:59.300 --> 0:56:00.300
对

1521
0:56:00.300 --> 0:56:01.300
咱们拿比如说一些内容生成

1522
0:56:01.300 --> 0:56:03.300
就比如像电影等等举例子

1523
0:56:03.300 --> 0:56:04.300
以前的时候

1524
0:56:04.300 --> 0:56:06.300
我们说我们要做一个虚拟背景

1525
0:56:06.300 --> 0:56:08.300
我们就需要搞一个绿幕等等的

1526
0:56:08.300 --> 0:56:09.300
现在大家一般而言

1527
0:56:09.300 --> 0:56:11.300
觉得说绿幕已经比较不太需要了

1528
0:56:11.300 --> 0:56:13.300
但是我还需要一个纯色的背景

1529
0:56:13.300 --> 0:56:15.300
比如像zoom

1530
0:56:15.300 --> 0:56:16.300
zoom大家会知道说

1531
0:56:16.300 --> 0:56:18.300
如果说要一个比较好的一个背景分割的话

1532
0:56:18.300 --> 0:56:21.300
你可以在后面放一个纯色背景

1533
0:56:21.300 --> 0:56:23.300
但是SAM出来了

1534
0:56:23.300 --> 0:56:25.300
我觉得说非常有可能的是将来

1535
0:56:25.300 --> 0:56:28.300
这些我们需要来搞得很麻烦的事

1536
0:56:28.300 --> 0:56:29.300
就都不需要了

1537
0:56:29.300 --> 0:56:31.300
任何一个照片过来

1538
0:56:31.300 --> 0:56:32.300
我都可以给它很简单的

1539
0:56:32.300 --> 0:56:34.300
把各种各样的物体都给切分好

1540
0:56:34.300 --> 0:56:36.300
那么这样的话

1541
0:56:36.300 --> 0:56:37.300
比如说我们做CG

1542
0:56:37.300 --> 0:56:39.300
我们做混合现实等等

1543
0:56:39.300 --> 0:56:40.300
变得越来越容易了

1544
0:56:40.300 --> 0:56:42.300
当然不知道Meta还做不做元宇宙的

1545
0:56:42.300 --> 0:56:44.300
但是我觉得这些核心基础

1546
0:56:44.300 --> 0:56:47.300
让我们离元宇宙更近了一步

1547
0:56:47.300 --> 0:56:48.300
对

1548
0:56:48.300 --> 0:56:49.300
从Facebook的角度来讲

1549
0:56:49.300 --> 0:56:53.300
他希望是能够跟元宇宙多少有些契合度

1550
0:56:53.300 --> 0:56:55.300
你刚才举的zoom的例子

1551
0:56:55.300 --> 0:56:57.300
我没有完全懂

1552
0:56:57.300 --> 0:56:59.300
像zoom就像我们背后可以调背景

1553
0:56:59.300 --> 0:57:00.300
对吧

1554
0:57:00.300 --> 0:57:01.300
可以放金门大桥也好

1555
0:57:01.300 --> 0:57:05.300
放一个别人的卧室的照片也好

1556
0:57:05.300 --> 0:57:07.300
然后你说现在有了SAM以后

1557
0:57:07.300 --> 0:57:09.300
我们能够怎么样

1558
0:57:09.300 --> 0:57:13.300
像zoom像各种各样的视频软件

1559
0:57:13.300 --> 0:57:15.300
今天其实他做背景分割的时候

1560
0:57:15.300 --> 0:57:17.300
都还是不是特别的好的

1561
0:57:17.300 --> 0:57:18.300
对吧

1562
0:57:18.300 --> 0:57:20.300
第一个是比如说分割一直在飘

1563
0:57:20.300 --> 0:57:21.300
我戴个眼镜

1564
0:57:21.300 --> 0:57:23.300
或者我的背后有一个桌子

1565
0:57:23.300 --> 0:57:25.300
或者背后走过一个人等等

1566
0:57:25.300 --> 0:57:26.300
大家就会发现说

1567
0:57:26.300 --> 0:57:28.300
他的分割效果是不是最理想的

1568
0:57:28.300 --> 0:57:30.300
有了SAM之后的话

1569
0:57:30.300 --> 0:57:33.300
因为他对于这种分割更加接近于

1570
0:57:33.300 --> 0:57:36.300
我们人所思考的所谓叫semantics

1571
0:57:36.300 --> 0:57:39.300
就更加有这种物体的寓意在

1572
0:57:39.300 --> 0:57:41.300
那么我们可以想见说在将来

1573
0:57:41.300 --> 0:57:43.300
这种物体的分割

1574
0:57:43.300 --> 0:57:44.300
比如说一个我们的前景

1575
0:57:44.300 --> 0:57:46.300
开会的人的屏幕的分割等等

1576
0:57:46.300 --> 0:57:49.300
会变得更加的高效果和低成本

1577
0:57:49.300 --> 0:57:51.300
这些事情我觉得

1578
0:57:51.300 --> 0:57:53.300
可能没有像JPG那么的惊艳

1579
0:57:53.300 --> 0:57:55.300
就是没有那么大的一个跳遍

1580
0:57:55.300 --> 0:57:57.300
但是从一个computer vision老兵的

1581
0:57:57.300 --> 0:57:59.300
这个角度来看的话

1582
0:57:59.300 --> 0:58:01.300
我觉得它还是非常有价值的

1583
0:58:01.300 --> 0:58:03.300
对 所以说我也是蛮期待的

1584
0:58:03.300 --> 0:58:08.300
不管是在文本还是图像还是视频

1585
0:58:08.300 --> 0:58:11.300
都希望这个大模型能够让

1586
0:58:11.300 --> 0:58:12.300
不做大模型的人

1587
0:58:12.300 --> 0:58:13.300
但是做应用的人

1588
0:58:13.300 --> 0:58:15.300
能够往前跨一大步

1589
0:58:15.300 --> 0:58:18.300
我觉得这个还是让人蛮期待的

1590
0:58:18.300 --> 0:58:20.300
其实我还有一个问题

1591
0:58:20.300 --> 0:58:22.300
稍微跟技术有关

1592
0:58:22.300 --> 0:58:24.300
但不是一个纯技术的问题

1593
0:58:24.300 --> 0:58:27.300
就是现在这个AI的发展

1594
0:58:27.300 --> 0:58:29.300
尤其是过去几个月

1595
0:58:29.300 --> 0:58:30.300
我相信你也有同感

1596
0:58:30.300 --> 0:58:31.300
就是发展得很快

1597
0:58:31.300 --> 0:58:33.300
至少是每个礼拜都是

1598
0:58:33.300 --> 0:58:36.300
恨不得有好几个比较大的新闻

1599
0:58:36.300 --> 0:58:39.300
比较大的一些技术的突破也好

1600
0:58:39.300 --> 0:58:40.300
或者产品的突破也好

1601
0:58:40.300 --> 0:58:42.300
我觉得都是有不少

1602
0:58:42.300 --> 0:58:45.300
你觉得这个是一件好事吗

1603
0:58:45.300 --> 0:58:47.300
我觉得是一个好事

1604
0:58:47.300 --> 0:58:48.300
我可能稍微有一点

1605
0:58:48.300 --> 0:58:50.300
偏达尔文主义者一点

1606
0:58:50.300 --> 0:58:51.300
咱们问这个问题的背景

1607
0:58:51.300 --> 0:58:53.300
可能就是说大家会担心说

1608
0:58:53.300 --> 0:58:54.300
技术的迅速的发展

1609
0:58:54.300 --> 0:58:57.300
是不是会带来一些社会和伦理的角度

1610
0:58:57.300 --> 0:59:00.300
我们还没有想清楚的事情

1611
0:59:00.300 --> 0:59:03.300
我觉得基本上那么多年的历史过来

1612
0:59:03.300 --> 0:59:05.300
我们会发现的是说

1613
0:59:05.300 --> 0:59:09.300
技术进步到最后都还是一个好事

1614
0:59:09.300 --> 0:59:11.300
一定程度上我们可以相信说

1615
0:59:11.300 --> 0:59:13.300
我们的人性和社会制度

1616
0:59:13.300 --> 0:59:14.300
是能够让我们在发展当中

1617
0:59:14.300 --> 0:59:17.300
不断地来思考怎么兜底的问题的

1618
0:59:17.300 --> 0:59:18.300
之前的时候举个例子

1619
0:59:18.300 --> 0:59:20.300
比如说计算器刚出来的时候

1620
0:59:20.300 --> 0:59:22.300
我们会觉得说完了

1621
0:59:22.300 --> 0:59:25.300
将来小孩都不会算加点乘除了

1622
0:59:25.300 --> 0:59:27.300
然后发现说其实并没有

1623
0:59:27.300 --> 0:59:29.300
我自己的一个强烈的感觉是说

1624
0:59:29.300 --> 0:59:30.300
技术的进步会使得我们

1625
0:59:30.300 --> 0:59:32.300
整个社会的生产力提高

1626
0:59:32.300 --> 0:59:35.300
生产力提高之后蛋糕就会做得更大

1627
0:59:35.300 --> 0:59:36.300
蛋糕做得更大

1628
0:59:36.300 --> 0:59:38.300
是我们每一个人能够分到

1629
0:59:38.300 --> 0:59:41.300
更多蛋糕的一个基础

1630
0:59:41.300 --> 0:59:42.300
蛋糕做小了谁都不开心

1631
0:59:42.300 --> 0:59:43.300
蛋糕做大了

1632
0:59:43.300 --> 0:59:45.300
我们总能够找到一个

1633
0:59:45.300 --> 0:59:46.300
更加合理的分配方式

1634
0:59:46.300 --> 0:59:48.300
让大家都开心起来

1635
0:59:48.300 --> 0:59:49.300
以前改革开放的时候

1636
0:59:49.300 --> 0:59:51.300
说发展是硬道理

1637
0:59:51.300 --> 0:59:52.300
还是很相关的

1638
0:59:52.300 --> 0:59:53.300
所以技术也是一样

1639
0:59:53.300 --> 0:59:54.300
发展是硬道理

1640
0:59:54.300 --> 0:59:56.300
从这个角度上来讲

1641
0:59:56.300 --> 0:59:58.300
你是觉得蛋糕会变大

1642
0:59:58.300 --> 1:00:00.300
当然这个蛋糕不会平均分

1643
1:00:00.300 --> 1:00:02.300
但是从平均的角度上来讲

1644
1:00:02.300 --> 1:00:03.300
每个人分到的蛋糕

1645
1:00:03.300 --> 1:00:05.300
是会比以前更多

1646
1:00:05.300 --> 1:00:08.300
这里面有一个很实际的问题

1647
1:00:08.300 --> 1:00:10.300
就是蛋糕有可能变得

1648
1:00:10.300 --> 1:00:13.300
不管是一倍大两倍三倍

1649
1:00:13.300 --> 1:00:14.300
确实大很多了

1650
1:00:14.300 --> 1:00:17.300
但是分到给我个人的

1651
1:00:17.300 --> 1:00:19.300
以前我分到一大块

1652
1:00:19.300 --> 1:00:20.300
以后可能分到一小块

1653
1:00:20.300 --> 1:00:21.300
甚至没有了

1654
1:00:21.300 --> 1:00:22.300
从这个角度上来讲

1655
1:00:22.300 --> 1:00:26.300
你对那些有这方面顾虑的人

1656
1:00:26.300 --> 1:00:28.300
你会有些什么建议

1657
1:00:28.300 --> 1:00:30.300
或者说是想法

1658
1:00:30.300 --> 1:00:32.300
这个我最近在看各种

1659
1:00:32.300 --> 1:00:34.300
关于Chai GPT文章的时候

1660
1:00:34.300 --> 1:00:35.300
我觉得看到的一个

1661
1:00:35.300 --> 1:00:38.300
比较有意思的一个逻辑

1662
1:00:38.300 --> 1:00:39.300
我觉得挺对的

1663
1:00:39.300 --> 1:00:40.300
就是他提到说

1664
1:00:40.300 --> 1:00:43.300
今天我们都担心AI会替代人

1665
1:00:43.300 --> 1:00:44.300
但是其实不是

1666
1:00:44.300 --> 1:00:46.300
是说会AI的人

1667
1:00:46.300 --> 1:00:48.300
会替代掉不会AI的人

1668
1:00:48.300 --> 1:00:50.300
就是其实还是人替代掉人

1669
1:00:50.300 --> 1:00:52.300
那这个事情就像是

1670
1:00:52.300 --> 1:00:53.300
咱们以前的时候

1671
1:00:53.300 --> 1:00:55.300
中国刚刚改革开放的时候

1672
1:00:55.300 --> 1:00:57.300
大家刚开始学计算机的时候

1673
1:00:57.300 --> 1:00:59.300
我们说全民大家都要去学计算机

1674
1:00:59.300 --> 1:01:00.300
因为懂计算机的人

1675
1:01:00.300 --> 1:01:03.300
会替代掉不懂计算机的人

1676
1:01:03.300 --> 1:01:04.300
今天AI可能也是一样

1677
1:01:04.300 --> 1:01:06.300
就是说大家到最后

1678
1:01:06.300 --> 1:01:09.300
都是能够有更加强的学习心

1679
1:01:09.300 --> 1:01:10.300
来学习新技术

1680
1:01:10.300 --> 1:01:11.300
再把这些新技术

1681
1:01:11.300 --> 1:01:13.300
用到自己的工作

1682
1:01:13.300 --> 1:01:15.300
包括生活上去的

1683
1:01:15.300 --> 1:01:17.300
就能够获得更大的红利

1684
1:01:17.300 --> 1:01:19.300
这个事情还是一个硬道理

1685
1:01:19.300 --> 1:01:21.300
咱们传统文化上面说学习

1686
1:01:21.300 --> 1:01:23.300
他就说学习永远都没错

1687
1:01:23.300 --> 1:01:25.300
所以这个建议可能也相对比较的

1688
1:01:25.300 --> 1:01:26.300
老气横秋一点

1689
1:01:26.300 --> 1:01:28.300
就是说是说看见有新东西

1690
1:01:28.300 --> 1:01:29.300
我们就学

1691
1:01:29.300 --> 1:01:31.300
学了之后来学以致用

1692
1:01:31.300 --> 1:01:33.300
然后最后那就肯定不会被淘汰

1693
1:01:33.300 --> 1:01:35.300
如果说真的说被淘汰了

1694
1:01:35.300 --> 1:01:37.300
只能够就是说依赖社会制度

1695
1:01:37.300 --> 1:01:40.300
对杨庆你的这些想法也好

1696
1:01:40.300 --> 1:01:41.300
或者说观点也好

1697
1:01:41.300 --> 1:01:44.300
跟我个人的也是非常接近

1698
1:01:44.300 --> 1:01:46.300
上个礼拜我在欧洲的时候

1699
1:01:46.300 --> 1:01:49.300
在一个大学里面也做了一个演讲

1700
1:01:49.300 --> 1:01:51.300
也是其实关于这个话题的

1701
1:01:51.300 --> 1:01:53.300
大学里面也有那个学校的教授

1702
1:01:53.300 --> 1:01:55.300
副校长也来听

1703
1:01:55.300 --> 1:01:57.300
他们提的一个问题

1704
1:01:57.300 --> 1:02:00.300
就是对教育应该有些什么样的改变

1705
1:02:00.300 --> 1:02:02.300
我其实也想听听

1706
1:02:02.300 --> 1:02:04.300
你对这个问题的想法

1707
1:02:04.300 --> 1:02:06.300
因为我父母他们都是退休的教师

1708
1:02:06.300 --> 1:02:08.300
所以说提到教育

1709
1:02:08.300 --> 1:02:10.300
我觉得我自己还是挺有感受的

1710
1:02:10.300 --> 1:02:11.300
我父母也是老师

1711
1:02:11.300 --> 1:02:12.300
教师世家

1712
1:02:12.300 --> 1:02:14.300
大家现在都在担心一点

1713
1:02:14.300 --> 1:02:19.300
就是说像chat gpt会造成更多作弊等等

1714
1:02:19.300 --> 1:02:20.300
我觉得这个事情

1715
1:02:20.300 --> 1:02:22.300
其实已经从那上来说

1716
1:02:22.300 --> 1:02:24.300
不是什么坏事

1717
1:02:24.300 --> 1:02:26.300
就像打字打得快的人

1718
1:02:26.300 --> 1:02:28.300
总会比打字打得慢的人

1719
1:02:28.300 --> 1:02:29.300
要更有优势一些

1720
1:02:29.300 --> 1:02:31.300
包括写字写得快的

1721
1:02:31.300 --> 1:02:33.300
都会比写字写得慢的要有优势一些

1722
1:02:33.300 --> 1:02:35.300
所以如果说我们把chat gpt

1723
1:02:35.300 --> 1:02:38.300
当成是一个更加有效的工具的话

1724
1:02:38.300 --> 1:02:39.300
那么我觉得教育这一块

1725
1:02:39.300 --> 1:02:42.300
我们也会更加进一步的去改变

1726
1:02:42.300 --> 1:02:44.300
改变教育的方式

1727
1:02:44.300 --> 1:02:46.300
把这些能力都逐渐的揉到

1728
1:02:46.300 --> 1:02:48.300
我们的教育的内容

1729
1:02:48.300 --> 1:02:49.300
教育的体系里头去

1730
1:02:49.300 --> 1:02:50.300
往回数40年

1731
1:02:50.300 --> 1:02:53.300
基本上咱们国内是没有计算机这门课程的

1732
1:02:53.300 --> 1:02:54.300
那计算机出来了

1733
1:02:54.300 --> 1:02:56.300
它是一个很好的工具

1734
1:02:56.300 --> 1:02:59.300
甚至在高中都有一些计算机学习的课程出来了

1735
1:02:59.300 --> 1:03:00.300
人工智能可能将来的时候

1736
1:03:00.300 --> 1:03:02.300
并不一定只是chat gpt

1737
1:03:02.300 --> 1:03:04.300
人工智能可能也会就是越来越多的

1738
1:03:04.300 --> 1:03:07.300
更好地揉入到我们自己的教育里头去

1739
1:03:07.300 --> 1:03:09.300
这是一个很自然发展的一个过程

1740
1:03:09.300 --> 1:03:11.300
我们人基本上只能想

1741
1:03:11.300 --> 1:03:13.300
咱们寿命最多最多平均寿命

1742
1:03:13.300 --> 1:03:15.300
全球的可能70多岁

1743
1:03:15.300 --> 1:03:16.300
我们学习的年纪

1744
1:03:16.300 --> 1:03:19.300
也就是比如说前大概25年或者前30年

1745
1:03:19.300 --> 1:03:21.300
如果你读phd的话

1746
1:03:21.300 --> 1:03:27.300
那么在30年当中怎么样来揉进足够多的内容

1747
1:03:27.300 --> 1:03:30.300
是一个教育领域越来越挑战的一个事

1748
1:03:30.300 --> 1:03:32.300
因为古代的时候你就读45经就够了

1749
1:03:32.300 --> 1:03:34.300
今天你什么物理化学计算机

1750
1:03:34.300 --> 1:03:35.300
什么新东西都有

1751
1:03:35.300 --> 1:03:38.300
因此的话我们肯定会需要有一种更高效的方式

1752
1:03:38.300 --> 1:03:41.300
把更新的内容都揉到教育体系里面去

1753
1:03:41.300 --> 1:03:45.300
这个我觉得是不由我们自己的意愿所改变的一事

1754
1:03:45.300 --> 1:03:51.300
我们与其去担心说会不会chpt会来形成作弊

1755
1:03:51.300 --> 1:03:54.300
不如来思考说我们怎么样来更加高效地

1756
1:03:54.300 --> 1:03:56.300
让这些更新的技术

1757
1:03:56.300 --> 1:03:58.300
更好地揉到我们的整个教育体系里头去

1758
1:03:58.300 --> 1:04:01.300
我觉得这个可能是一个更加值得问的问题

1759
1:04:01.300 --> 1:04:04.300
最后关于这个话题

1760
1:04:04.300 --> 1:04:05.300
最后再说一个点

1761
1:04:05.300 --> 1:04:10.300
其实很多我们的听众本身就是计算机工程师

1762
1:04:10.300 --> 1:04:11.300
俗称马公

1763
1:04:11.300 --> 1:04:12.300
硅谷很多

1764
1:04:12.300 --> 1:04:13.300
硅谷之外也很多

1765
1:04:13.300 --> 1:04:14.300
国内也很多

1766
1:04:14.300 --> 1:04:17.300
从一个需求量来讲

1767
1:04:17.300 --> 1:04:19.300
你觉得一年以后

1768
1:04:19.300 --> 1:04:20.300
三年以后

1769
1:04:20.300 --> 1:04:21.300
五年以后

1770
1:04:21.300 --> 1:04:25.300
我们对工程师的需求量会减少吗

1771
1:04:25.300 --> 1:04:26.300
我觉得会增多

1772
1:04:26.300 --> 1:04:28.300
最近大家都会比较担心说

1773
1:04:28.300 --> 1:04:29.300
chp都会写代码了

1774
1:04:29.300 --> 1:04:31.300
是不是我们马公就失业了

1775
1:04:31.300 --> 1:04:33.300
我今天下午的时候

1776
1:04:33.300 --> 1:04:35.300
自己在那写一个slack的一个bot

1777
1:04:35.300 --> 1:04:38.300
就是我希望让写一个slackbot

1778
1:04:38.300 --> 1:04:40.300
他能够我直接add他

1779
1:04:40.300 --> 1:04:42.300
他能够在同时去到zoom里头

1780
1:04:42.300 --> 1:04:44.300
帮我建一个zoom的会议

1781
1:04:44.300 --> 1:04:46.300
把这个zoom的会议切回到slack里头

1782
1:04:46.300 --> 1:04:48.300
让大家现场就可以开会

1783
1:04:48.300 --> 1:04:50.300
就我就不需要自己跳到zoom里头去了

1784
1:04:50.300 --> 1:04:53.300
以前写一个我猜可能也得几天吧

1785
1:04:53.300 --> 1:04:54.300
今天我一下午就写完了

1786
1:04:54.300 --> 1:04:55.300
为啥呢

1787
1:04:55.300 --> 1:04:58.300
我让chp说来帮我把这个slackbot的这个框架写一下

1788
1:04:58.300 --> 1:04:59.300
这个zoom的那个怎么建

1789
1:04:59.300 --> 1:05:00.300
你给我再写一遍

1790
1:05:00.300 --> 1:05:02.300
非常快就写完了

1791
1:05:02.300 --> 1:05:04.300
那我觉得这个时候

1792
1:05:04.300 --> 1:05:05.300
不是说他代替了我

1793
1:05:05.300 --> 1:05:07.300
而是他极大的提升了我的生产力

1794
1:05:07.300 --> 1:05:11.300
生产力起来之后需求肯定会起来的

1795
1:05:11.300 --> 1:05:12.300
因为以前的时候大家发现说

1796
1:05:12.300 --> 1:05:13.300
哇中小型的企业

1797
1:05:13.300 --> 1:05:14.300
大家发现说

1798
1:05:14.300 --> 1:05:16.300
哎呀我要雇一个工程师好贵呀

1799
1:05:16.300 --> 1:05:17.300
但现在发现说

1800
1:05:17.300 --> 1:05:19.300
哎呀这个工程师他只需要

1801
1:05:19.300 --> 1:05:21.300
比如说一两个小时在我这工作

1802
1:05:21.300 --> 1:05:23.300
他就能帮我搞定一个应用了

1803
1:05:23.300 --> 1:05:25.300
那他就更加愿意来想说

1804
1:05:25.300 --> 1:05:26.300
那我可以做些什么事情

1805
1:05:26.300 --> 1:05:28.300
还是单狗更大的一个逻辑

1806
1:05:28.300 --> 1:05:30.300
以前我们写个冒泡排序都能赚钱

1807
1:05:30.300 --> 1:05:31.300
现在赚不到钱了

1808
1:05:31.300 --> 1:05:33.300
但是只要我们有能耐

1809
1:05:33.300 --> 1:05:35.300
那这个市场需求更大了

1810
1:05:35.300 --> 1:05:37.300
绝对能够更加有市场

1811
1:05:37.300 --> 1:05:38.300
这个我是充满信心的

1812
1:05:38.300 --> 1:05:40.300
在微软的CEO沙铁

1813
1:05:40.300 --> 1:05:41.300
他的理论就是

1814
1:05:41.300 --> 1:05:45.300
Programmer或者说马公的数量也好

1815
1:05:45.300 --> 1:05:46.300
能量也好

1816
1:05:46.300 --> 1:05:49.300
其实是一个企业的数字货币的多少

1817
1:05:49.300 --> 1:05:51.300
就是说如果我有10个程序员

1818
1:05:51.300 --> 1:05:52.300
有100个程序员

1819
1:05:52.300 --> 1:05:53.300
1000个程序员

1820
1:05:53.300 --> 1:05:55.300
其实是代表我这个公司

1821
1:05:55.300 --> 1:05:57.300
他叫Digital Currency

1822
1:05:57.300 --> 1:05:59.300
其实是我们的公司的一个

1823
1:05:59.300 --> 1:06:01.300
相当于数字货币一样的

1824
1:06:01.300 --> 1:06:02.300
当然了

1825
1:06:02.300 --> 1:06:04.300
我希望我的公司的钱

1826
1:06:04.300 --> 1:06:06.300
数字货币是越多越好

1827
1:06:06.300 --> 1:06:07.300
这是显然的

1828
1:06:07.300 --> 1:06:09.300
今天我可能有100个人

1829
1:06:09.300 --> 1:06:11.300
但我其实是希望有1000个人的

1830
1:06:11.300 --> 1:06:12.300
为什么

1831
1:06:12.300 --> 1:06:14.300
因为1000个人我能够做更多的事情

1832
1:06:14.300 --> 1:06:16.300
但我今天只有100个人是为什么

1833
1:06:16.300 --> 1:06:18.300
因为我养不起1000个人

1834
1:06:18.300 --> 1:06:20.300
所以说我觉得他的要求

1835
1:06:20.300 --> 1:06:22.300
其实1000个还是在那边的

1836
1:06:22.300 --> 1:06:24.300
只是我们今天只能养100个人

1837
1:06:24.300 --> 1:06:25.300
从这一点上来讲

1838
1:06:25.300 --> 1:06:28.300
我不知道对于大厂

1839
1:06:28.300 --> 1:06:31.300
就是五六个超大厂是怎么样子

1840
1:06:31.300 --> 1:06:33.300
但至少对于千千百百

1841
1:06:33.300 --> 1:06:36.300
或者千千万万的绝大多数的企业

1842
1:06:36.300 --> 1:06:38.300
他们今天Digital Currency

1843
1:06:38.300 --> 1:06:40.300
其实是匮乏的

1844
1:06:40.300 --> 1:06:43.300
可能他有100个1000个程序员

1845
1:06:43.300 --> 1:06:46.300
他其实应该有1万个站在边

1846
1:06:46.300 --> 1:06:48.300
所以说像杨清你刚才说的

1847
1:06:48.300 --> 1:06:50.300
工程师的效率能够提高

1848
1:06:50.300 --> 1:06:53.300
其实对这些公司是肯定是有极大的帮助

1849
1:06:53.300 --> 1:06:55.300
对我也是这样的一个观点

1850
1:06:55.300 --> 1:06:57.300
你的老东家阿里

1851
1:06:57.300 --> 1:06:59.300
本周就会马上要发表

1852
1:06:59.300 --> 1:07:02.300
一个他的大模型的大发布会

1853
1:07:02.300 --> 1:07:04.300
其实我们在录这个节目

1854
1:07:04.300 --> 1:07:06.300
是在这个发布会之前

1855
1:07:06.300 --> 1:07:08.300
但是这个节目大家听到的时候

1856
1:07:08.300 --> 1:07:10.300
这个发布会已经开了

1857
1:07:10.300 --> 1:07:13.300
那能不能讲一些你的一些想法

1858
1:07:13.300 --> 1:07:15.300
感想或者说是

1859
1:07:15.300 --> 1:07:17.300
大家应该是去怎么理解

1860
1:07:17.300 --> 1:07:19.300
怎么去看待这件事情

1861
1:07:19.300 --> 1:07:21.300
因为我自己在阿里的时候

1862
1:07:21.300 --> 1:07:23.300
我们团队也是支持大模院

1863
1:07:23.300 --> 1:07:25.300
在上面做大模型的训练跟部署

1864
1:07:25.300 --> 1:07:28.300
所以就是对大模院这边也是挺有感情的

1865
1:07:28.300 --> 1:07:30.300
这一块我觉得国内大厂

1866
1:07:30.300 --> 1:07:32.300
我们大家从一个观众的角度

1867
1:07:32.300 --> 1:07:33.300
今天我失业了

1868
1:07:33.300 --> 1:07:35.300
对吧就可以说的没有那么有压力了

1869
1:07:35.300 --> 1:07:37.300
从一个观众的角度

1870
1:07:37.300 --> 1:07:39.300
其实我觉得大家是会有一点审美疲劳的

1871
1:07:39.300 --> 1:07:40.300
就是百度来一个

1872
1:07:40.300 --> 1:07:41.300
同性来一个

1873
1:07:41.300 --> 1:07:42.300
阿里来一个

1874
1:07:42.300 --> 1:07:43.300
华为来一个对吧

1875
1:07:43.300 --> 1:07:45.300
还有大家各种各样的创业公司来一个

1876
1:07:45.300 --> 1:07:46.300
一方面比较兴奋

1877
1:07:46.300 --> 1:07:48.300
就是大家有非常多的人

1878
1:07:48.300 --> 1:07:50.300
在努力的把这个技术往前走

1879
1:07:50.300 --> 1:07:51.300
另外一方面

1880
1:07:51.300 --> 1:07:53.300
我觉得大厂也会

1881
1:07:53.300 --> 1:07:55.300
逐渐的会开始思考这样一个问题

1882
1:07:55.300 --> 1:08:00.300
就是怎么样从这一系列的进度当中脱颖而出

1883
1:08:00.300 --> 1:08:02.300
所以呢就回到我自己最开始一个观点的话

1884
1:08:02.300 --> 1:08:04.300
我觉得一个基础模型是不够的

1885
1:08:04.300 --> 1:08:08.300
在上面怎么样来拉起百花齐放的各种应用

1886
1:08:08.300 --> 1:08:10.300
其实是一个更加有意思的一个事

1887
1:08:10.300 --> 1:08:11.300
举一个小例子

1888
1:08:11.300 --> 1:08:12.300
前几天的时候

1889
1:08:12.300 --> 1:08:15.300
阿里天猫精灵发布了一个很有意思的一个小应用

1890
1:08:15.300 --> 1:08:18.300
就是他构建了一个脱火车演员

1891
1:08:18.300 --> 1:08:20.300
鸟鸟的一个数字分身吧

1892
1:08:20.300 --> 1:08:22.300
他叫鸟鸟分鸟的

1893
1:08:22.300 --> 1:08:24.300
不管他的技术有多深

1894
1:08:24.300 --> 1:08:27.300
但是我觉得这是一个非常有意思的应用的尝试

1895
1:08:27.300 --> 1:08:29.300
所以呢我个人的一个希望是说

1896
1:08:29.300 --> 1:08:31.300
在这一段时间

1897
1:08:31.300 --> 1:08:35.300
大家所有的都扎堆发布大模型之后

1898
1:08:35.300 --> 1:08:37.300
我个人更希望看到的是说

1899
1:08:37.300 --> 1:08:39.300
后面有更多基于大模型的应用

1900
1:08:39.300 --> 1:08:42.300
能够像雨后春笋的一样来迸发出来

1901
1:08:42.300 --> 1:08:46.300
那这一块的话就其实更加靠产品化的能力

1902
1:08:46.300 --> 1:08:48.300
靠用户需求的能力

1903
1:08:48.300 --> 1:08:51.300
靠对于应用的一个更加深入的理解

1904
1:08:51.300 --> 1:08:54.300
这个我觉得最后才是大模型这一块产业

1905
1:08:54.300 --> 1:08:57.300
能够蓬勃发展的一个核心因素

1906
1:08:57.300 --> 1:09:00.300
所以说虽然也是你的老东家发表的

1907
1:09:00.300 --> 1:09:03.300
你觉得也已经稍微有点生美疲劳了

1908
1:09:03.300 --> 1:09:04.300
是的

1909
1:09:04.300 --> 1:09:09.300
觉得更应该把应用放在大家主要看的

1910
1:09:09.300 --> 1:09:11.300
我就follow up一个问题

1911
1:09:11.300 --> 1:09:14.300
因为尤其是OpenAI的ChartGPT

1912
1:09:14.300 --> 1:09:16.300
GPT4出来以后

1913
1:09:16.300 --> 1:09:18.300
大概是两三个星期前

1914
1:09:18.300 --> 1:09:20.300
他公布了一个plugin的一个概念

1915
1:09:20.300 --> 1:09:22.300
以后不管你是订飞机票

1916
1:09:22.300 --> 1:09:23.300
订船票

1917
1:09:23.300 --> 1:09:24.300
做任何事情

1918
1:09:24.300 --> 1:09:26.300
去餐馆买东西也好

1919
1:09:26.300 --> 1:09:29.300
都只要做一个大模型的插件

1920
1:09:29.300 --> 1:09:31.300
所以说你以后只要跟ChartGPT

1921
1:09:31.300 --> 1:09:35.300
或者说GPT5 GPT6去交流

1922
1:09:35.300 --> 1:09:36.300
就能够买到机票

1923
1:09:36.300 --> 1:09:38.300
那从这个角度上来讲

1924
1:09:38.300 --> 1:09:42.300
他其实是把应用这个概念已经大大的改变了

1925
1:09:42.300 --> 1:09:45.300
就应用就被吸收到这个大模型里面去了

1926
1:09:45.300 --> 1:09:47.300
你是怎么看待这件事情

1927
1:09:47.300 --> 1:09:50.300
我觉得这是一个非常有道理的一个变化

1928
1:09:50.300 --> 1:09:52.300
这个相关的最近

1929
1:09:52.300 --> 1:09:54.300
Hashicorp的创始人Mitchell Hashimoto

1930
1:09:54.300 --> 1:09:55.300
写了一篇文章

1931
1:09:55.300 --> 1:09:57.300
我觉得挺值得读的

1932
1:09:57.300 --> 1:09:59.300
他说一个颠覆性的技术

1933
1:09:59.300 --> 1:10:00.300
真正要落地的时候

1934
1:10:00.300 --> 1:10:02.300
都会需要有一个相对应的

1935
1:10:02.300 --> 1:10:06.300
渐进式的变化的那么一个道路

1936
1:10:06.300 --> 1:10:08.300
因此的话就比如说像ChartGPT

1937
1:10:08.300 --> 1:10:11.300
如果说只是纯一个ChartBot的话

1938
1:10:11.300 --> 1:10:13.300
他和今天的应用就怎么样顺畅的迁移

1939
1:10:13.300 --> 1:10:15.300
跟结合是不太清楚的

1940
1:10:15.300 --> 1:10:18.300
但是plugin我觉得exactly的

1941
1:10:18.300 --> 1:10:20.300
就和Hashimoto讲的比较像

1942
1:10:20.300 --> 1:10:24.300
就是他其实是在寻找一个现有的应用

1943
1:10:24.300 --> 1:10:27.300
和人工智能的算法之间的一个

1944
1:10:27.300 --> 1:10:29.300
顺畅迁移的一点

1945
1:10:29.300 --> 1:10:30.300
首先拿ChartGPT

1946
1:10:30.300 --> 1:10:33.300
用自然语言的方式来识别用户的意图

1947
1:10:33.300 --> 1:10:34.300
这个意图识别完了之后

1948
1:10:34.300 --> 1:10:36.300
我通过plugin的一个方式

1949
1:10:36.300 --> 1:10:39.300
再来用传统的编程结构化的方式

1950
1:10:39.300 --> 1:10:40.300
来实现最后的

1951
1:10:40.300 --> 1:10:41.300
无论是机票的交易

1952
1:10:41.300 --> 1:10:44.300
还是商品的采购等等这一系列的事

1953
1:10:44.300 --> 1:10:46.300
他和以前不一样的一点是说

1954
1:10:46.300 --> 1:10:48.300
交互变得更加自然了

1955
1:10:48.300 --> 1:10:49.300
虽然背后的操作

1956
1:10:49.300 --> 1:10:51.300
最后的各种各样的决策过程

1957
1:10:51.300 --> 1:10:53.300
依然都还是需要来编程实现的

1958
1:10:53.300 --> 1:10:55.300
那他就有一个比较顺畅的迁移过程

1959
1:10:55.300 --> 1:10:58.300
我觉得与其说是各种应用

1960
1:10:58.300 --> 1:11:00.300
被吸收到了ChartGPT里头

1961
1:11:00.300 --> 1:11:03.300
反过头来可以说大模型的AI的算法

1962
1:11:03.300 --> 1:11:05.300
开始变成了应用里面的一个

1963
1:11:05.300 --> 1:11:06.300
颇为活缺的一部分

1964
1:11:06.300 --> 1:11:08.300
这个事情前几年也有过

1965
1:11:08.300 --> 1:11:10.300
大家可能还记得Facebook

1966
1:11:10.300 --> 1:11:11.300
出过一个叫Facebook M

1967
1:11:11.300 --> 1:11:13.300
就是在Facebook Messenger里面

1968
1:11:13.300 --> 1:11:16.300
能够来做一些类似的操作

1969
1:11:16.300 --> 1:11:17.300
订餐馆拿订酒店拿

1970
1:11:17.300 --> 1:11:20.300
谷歌几年前应该也发布过一个

1971
1:11:20.300 --> 1:11:22.300
我忘了是哪年的谷歌IO里面

1972
1:11:22.300 --> 1:11:23.300
讲到这个了

1973
1:11:23.300 --> 1:11:24.300
但当时的时候

1974
1:11:24.300 --> 1:11:28.300
技术上没有像大模型来的那么的深入

1975
1:11:28.300 --> 1:11:29.300
来的那么的鲁邦

1976
1:11:29.300 --> 1:11:30.300
同时的话

1977
1:11:30.300 --> 1:11:32.300
这个应用也没有走得太远

1978
1:11:32.300 --> 1:11:34.300
今天的话这个系统模型

1979
1:11:34.300 --> 1:11:36.300
这一侧变得更加的鲁邦了

1980
1:11:36.300 --> 1:11:39.300
希望这次应用上面能够爆发一把

1981
1:11:39.300 --> 1:11:41.300
这是我自己一个个人的愿望

1982
1:11:41.300 --> 1:11:43.300
但是从这个角度上来讲

1983
1:11:43.300 --> 1:11:45.300
当年移动出来的时候

1984
1:11:45.300 --> 1:11:47.300
或者说苹果手机出来以后

1985
1:11:47.300 --> 1:11:50.300
突然之间有了成千上万个应用

1986
1:11:50.300 --> 1:11:53.300
那现在会不会产生一个情况

1987
1:11:53.300 --> 1:11:57.300
就是说有了GPT或者说GPT的

1988
1:11:57.300 --> 1:11:58.300
后代的接下去

1989
1:11:58.300 --> 1:12:00.300
几代的大模型出来以后

1990
1:12:00.300 --> 1:12:04.300
没有那么多的新的开发者

1991
1:12:04.300 --> 1:12:06.300
因为他把过去的东西

1992
1:12:06.300 --> 1:12:08.300
接上去太容易了

1993
1:12:08.300 --> 1:12:09.300
我的意思就是说这个应用

1994
1:12:09.300 --> 1:12:11.300
虽然说是应用仍然在那边

1995
1:12:11.300 --> 1:12:13.300
但是应用其实被大模型

1996
1:12:13.300 --> 1:12:15.300
就已经吸收掉了

1997
1:12:15.300 --> 1:12:16.300
对于不管是编程者

1998
1:12:16.300 --> 1:12:17.300
或者说怎么样

1999
1:12:17.300 --> 1:12:19.300
其实没有那么多事情可以去做了

2000
1:12:19.300 --> 1:12:21.300
这个我不知道你是怎么去想的

2001
1:12:21.300 --> 1:12:23.300
我觉得倒是还是有不少事情

2002
1:12:23.300 --> 1:12:25.300
可以去做的

2003
1:12:25.300 --> 1:12:26.300
就举个例子吧

2004
1:12:26.300 --> 1:12:27.300
拿我刚才说的

2005
1:12:27.300 --> 1:12:29.300
Slack里头的Sum的聊天机器人

2006
1:12:29.300 --> 1:12:30.300
来说的话

2007
1:12:30.300 --> 1:12:31.300
我还是需要来

2008
1:12:31.300 --> 1:12:33.300
把各种各样的实际的逻辑

2009
1:12:33.300 --> 1:12:34.300
给搞清楚的

2010
1:12:34.300 --> 1:12:36.300
我会用一个XGPT的API来识别

2011
1:12:36.300 --> 1:12:39.300
说我发给聊天机器人的一句话

2012
1:12:39.300 --> 1:12:42.300
是不是让我再打开一个Sum的链接

2013
1:12:42.300 --> 1:12:44.300
或者开一个Sum的会议

2014
1:12:44.300 --> 1:12:47.300
我觉得整体上面的应用的逻辑

2015
1:12:47.300 --> 1:12:49.300
还是要靠人来想的

2016
1:12:49.300 --> 1:12:50.300
就像是比如说我们今天

2017
1:12:50.300 --> 1:12:53.300
如果说公司雇一个COO

2018
1:12:53.300 --> 1:12:54.300
完了之后

2019
1:12:54.300 --> 1:12:56.300
COO能够解决很多的各种各样的

2020
1:12:56.300 --> 1:12:59.300
所谓叫Operational这一块的问题

2021
1:12:59.300 --> 1:13:00.300
但是最后公司要做什么

2022
1:13:00.300 --> 1:13:02.300
这个事情还是得靠COO来想事

2023
1:13:02.300 --> 1:13:04.300
只不过有了COO之后

2024
1:13:04.300 --> 1:13:07.300
COO就如骨天意的可以想更多的事了

2025
1:13:07.300 --> 1:13:09.300
所以我觉得倒是不太会出现说

2026
1:13:09.300 --> 1:13:11.300
所有的应用都一下子被吸收到了

2027
1:13:11.300 --> 1:13:12.300
一个工具里头去

2028
1:13:12.300 --> 1:13:13.300
这种情况

2029
1:13:13.300 --> 1:13:14.300
永远是工具为应用服务

2030
1:13:14.300 --> 1:13:16.300
而不是应用为工具服务的

2031
1:13:16.300 --> 1:13:18.300
它能够起到的作用

2032
1:13:18.300 --> 1:13:21.300
不是说所有的应用都在大模型里面了

2033
1:13:21.300 --> 1:13:23.300
而是说它是一个Dispatch的

2034
1:13:23.300 --> 1:13:24.300
或者说是一个

2035
1:13:24.300 --> 1:13:27.300
就像你刚才说的COO的这么一个角色

2036
1:13:27.300 --> 1:13:29.300
但是还会有不同的functional department

2037
1:13:29.300 --> 1:13:32.300
不同的部门去做不同的事情

2038
1:13:32.300 --> 1:13:35.300
但是COO会去做这么一个协调

2039
1:13:35.300 --> 1:13:38.300
或者说是去分发的这么一个作用

2040
1:13:38.300 --> 1:13:39.300
对 是的

2041
1:13:39.300 --> 1:13:40.300
好的 好的

2042
1:13:40.300 --> 1:13:42.300
谢谢杨青今天分享了这么多

2043
1:13:42.300 --> 1:13:46.300
希望你在创业之路上面好运

2044
1:13:46.300 --> 1:13:48.300
也希望以后返场来

2045
1:13:48.300 --> 1:13:49.300
讲一讲一路走来

2046
1:13:49.300 --> 1:13:52.300
有些什么新的收获 新的学习吧

2047
1:13:52.300 --> 1:13:54.300
好呀 多谢郝伟旭老师的邀请

2048
1:13:54.300 --> 1:13:56.300
也希望能够做出一些东西来

2049
1:13:56.300 --> 1:13:57.300
对大家有用

2050
1:13:57.300 --> 1:13:59.300
然后也希望将来再有机会

2051
1:13:59.300 --> 1:14:00.300
再来做分享

2052
1:14:00.300 --> 1:14:02.300
好 谢谢你 谢谢大家

2053
1:14:30.300 --> 1:14:32.300
那同时公众号和微博

2054
1:14:32.300 --> 1:14:34.300
也可以搜索声乐活泼

2055
1:14:34.300 --> 1:14:35.300
声是声音的声

2056
1:14:35.300 --> 1:14:37.300
节目相关的更多信息

2057
1:14:37.300 --> 1:14:39.300
会在公众号里出现

2058
1:14:39.300 --> 1:14:40.300
微博和公众号

2059
1:14:40.300 --> 1:14:42.300
都会有不定期的福利给到大家

2060
1:14:42.300 --> 1:14:43.300
如果你想要跟我们

2061
1:14:43.300 --> 1:14:46.300
更加紧密的讨论和分享

2062
1:14:46.300 --> 1:14:47.300
或者想要认识和你一样

2063
1:14:47.300 --> 1:14:49.300
有求知欲的新朋友

2064
1:14:49.300 --> 1:14:51.300
可以加入我们的微信群

2065
1:14:51.300 --> 1:14:53.300
进入听众群的方法是

2066
1:14:53.300 --> 1:14:56.300
在公众号文章中扫码添加

2067
1:14:56.300 --> 1:14:58.300
或者是公众号后台回复

2068
1:14:58.300 --> 1:15:01.300
科技早知道即可获取邀请码

2069
1:15:01.300 --> 1:15:02.300
期待你的加入

2070
1:15:02.300 --> 1:15:28.300
我们下期见

